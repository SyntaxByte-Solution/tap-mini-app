import { programGateBeet } from '@metaplex-foundation/mpl-candy-guard';
import * as beet from '@metaplex-foundation/beet';
import { MaximumOfFiveAdditionalProgramsError } from '../errors.mjs';

const MAXIMUM_SIZE = 5;
const SETTINGS_BYTES = 4 + MAXIMUM_SIZE * 32;

/** @internal */
const programGateGuardManifest = {
  name: 'programGate',
  settingsBytes: SETTINGS_BYTES,
  settingsSerializer: {
    description: programGateBeet.description,
    serialize: value => {
      // Maximum of 5 additional programs allowed.
      if (value.additional.length >= MAXIMUM_SIZE) {
        throw new MaximumOfFiveAdditionalProgramsError();
      }

      // Create buffer with beet.
      const fixedBeet = programGateBeet.toFixedFromValue(value);
      const writer = new beet.BeetWriter(fixedBeet.byteSize);
      writer.write(fixedBeet, value);

      // Create 164 byte buffer and fill with previous buffer.
      // This allows for < 5 additional programs.
      const bufferFullSize = Buffer.alloc(SETTINGS_BYTES);
      bufferFullSize.fill(writer.buffer);
      return bufferFullSize;
    },
    deserialize: (buffer, offset) => {
      const fixedBeet = programGateBeet.toFixedFromData(buffer, offset ?? 0);
      const reader = new beet.BeetReader(buffer, offset ?? 0);
      const value = reader.read(fixedBeet);
      return [value, reader.offset];
    }
  }
};

export { programGateGuardManifest };
//# sourceMappingURL=programGate.mjs.map
