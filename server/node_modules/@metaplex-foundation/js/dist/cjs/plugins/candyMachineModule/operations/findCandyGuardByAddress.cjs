'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Account = require('../../../types/Account.cjs');
var CandyGuard = require('../models/CandyGuard.cjs');

// -----------------
// Operation
// -----------------

const Key = 'FindCandyGuardByAddressOperation';

/**
 * Find an existing Candy Guard by its address.
 *
 * ```ts
 * const candyGuard = await metaplex
 *   .candyMachines()
 *   .findCandyGuardbyAddress({ address };
 * ```
 *
 * @group Operations
 * @category Constructors
 */
const findCandyGuardByAddressOperation = _findCandyGuardByAddressOperation;
// eslint-disable-next-line @typescript-eslint/naming-convention
function _findCandyGuardByAddressOperation(input) {
  return {
    key: Key,
    input
  };
}
_findCandyGuardByAddressOperation.key = Key;

/**
 * @group Operations
 * @category Types
 */

/**
 * @group Operations
 * @category Handlers
 */
const findCandyGuardByAddressOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const {
      address
    } = operation.input;
    const account = await metaplex.rpc().getAccount(address, scope.commitment);
    Account.assertAccountExists(account);
    return CandyGuard.toCandyGuard(account, metaplex);
  }
};

exports.findCandyGuardByAddressOperation = findCandyGuardByAddressOperation;
exports.findCandyGuardByAddressOperationHandler = findCandyGuardByAddressOperationHandler;
//# sourceMappingURL=findCandyGuardByAddress.cjs.map
