this.globalThis = this.globalThis || {};
this.globalThis.solanaWeb3 = (function (exports) {
	'use strict';

	var S=e=>({__option:"Some",value:e}),T=()=>({__option:"None"}),m=e=>!!(e&&typeof e=="object"&&"__option"in e&&(e.__option==="Some"&&"value"in e||e.__option==="None")),d=e=>e.__option==="Some",M=e=>e.__option==="None";function E(e,r,n=0){if(r.length-n<=0)throw new Error(`Codec [${e}] cannot decode empty byte arrays.`)}function v(e,r,n,t=0){let o=n.length-t;if(o<r)throw new Error(`Codec [${e}] expected ${r} bytes, got ${o}.`)}function F(e,r){return "fixedSize"in r?r.fixedSize:r.getSizeFromValue(e)}function l(e){return Object.freeze({...e,encode:r=>{let n=new Uint8Array(F(r,e));return e.write(r,n,0),n}})}function U(e){return Object.freeze({...e,decode:(r,n=0)=>e.read(r,n)[0]})}function c(e){return "fixedSize"in e&&typeof e.fixedSize=="number"}function z(e,r){if(!c(e))throw new Error(r!=null?r:"Expected a fixed-size codec, got a variable-size one.")}function w(e,r){if(c(e)!==c(r))throw new Error("Encoder and decoder must either both be fixed-size or variable-size.");if(c(e)&&c(r)&&e.fixedSize!==r.fixedSize)throw new Error(`Encoder and decoder must have the same fixed size, got [${e.fixedSize}] and [${r.fixedSize}].`);if(!c(e)&&!c(r)&&e.maxSize!==r.maxSize)throw new Error(`Encoder and decoder must have the same max size, got [${e.maxSize}] and [${r.maxSize}].`);return {...r,...e,decode:r.decode,encode:e.encode,read:r.read,write:e.write}}function _(e,r,n,t){if(t<r||t>n)throw new Error(`Codec [${e}] expected number to be in the range [${r}, ${n}], got ${t}.`)}function N(e){return (e==null?void 0:e.endian)!==1}function V(e){return l({fixedSize:e.size,write(r,n,t){e.range&&_(e.name,e.range[0],e.range[1],r);let o=new ArrayBuffer(e.size);return e.set(new DataView(o),r,N(e.config)),n.set(new Uint8Array(o),t),t+e.size}})}function $(e){return U({fixedSize:e.size,read(r,n=0){E(e.name,r,n),v(e.name,e.size,r,n);let t=new DataView(j(r,n,e.size));return [e.get(t,N(e.config)),n+e.size]}})}function j(e,r,n){let t=e.byteOffset+(r!=null?r:0),o=n!=null?n:e.byteLength;return e.buffer.slice(t,t+o)}var I=()=>V({name:"u8",range:[0,+"0xff"],set:(e,r)=>e.setUint8(0,r),size:1}),y=()=>$({get:e=>e.getUint8(0),name:"u8",size:1});function W(e,r){return d(e)?e.value:r?r():null}var C=e=>e!==null?S(e):T();function L(e,r={}){var O,x,g;let n=(O=r.prefix)!=null?O:I(),t=(x=r.fixed)!=null?x:!1,o=c(e)&&c(n)&&e.fixedSize===0;if(t||o){z(e,"Fixed options can only be used with fixed-size codecs."),z(n,"Fixed options can only be used with fixed-size prefix.");let a=n.fixedSize+e.fixedSize;return l({fixedSize:a,write:(i,f,s)=>{let u=m(i)?i:C(i),b=n.write(Number(d(u)),f,s);return d(u)&&e.write(u.value,f,b),s+a}})}return l({getSizeFromValue:a=>{let i=m(a)?a:C(a);return F(Number(d(i)),n)+(d(i)?F(i.value,e):0)},maxSize:(g=h([n,e].map(D)))!=null?g:void 0,write:(a,i,f)=>{let s=m(a)?a:C(a);return f=n.write(Number(d(s)),i,f),d(s)&&(f=e.write(s.value,i,f)),f}})}function k(e,r={}){var x,g,a;let n=(x=r.prefix)!=null?x:y(),t=(g=r.fixed)!=null?g:!1,o=null,O=c(e)&&c(n)&&e.fixedSize===0;return (t||O)&&(z(e,"Fixed options can only be used with fixed-size codecs."),z(n,"Fixed options can only be used with fixed-size prefix."),o=n.fixedSize+e.fixedSize),U({...o===null?{maxSize:(a=h([n,e].map(D)))!=null?a:void 0}:{fixedSize:o},read:(i,f)=>{if(i.length-f<=0)return [T(),f];let[s,u]=n.read(i,f);if(s===0)return [T(),o!==null?f+o:u];let[b,A]=e.read(i,u);return [S(b),o!==null?f+o:A]}})}function Ue(e,r={}){return w(L(e,r),k(e,r))}function h(e){return e.reduce((r,n)=>r===null||n===null?null:r+n,0)}function D(e){var r;return c(e)?e.fixedSize:(r=e.maxSize)!=null?r:null}function B(e,r){if(!e||ArrayBuffer.isView(e))return e;let n=t=>r?B(t,r):B(t);return m(e)?d(e)?n(e.value):r?r():null:Array.isArray(e)?e.map(n):typeof e=="object"?Object.fromEntries(Object.entries(e).map(([t,o])=>[t,n(o)])):e}

	exports.getOptionCodec = Ue;
	exports.getOptionDecoder = k;
	exports.getOptionEncoder = L;
	exports.isNone = M;
	exports.isOption = m;
	exports.isSome = d;
	exports.none = T;
	exports.some = S;
	exports.unwrapOption = W;
	exports.unwrapOptionRecursively = B;
	exports.wrapNullable = C;

	return exports;

})({});
