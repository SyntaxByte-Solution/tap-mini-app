import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.mjs';
import { ProgramNotRecognizedError } from '../../errors/SdkError.mjs';

/**
 * @group Modules
 */
class ProgramClient {
  constructor(metaplex) {
    _defineProperty(this, "programs", []);
    this.metaplex = metaplex;
  }
  register(program) {
    this.programs.unshift(program);
  }
  all(overrides = []) {
    return [...overrides, ...this.programs];
  }
  allForCluster(cluster, overrides = []) {
    return this.all(overrides).filter(program => {
      return program.clusterFilter?.(cluster) ?? true;
    });
  }
  allForCurrentCluster(overrides = []) {
    return this.allForCluster(this.metaplex.cluster, overrides);
  }
  get(nameOrAddress, overrides = []) {
    const programs = this.allForCurrentCluster(overrides);
    const program = typeof nameOrAddress === 'string' ? programs.find(program => program.name === nameOrAddress) : programs.find(program => program.address.equals(nameOrAddress));
    if (!program) {
      throw new ProgramNotRecognizedError(nameOrAddress, this.metaplex.cluster);
    }
    return program;
  }
}

export { ProgramClient };
//# sourceMappingURL=ProgramClient.mjs.map
