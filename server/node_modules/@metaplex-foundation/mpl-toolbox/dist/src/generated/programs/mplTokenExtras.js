"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMplTokenExtrasProgramId = exports.getMplTokenExtrasProgram = exports.createMplTokenExtrasProgram = exports.MPL_TOKEN_EXTRAS_PROGRAM_ID = void 0;
const errors_1 = require("../errors");
exports.MPL_TOKEN_EXTRAS_PROGRAM_ID = 'TokExjvjJmhKaRBShsBAsbSvEWMA1AgUNK7ps4SAc2p';
function createMplTokenExtrasProgram() {
    return {
        name: 'mplTokenExtras',
        publicKey: exports.MPL_TOKEN_EXTRAS_PROGRAM_ID,
        getErrorFromCode(code, cause) {
            return (0, errors_1.getMplTokenExtrasErrorFromCode)(code, this, cause);
        },
        getErrorFromName(name, cause) {
            return (0, errors_1.getMplTokenExtrasErrorFromName)(name, this, cause);
        },
        isOnCluster() {
            return true;
        },
    };
}
exports.createMplTokenExtrasProgram = createMplTokenExtrasProgram;
function getMplTokenExtrasProgram(context, clusterFilter) {
    return context.programs.get('mplTokenExtras', clusterFilter);
}
exports.getMplTokenExtrasProgram = getMplTokenExtrasProgram;
function getMplTokenExtrasProgramId(context, clusterFilter) {
    return context.programs.getPublicKey('mplTokenExtras', exports.MPL_TOKEN_EXTRAS_PROGRAM_ID, clusterFilter);
}
exports.getMplTokenExtrasProgramId = getMplTokenExtrasProgramId;
//# sourceMappingURL=mplTokenExtras.js.map