"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.guardSetBeet = void 0;
const beet = __importStar(require("@metaplex-foundation/beet"));
const BotTax_1 = require("./BotTax");
const SolPayment_1 = require("./SolPayment");
const TokenPayment_1 = require("./TokenPayment");
const StartDate_1 = require("./StartDate");
const ThirdPartySigner_1 = require("./ThirdPartySigner");
const TokenGate_1 = require("./TokenGate");
const Gatekeeper_1 = require("./Gatekeeper");
const EndDate_1 = require("./EndDate");
const AllowList_1 = require("./AllowList");
const MintLimit_1 = require("./MintLimit");
const NftPayment_1 = require("./NftPayment");
const RedeemedAmount_1 = require("./RedeemedAmount");
const AddressGate_1 = require("./AddressGate");
const NftGate_1 = require("./NftGate");
const NftBurn_1 = require("./NftBurn");
const TokenBurn_1 = require("./TokenBurn");
const FreezeSolPayment_1 = require("./FreezeSolPayment");
const FreezeTokenPayment_1 = require("./FreezeTokenPayment");
const ProgramGate_1 = require("./ProgramGate");
const Allocation_1 = require("./Allocation");
exports.guardSetBeet = new beet.FixableBeetArgsStruct([
    ['botTax', beet.coption(BotTax_1.botTaxBeet)],
    ['solPayment', beet.coption(SolPayment_1.solPaymentBeet)],
    ['tokenPayment', beet.coption(TokenPayment_1.tokenPaymentBeet)],
    ['startDate', beet.coption(StartDate_1.startDateBeet)],
    ['thirdPartySigner', beet.coption(ThirdPartySigner_1.thirdPartySignerBeet)],
    ['tokenGate', beet.coption(TokenGate_1.tokenGateBeet)],
    ['gatekeeper', beet.coption(Gatekeeper_1.gatekeeperBeet)],
    ['endDate', beet.coption(EndDate_1.endDateBeet)],
    ['allowList', beet.coption(AllowList_1.allowListBeet)],
    ['mintLimit', beet.coption(MintLimit_1.mintLimitBeet)],
    ['nftPayment', beet.coption(NftPayment_1.nftPaymentBeet)],
    ['redeemedAmount', beet.coption(RedeemedAmount_1.redeemedAmountBeet)],
    ['addressGate', beet.coption(AddressGate_1.addressGateBeet)],
    ['nftGate', beet.coption(NftGate_1.nftGateBeet)],
    ['nftBurn', beet.coption(NftBurn_1.nftBurnBeet)],
    ['tokenBurn', beet.coption(TokenBurn_1.tokenBurnBeet)],
    ['freezeSolPayment', beet.coption(FreezeSolPayment_1.freezeSolPaymentBeet)],
    ['freezeTokenPayment', beet.coption(FreezeTokenPayment_1.freezeTokenPaymentBeet)],
    ['programGate', beet.coption(ProgramGate_1.programGateBeet)],
    ['allocation', beet.coption(Allocation_1.allocationBeet)],
], 'GuardSet');
//# sourceMappingURL=GuardSet.js.map