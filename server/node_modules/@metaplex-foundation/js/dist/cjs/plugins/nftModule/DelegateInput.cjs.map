{"version":3,"file":"DelegateInput.cjs","sources":["../../../../src/plugins/nftModule/DelegateInput.ts"],"sourcesContent":["import { DelegateArgs } from '@metaplex-foundation/mpl-token-metadata';\nimport { MetadataDelegateType, TokenDelegateType } from './DelegateType';\nimport { Metaplex } from '@/index';\nimport { isSigner, Program, PublicKey, Signer } from '@/types';\n\ntype SplitTypeAndData<\n  T extends { __kind: any },\n  U extends T['__kind'] = any\n> = T extends {\n  __kind: U;\n}\n  ? { type: T['__kind']; data?: Omit<T, '__kind' | 'authorizationData'> }\n  : never;\n\nexport type MetadataDelegateInputWithData<\n  T extends PublicKey | Signer = PublicKey\n> = {\n  delegate: T;\n  updateAuthority: PublicKey;\n} & SplitTypeAndData<DelegateArgs, MetadataDelegateType>;\n\nexport type TokenDelegateInputWithData<\n  T extends PublicKey | Signer = PublicKey\n> = {\n  delegate: T;\n  owner: PublicKey;\n  token?: PublicKey;\n} & SplitTypeAndData<DelegateArgs, TokenDelegateType>;\n\nexport type MetadataDelegateInput<T extends PublicKey | Signer = PublicKey> =\n  Omit<MetadataDelegateInputWithData<T>, 'data'>;\n\nexport type TokenDelegateInput<T extends PublicKey | Signer = PublicKey> = Omit<\n  TokenDelegateInputWithData<T>,\n  'data'\n>;\n\nexport type DelegateInputSigner = DelegateInput<Signer>;\nexport type DelegateInput<T extends PublicKey | Signer = PublicKey> =\n  | MetadataDelegateInput<T>\n  | TokenDelegateInput<T>;\n\nexport type DelegateInputWithDataSigner = DelegateInputWithData<Signer>;\nexport type DelegateInputWithData<T extends PublicKey | Signer = PublicKey> =\n  | MetadataDelegateInputWithData<T>\n  | TokenDelegateInputWithData<T>;\n\nexport const parseTokenMetadataDelegateInput = <\n  T extends PublicKey | Signer = PublicKey\n>(\n  metaplex: Metaplex,\n  mint: PublicKey,\n  input: DelegateInput<T>,\n  programs?: Program[]\n): {\n  delegate: T;\n  approver: PublicKey;\n  delegateRecord: PublicKey;\n  tokenAccount?: PublicKey;\n  isTokenDelegate: boolean;\n} => {\n  if ('updateAuthority' in input) {\n    return {\n      isTokenDelegate: false,\n      delegate: input.delegate,\n      approver: input.updateAuthority,\n      delegateRecord: metaplex\n        .nfts()\n        .pdas()\n        .metadataDelegateRecord({\n          mint,\n          type: input.type,\n          updateAuthority: input.updateAuthority,\n          delegate: isSigner(input.delegate)\n            ? input.delegate.publicKey\n            : input.delegate,\n          programs,\n        }),\n    };\n  }\n\n  const tokenAccount =\n    input.token ??\n    metaplex.tokens().pdas().associatedTokenAccount({\n      mint,\n      owner: input.owner,\n      programs,\n    });\n  return {\n    isTokenDelegate: true,\n    delegate: input.delegate,\n    approver: input.owner,\n    delegateRecord: metaplex.nfts().pdas().tokenRecord({\n      mint,\n      token: tokenAccount,\n      programs,\n    }),\n    tokenAccount,\n  };\n};\n"],"names":["parseTokenMetadataDelegateInput","metaplex","mint","input","programs","isTokenDelegate","delegate","approver","updateAuthority","delegateRecord","nfts","pdas","metadataDelegateRecord","type","isSigner","publicKey","tokenAccount","token","tokens","associatedTokenAccount","owner","tokenRecord"],"mappings":";;;;;;AA+CO,MAAMA,+BAA+B,GAAG,CAG7CC,QAAkB,EAClBC,IAAe,EACfC,KAAuB,EACvBC,QAAoB,KAOjB;EACH,IAAI,iBAAiB,IAAID,KAAK,EAAE;IAC9B,OAAO;AACLE,MAAAA,eAAe,EAAE,KAAK;MACtBC,QAAQ,EAAEH,KAAK,CAACG,QAAQ;MACxBC,QAAQ,EAAEJ,KAAK,CAACK,eAAe;MAC/BC,cAAc,EAAER,QAAQ,CACrBS,IAAI,EAAE,CACNC,IAAI,EAAE,CACNC,sBAAsB,CAAC;QACtBV,IAAI;QACJW,IAAI,EAAEV,KAAK,CAACU,IAAI;QAChBL,eAAe,EAAEL,KAAK,CAACK,eAAe;AACtCF,QAAAA,QAAQ,EAAEQ,eAAQ,CAACX,KAAK,CAACG,QAAQ,CAAC,GAC9BH,KAAK,CAACG,QAAQ,CAACS,SAAS,GACxBZ,KAAK,CAACG,QAAQ;AAClBF,QAAAA,QAAAA;OACD,CAAA;KACJ,CAAA;AACH,GAAA;AAEA,EAAA,MAAMY,YAAY,GAChBb,KAAK,CAACc,KAAK,IACXhB,QAAQ,CAACiB,MAAM,EAAE,CAACP,IAAI,EAAE,CAACQ,sBAAsB,CAAC;IAC9CjB,IAAI;IACJkB,KAAK,EAAEjB,KAAK,CAACiB,KAAK;AAClBhB,IAAAA,QAAAA;AACF,GAAC,CAAC,CAAA;EACJ,OAAO;AACLC,IAAAA,eAAe,EAAE,IAAI;IACrBC,QAAQ,EAAEH,KAAK,CAACG,QAAQ;IACxBC,QAAQ,EAAEJ,KAAK,CAACiB,KAAK;IACrBX,cAAc,EAAER,QAAQ,CAACS,IAAI,EAAE,CAACC,IAAI,EAAE,CAACU,WAAW,CAAC;MACjDnB,IAAI;AACJe,MAAAA,KAAK,EAAED,YAAY;AACnBZ,MAAAA,QAAAA;AACF,KAAC,CAAC;AACFY,IAAAA,YAAAA;GACD,CAAA;AACH;;;;"}