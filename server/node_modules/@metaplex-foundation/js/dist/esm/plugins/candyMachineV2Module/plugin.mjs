import { CandyMachinesV2Client } from './CandyMachinesV2Client.mjs';
import { createCandyMachineV2Operation, createCandyMachineV2OperationHandler } from './operations/createCandyMachineV2.mjs';
import { deleteCandyMachineV2Operation, deleteCandyMachineV2OperationHandler } from './operations/deleteCandyMachineV2.mjs';
import { findCandyMachineV2ByAddressOperation, findCandyMachineV2ByAddressOperationHandler } from './operations/findCandyMachineV2ByAddress.mjs';
import { findCandyMachinesV2ByPublicKeyFieldOperation, findCandyMachinesV2ByPublicKeyFieldOperationHandler } from './operations/findCandyMachinesV2ByPublicKeyField.mjs';
import { findMintedNftsByCandyMachineV2Operation, findMintedNftsByCandyMachineV2OperationHandler } from './operations/findMintedNftsByCandyMachineV2.mjs';
import { insertItemsToCandyMachineV2Operation, InsertItemsToCandyMachineV2OperationHandler } from './operations/insertItemsToCandyMachineV2.mjs';
import { mintCandyMachineV2Operation, mintCandyMachineV2OperationHandler } from './operations/mintCandyMachineV2.mjs';
import { updateCandyMachineV2Operation, updateCandyMachineV2OperationHandler } from './operations/updateCandyMachineV2.mjs';

/** @group Plugins */
const candyMachineV2Module = () => ({
  install(metaplex) {
    const op = metaplex.operations();
    op.register(createCandyMachineV2Operation, createCandyMachineV2OperationHandler);
    op.register(deleteCandyMachineV2Operation, deleteCandyMachineV2OperationHandler);
    op.register(findCandyMachineV2ByAddressOperation, findCandyMachineV2ByAddressOperationHandler);
    op.register(findCandyMachinesV2ByPublicKeyFieldOperation, findCandyMachinesV2ByPublicKeyFieldOperationHandler);
    op.register(findMintedNftsByCandyMachineV2Operation, findMintedNftsByCandyMachineV2OperationHandler);
    op.register(insertItemsToCandyMachineV2Operation, InsertItemsToCandyMachineV2OperationHandler);
    op.register(mintCandyMachineV2Operation, mintCandyMachineV2OperationHandler);
    op.register(updateCandyMachineV2Operation, updateCandyMachineV2OperationHandler);
    metaplex.candyMachinesV2 = function () {
      return new CandyMachinesV2Client(this);
    };
  }
});

export { candyMachineV2Module };
//# sourceMappingURL=plugin.mjs.map
