{"version":3,"file":"programs.mjs","sources":["../../../../src/plugins/candyMachineModule/programs.ts"],"sourcesContent":["import {\n  cusper as defaultCandyGuardCusper,\n  PROGRAM_ID as DEFAULT_CANDY_GUARD_PROGRAM_ID,\n} from '@metaplex-foundation/mpl-candy-guard';\nimport {\n  cusper as candyMachineCusper,\n  PROGRAM_ID as CANDY_MACHINE_PROGRAM_ID,\n} from '@metaplex-foundation/mpl-candy-machine-core';\nimport { defaultCandyGuardNames } from './guards';\nimport { assert } from '@/utils';\nimport { ErrorWithLogs, Program, PublicKey } from '@/types';\n\n/** @group Programs */\nexport const candyMachineProgram: Program = {\n  name: 'CandyMachineProgram',\n  address: CANDY_MACHINE_PROGRAM_ID,\n  errorResolver: (error: ErrorWithLogs) =>\n    candyMachineCusper.errorFromProgramLogs(error.logs, false),\n};\n\n/** @group Programs */\nexport type CandyGuardProgram = Program & { availableGuards: string[] };\n\nexport const isCandyGuardProgram = (\n  value: Program\n): value is CandyGuardProgram =>\n  typeof value === 'object' && 'availableGuards' in value;\n\nexport function assertCandyGuardProgram(\n  value: Program\n): asserts value is CandyGuardProgram {\n  assert(isCandyGuardProgram(value), `Expected CandyGuardProgram model`);\n}\n\n/** @group Programs */\nexport const defaultCandyGuardProgram: CandyGuardProgram = {\n  name: 'CandyGuardProgram',\n  address: DEFAULT_CANDY_GUARD_PROGRAM_ID,\n  errorResolver: (error: ErrorWithLogs) =>\n    defaultCandyGuardCusper.errorFromProgramLogs(error.logs, false),\n  availableGuards: defaultCandyGuardNames,\n};\n\n/** @group Programs */\nexport const gatewayProgram: Program = {\n  name: 'GatewayProgram',\n  address: new PublicKey('gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs'),\n};\n"],"names":["candyMachineProgram","name","address","CANDY_MACHINE_PROGRAM_ID","errorResolver","error","candyMachineCusper","errorFromProgramLogs","logs","isCandyGuardProgram","value","assertCandyGuardProgram","assert","defaultCandyGuardProgram","DEFAULT_CANDY_GUARD_PROGRAM_ID","defaultCandyGuardCusper","availableGuards","defaultCandyGuardNames","gatewayProgram","PublicKey"],"mappings":";;;;;;AAYA;AACO,MAAMA,mBAA4B,GAAG;AAC1CC,EAAAA,IAAI,EAAE,qBAAqB;AAC3BC,EAAAA,OAAO,EAAEC,UAAwB;EACjCC,aAAa,EAAGC,KAAoB,IAClCC,MAAkB,CAACC,oBAAoB,CAACF,KAAK,CAACG,IAAI,EAAE,KAAK,CAAA;AAC7D,EAAC;;AAED;;AAGaC,MAAAA,mBAAmB,GAC9BC,KAAc,IAEd,OAAOA,KAAK,KAAK,QAAQ,IAAI,iBAAiB,IAAIA,MAAK;AAElD,SAASC,uBAAuB,CACrCD,KAAc,EACsB;AACpCE,EAAAA,MAAM,CAACH,mBAAmB,CAACC,KAAK,CAAC,EAAG,kCAAiC,CAAC,CAAA;AACxE,CAAA;;AAEA;AACO,MAAMG,wBAA2C,GAAG;AACzDZ,EAAAA,IAAI,EAAE,mBAAmB;AACzBC,EAAAA,OAAO,EAAEY,YAA8B;AACvCV,EAAAA,aAAa,EAAGC,KAAoB,IAClCU,QAAuB,CAACR,oBAAoB,CAACF,KAAK,CAACG,IAAI,EAAE,KAAK,CAAC;AACjEQ,EAAAA,eAAe,EAAEC,sBAAAA;AACnB,EAAC;;AAED;AACO,MAAMC,cAAuB,GAAG;AACrCjB,EAAAA,IAAI,EAAE,gBAAgB;AACtBC,EAAAA,OAAO,EAAE,IAAIiB,SAAS,CAAC,6CAA6C,CAAA;AACtE;;;;"}