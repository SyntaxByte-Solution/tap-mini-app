/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { GetDataEnumKind, GetDataEnumKindContent, Serializer } from '@metaplex-foundation/umi/serializers';
export type RuleSetToggle = {
    __kind: 'None';
} | {
    __kind: 'Clear';
} | {
    __kind: 'Set';
    fields: [PublicKey];
};
export type RuleSetToggleArgs = RuleSetToggle;
export declare function getRuleSetToggleSerializer(): Serializer<RuleSetToggleArgs, RuleSetToggle>;
export declare function ruleSetToggle(kind: 'None'): GetDataEnumKind<RuleSetToggleArgs, 'None'>;
export declare function ruleSetToggle(kind: 'Clear'): GetDataEnumKind<RuleSetToggleArgs, 'Clear'>;
export declare function ruleSetToggle(kind: 'Set', data: GetDataEnumKindContent<RuleSetToggleArgs, 'Set'>['fields']): GetDataEnumKind<RuleSetToggleArgs, 'Set'>;
export declare function isRuleSetToggle<K extends RuleSetToggle['__kind']>(kind: K, value: RuleSetToggle): value is RuleSetToggle & {
    __kind: K;
};
