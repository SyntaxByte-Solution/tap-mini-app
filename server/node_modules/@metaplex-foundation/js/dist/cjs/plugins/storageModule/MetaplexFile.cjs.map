{"version":3,"file":"MetaplexFile.cjs","sources":["../../../../src/plugins/storageModule/MetaplexFile.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport { getContentType, getExtension, randomStr } from '@/utils';\nimport { InvalidJsonVariableError } from '@/errors';\n\nexport type MetaplexFile = {\n  readonly buffer: Buffer;\n  readonly fileName: string;\n  readonly displayName: string;\n  readonly uniqueName: string;\n  readonly contentType: string | null;\n  readonly extension: string | null;\n  readonly tags: MetaplexFileTag[];\n};\n\nexport type MetaplexFileContent = string | Buffer | Uint8Array | ArrayBuffer;\n\nexport type MetaplexFileTag = { name: string; value: string };\n\nexport type MetaplexFileOptions = {\n  displayName?: string;\n  uniqueName?: string;\n  contentType?: string;\n  extension?: string;\n  tags?: { name: string; value: string }[];\n};\n\nexport const toMetaplexFile = (\n  content: MetaplexFileContent,\n  fileName: string,\n  options: MetaplexFileOptions = {}\n): MetaplexFile => ({\n  buffer: parseMetaplexFileContent(content),\n  fileName,\n  displayName: options.displayName ?? fileName,\n  uniqueName: options.uniqueName ?? randomStr(),\n  contentType: options.contentType ?? getContentType(fileName),\n  extension: options.extension ?? getExtension(fileName),\n  tags: options.tags ?? [],\n});\n\nexport const toMetaplexFileFromBrowser = async (\n  file: File,\n  options: MetaplexFileOptions = {}\n): Promise<MetaplexFile> => {\n  const buffer = await file.arrayBuffer();\n\n  return toMetaplexFile(buffer, file.name, options);\n};\n\nexport const toMetaplexFileFromJson = <T extends object = object>(\n  json: T,\n  fileName = 'inline.json',\n  options: MetaplexFileOptions = {}\n): MetaplexFile => {\n  let jsonString;\n\n  try {\n    jsonString = JSON.stringify(json);\n  } catch (error) {\n    throw new InvalidJsonVariableError(error as Error);\n  }\n\n  return toMetaplexFile(jsonString, fileName, options);\n};\n\nexport const parseMetaplexFileContent = (\n  content: MetaplexFileContent\n): Buffer => {\n  if (content instanceof ArrayBuffer) {\n    return Buffer.from(new Uint8Array(content));\n  }\n\n  return Buffer.from(content);\n};\n\nexport const getBytesFromMetaplexFiles = (...files: MetaplexFile[]): number =>\n  files.reduce((acc, file) => acc + file.buffer.byteLength, 0);\n\nexport const getBrowserFileFromMetaplexFile = (file: MetaplexFile): File =>\n  new File([file.buffer as BlobPart], file.fileName);\n\nexport const isMetaplexFile = (\n  metaplexFile: any\n): metaplexFile is MetaplexFile => {\n  return (\n    metaplexFile != null &&\n    typeof metaplexFile === 'object' &&\n    'buffer' in metaplexFile &&\n    'fileName' in metaplexFile &&\n    'displayName' in metaplexFile &&\n    'uniqueName' in metaplexFile &&\n    'contentType' in metaplexFile &&\n    'extension' in metaplexFile &&\n    'tags' in metaplexFile\n  );\n};\n"],"names":["toMetaplexFile","content","fileName","options","buffer","parseMetaplexFileContent","displayName","uniqueName","randomStr","contentType","getContentType","extension","getExtension","tags","toMetaplexFileFromBrowser","file","arrayBuffer","name","toMetaplexFileFromJson","json","jsonString","JSON","stringify","error","InvalidJsonVariableError","ArrayBuffer","Buffer","from","Uint8Array","getBytesFromMetaplexFiles","files","reduce","acc","byteLength","getBrowserFileFromMetaplexFile","File","isMetaplexFile","metaplexFile"],"mappings":";;;;;;;;AA0BaA,MAAAA,cAAc,GAAG,CAC5BC,OAA4B,EAC5BC,QAAgB,EAChBC,OAA4B,GAAG,EAAE,MACf;AAClBC,EAAAA,MAAM,EAAEC,wBAAwB,CAACJ,OAAO,CAAC;EACzCC,QAAQ;AACRI,EAAAA,WAAW,EAAEH,OAAO,CAACG,WAAW,IAAIJ,QAAQ;AAC5CK,EAAAA,UAAU,EAAEJ,OAAO,CAACI,UAAU,IAAIC,gBAAS,EAAE;EAC7CC,WAAW,EAAEN,OAAO,CAACM,WAAW,IAAIC,qBAAc,CAACR,QAAQ,CAAC;EAC5DS,SAAS,EAAER,OAAO,CAACQ,SAAS,IAAIC,mBAAY,CAACV,QAAQ,CAAC;AACtDW,EAAAA,IAAI,EAAEV,OAAO,CAACU,IAAI,IAAI,EAAA;AACxB,CAAC,EAAC;AAEK,MAAMC,yBAAyB,GAAG,OACvCC,IAAU,EACVZ,OAA4B,GAAG,EAAE,KACP;AAC1B,EAAA,MAAMC,MAAM,GAAG,MAAMW,IAAI,CAACC,WAAW,EAAE,CAAA;EAEvC,OAAOhB,cAAc,CAACI,MAAM,EAAEW,IAAI,CAACE,IAAI,EAAEd,OAAO,CAAC,CAAA;AACnD,EAAC;AAEYe,MAAAA,sBAAsB,GAAG,CACpCC,IAAO,EACPjB,QAAQ,GAAG,aAAa,EACxBC,OAA4B,GAAG,EAAE,KAChB;AACjB,EAAA,IAAIiB,UAAU,CAAA;EAEd,IAAI;AACFA,IAAAA,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAA;GAClC,CAAC,OAAOI,KAAK,EAAE;AACd,IAAA,MAAM,IAAIC,iCAAwB,CAACD,KAAK,CAAU,CAAA;AACpD,GAAA;AAEA,EAAA,OAAOvB,cAAc,CAACoB,UAAU,EAAElB,QAAQ,EAAEC,OAAO,CAAC,CAAA;AACtD,EAAC;AAEYE,MAAAA,wBAAwB,GACnCJ,OAA4B,IACjB;EACX,IAAIA,OAAO,YAAYwB,WAAW,EAAE;IAClC,OAAOC,aAAM,CAACC,IAAI,CAAC,IAAIC,UAAU,CAAC3B,OAAO,CAAC,CAAC,CAAA;AAC7C,GAAA;AAEA,EAAA,OAAOyB,aAAM,CAACC,IAAI,CAAC1B,OAAO,CAAC,CAAA;AAC7B,EAAC;AAEM,MAAM4B,yBAAyB,GAAG,CAAC,GAAGC,KAAqB,KAChEA,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEjB,IAAI,KAAKiB,GAAG,GAAGjB,IAAI,CAACX,MAAM,CAAC6B,UAAU,EAAE,CAAC,EAAC;MAEjDC,8BAA8B,GAAInB,IAAkB,IAC/D,IAAIoB,IAAI,CAAC,CAACpB,IAAI,CAACX,MAAM,CAAa,EAAEW,IAAI,CAACb,QAAQ,EAAC;AAEvCkC,MAAAA,cAAc,GACzBC,YAAiB,IACgB;AACjC,EAAA,OACEA,YAAY,IAAI,IAAI,IACpB,OAAOA,YAAY,KAAK,QAAQ,IAChC,QAAQ,IAAIA,YAAY,IACxB,UAAU,IAAIA,YAAY,IAC1B,aAAa,IAAIA,YAAY,IAC7B,YAAY,IAAIA,YAAY,IAC5B,aAAa,IAAIA,YAAY,IAC7B,WAAW,IAAIA,YAAY,IAC3B,MAAM,IAAIA,YAAY,CAAA;AAE1B;;;;;;;;;;"}