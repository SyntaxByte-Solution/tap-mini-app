{"version":3,"file":"StorageClient.mjs","sources":["../../../../src/plugins/storageModule/StorageClient.ts"],"sourcesContent":["import fetch, { RequestInit } from 'node-fetch';\nimport {\n  getBytesFromMetaplexFiles,\n  MetaplexFile,\n  toMetaplexFile,\n  toMetaplexFileFromJson,\n} from './MetaplexFile';\nimport { StorageDownloadOptions, StorageDriver } from './StorageDriver';\nimport { Amount, HasDriver } from '@/types';\nimport { DriverNotProvidedError, InvalidJsonStringError } from '@/errors';\n\n/**\n * @group Modules\n */\nexport class StorageClient implements HasDriver<StorageDriver> {\n  private _driver: StorageDriver | null = null;\n\n  driver(): StorageDriver {\n    if (!this._driver) {\n      throw new DriverNotProvidedError('StorageDriver');\n    }\n\n    return this._driver;\n  }\n\n  setDriver(newDriver: StorageDriver): void {\n    this._driver = newDriver;\n  }\n\n  getUploadPriceForBytes(bytes: number): Promise<Amount> {\n    return this.driver().getUploadPrice(bytes);\n  }\n\n  getUploadPriceForFile(file: MetaplexFile): Promise<Amount> {\n    return this.getUploadPriceForFiles([file]);\n  }\n\n  getUploadPriceForFiles(files: MetaplexFile[]): Promise<Amount> {\n    const driver = this.driver();\n\n    return driver.getUploadPriceForFiles\n      ? driver.getUploadPriceForFiles(files)\n      : this.getUploadPriceForBytes(getBytesFromMetaplexFiles(...files));\n  }\n\n  upload(file: MetaplexFile): Promise<string> {\n    return this.driver().upload(file);\n  }\n\n  uploadAll(files: MetaplexFile[]): Promise<string[]> {\n    const driver = this.driver();\n\n    return driver.uploadAll\n      ? driver.uploadAll(files)\n      : Promise.all(files.map((file) => this.driver().upload(file)));\n  }\n\n  uploadJson<T extends object = object>(json: T): Promise<string> {\n    return this.upload(toMetaplexFileFromJson<T>(json));\n  }\n\n  async download(\n    uri: string,\n    options?: StorageDownloadOptions\n  ): Promise<MetaplexFile> {\n    const driver = this.driver();\n\n    if (driver.download) {\n      return driver.download(uri, options);\n    }\n\n    const response = await fetch(uri, options as RequestInit);\n    const buffer = await response.arrayBuffer();\n\n    return toMetaplexFile(buffer, uri);\n  }\n\n  async downloadJson<T extends object = object>(\n    uri: string,\n    options?: StorageDownloadOptions\n  ): Promise<T> {\n    const file = await this.download(uri, options);\n\n    try {\n      return JSON.parse(file.buffer.toString());\n    } catch (error) {\n      throw new InvalidJsonStringError(error as Error);\n    }\n  }\n}\n"],"names":["StorageClient","driver","_driver","DriverNotProvidedError","setDriver","newDriver","getUploadPriceForBytes","bytes","getUploadPrice","getUploadPriceForFile","file","getUploadPriceForFiles","files","getBytesFromMetaplexFiles","upload","uploadAll","Promise","all","map","uploadJson","json","toMetaplexFileFromJson","download","uri","options","response","fetch","buffer","arrayBuffer","toMetaplexFile","downloadJson","JSON","parse","toString","error","InvalidJsonStringError"],"mappings":"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"}