{"version":3,"file":"GpaBuilder.cjs","sources":["../../../src/utils/GpaBuilder.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport {\n  GetProgramAccountsConfig,\n  GetProgramAccountsFilter,\n  PublicKey,\n} from '@solana/web3.js';\nimport base58 from 'bs58';\nimport BN from 'bn.js';\nimport { GmaBuilder, GmaBuilderOptions } from './GmaBuilder';\nimport { Metaplex } from '@/Metaplex';\nimport { UnparsedAccount } from '@/types';\n\nexport type GpaSortCallback = (\n  a: UnparsedAccount,\n  b: UnparsedAccount\n) => number;\n\nexport class GpaBuilder {\n  /** The connection instance to use when fetching accounts. */\n  protected readonly metaplex: Metaplex;\n\n  /** The public key of the program we want to retrieve accounts from. */\n  protected readonly programId: PublicKey;\n\n  /** The configs to use when fetching program accounts. */\n  protected config: GetProgramAccountsConfig = {};\n\n  /** When provided, reorder accounts using this callback. */\n  protected sortCallback?: GpaSortCallback;\n\n  constructor(metaplex: Metaplex, programId: PublicKey) {\n    this.metaplex = metaplex;\n    this.programId = programId;\n  }\n\n  mergeConfig(config: GetProgramAccountsConfig) {\n    this.config = { ...this.config, ...config };\n\n    return this;\n  }\n\n  slice(offset: number, length: number) {\n    this.config.dataSlice = { offset, length };\n\n    return this;\n  }\n\n  withoutData() {\n    return this.slice(0, 0);\n  }\n\n  addFilter(...filters: GetProgramAccountsFilter[]) {\n    if (!this.config.filters) {\n      this.config.filters = [];\n    }\n\n    this.config.filters.push(...filters);\n\n    return this;\n  }\n\n  where(offset: number, bytes: string | Buffer | PublicKey | BN | number) {\n    if (Buffer.isBuffer(bytes)) {\n      bytes = base58.encode(bytes);\n    } else if (typeof bytes === 'object' && 'toBase58' in bytes) {\n      bytes = bytes.toBase58();\n    } else if (BN.isBN(bytes)) {\n      bytes = base58.encode(bytes.toArray());\n    } else if (typeof bytes !== 'string') {\n      bytes = base58.encode(new BN(bytes, 'le').toArray());\n    }\n\n    return this.addFilter({ memcmp: { offset, bytes } });\n  }\n\n  whereSize(dataSize: number) {\n    return this.addFilter({ dataSize });\n  }\n\n  sortUsing(callback: GpaSortCallback) {\n    this.sortCallback = callback;\n\n    return this;\n  }\n\n  async get(): Promise<UnparsedAccount[]> {\n    const accounts = await this.metaplex\n      .rpc()\n      .getProgramAccounts(this.programId, this.config);\n\n    if (this.sortCallback) {\n      accounts.sort(this.sortCallback);\n    }\n\n    return accounts;\n  }\n\n  async getAndMap<T>(callback: (account: UnparsedAccount) => T): Promise<T[]> {\n    return (await this.get()).map(callback);\n  }\n\n  async getPublicKeys(): Promise<PublicKey[]> {\n    return this.getAndMap((account) => account.publicKey);\n  }\n\n  async getDataAsPublicKeys(): Promise<PublicKey[]> {\n    // TODO(loris): Throw a custom Metaplex error if the data is not a public key.\n    return this.getAndMap((account) => new PublicKey(account.data));\n  }\n\n  async getMultipleAccounts(\n    callback?: (account: UnparsedAccount) => PublicKey,\n    options?: GmaBuilderOptions\n  ): Promise<GmaBuilder> {\n    // TODO(loris): Throw a custom Metaplex error if the data is not a public key.\n    const cb = callback ?? ((account) => new PublicKey(account.data));\n\n    return new GmaBuilder(this.metaplex, await this.getAndMap(cb), options);\n  }\n}\n"],"names":["GpaBuilder","constructor","metaplex","programId","_defineProperty","mergeConfig","config","slice","offset","length","dataSlice","withoutData","addFilter","filters","push","where","bytes","Buffer","isBuffer","base58","encode","toBase58","BN","isBN","toArray","memcmp","whereSize","dataSize","sortUsing","callback","sortCallback","get","accounts","rpc","getProgramAccounts","sort","getAndMap","map","getPublicKeys","account","publicKey","getDataAsPublicKeys","PublicKey","data","getMultipleAccounts","options","cb","GmaBuilder"],"mappings":";;;;;;;;;;;;;;;;AAiBO,MAAMA,UAAU,CAAC;AACtB;;AAGA;;AAGA;;AAMAC,EAAAA,WAAW,CAACC,QAAkB,EAAEC,SAAoB,EAAE;AAAA,IAAAC,wCAAA,CAAA,IAAA,EAAA,QAAA,EALT,EAAE,CAAA,CAAA;IAM7C,IAAI,CAACF,QAAQ,GAAGA,QAAQ,CAAA;IACxB,IAAI,CAACC,SAAS,GAAGA,SAAS,CAAA;AAC5B,GAAA;EAEAE,WAAW,CAACC,MAAgC,EAAE;IAC5C,IAAI,CAACA,MAAM,GAAG;MAAE,GAAG,IAAI,CAACA,MAAM;MAAE,GAAGA,MAAAA;KAAQ,CAAA;AAE3C,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEAC,EAAAA,KAAK,CAACC,MAAc,EAAEC,MAAc,EAAE;AACpC,IAAA,IAAI,CAACH,MAAM,CAACI,SAAS,GAAG;MAAEF,MAAM;AAAEC,MAAAA,MAAAA;KAAQ,CAAA;AAE1C,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEAE,EAAAA,WAAW,GAAG;AACZ,IAAA,OAAO,IAAI,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACzB,GAAA;EAEAK,SAAS,CAAC,GAAGC,OAAmC,EAAE;AAChD,IAAA,IAAI,CAAC,IAAI,CAACP,MAAM,CAACO,OAAO,EAAE;AACxB,MAAA,IAAI,CAACP,MAAM,CAACO,OAAO,GAAG,EAAE,CAAA;AAC1B,KAAA;IAEA,IAAI,CAACP,MAAM,CAACO,OAAO,CAACC,IAAI,CAAC,GAAGD,OAAO,CAAC,CAAA;AAEpC,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEAE,EAAAA,KAAK,CAACP,MAAc,EAAEQ,KAAgD,EAAE;AACtE,IAAA,IAAIC,aAAM,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;AAC1BA,MAAAA,KAAK,GAAGG,0BAAM,CAACC,MAAM,CAACJ,KAAK,CAAC,CAAA;KAC7B,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,UAAU,IAAIA,KAAK,EAAE;AAC3DA,MAAAA,KAAK,GAAGA,KAAK,CAACK,QAAQ,EAAE,CAAA;KACzB,MAAM,IAAIC,sBAAE,CAACC,IAAI,CAACP,KAAK,CAAC,EAAE;MACzBA,KAAK,GAAGG,0BAAM,CAACC,MAAM,CAACJ,KAAK,CAACQ,OAAO,EAAE,CAAC,CAAA;AACxC,KAAC,MAAM,IAAI,OAAOR,KAAK,KAAK,QAAQ,EAAE;AACpCA,MAAAA,KAAK,GAAGG,0BAAM,CAACC,MAAM,CAAC,IAAIE,sBAAE,CAACN,KAAK,EAAE,IAAI,CAAC,CAACQ,OAAO,EAAE,CAAC,CAAA;AACtD,KAAA;IAEA,OAAO,IAAI,CAACZ,SAAS,CAAC;AAAEa,MAAAA,MAAM,EAAE;QAAEjB,MAAM;AAAEQ,QAAAA,KAAAA;AAAM,OAAA;AAAE,KAAC,CAAC,CAAA;AACtD,GAAA;EAEAU,SAAS,CAACC,QAAgB,EAAE;IAC1B,OAAO,IAAI,CAACf,SAAS,CAAC;AAAEe,MAAAA,QAAAA;AAAS,KAAC,CAAC,CAAA;AACrC,GAAA;EAEAC,SAAS,CAACC,QAAyB,EAAE;IACnC,IAAI,CAACC,YAAY,GAAGD,QAAQ,CAAA;AAE5B,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,MAAME,GAAG,GAA+B;AACtC,IAAA,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAAC9B,QAAQ,CACjC+B,GAAG,EAAE,CACLC,kBAAkB,CAAC,IAAI,CAAC/B,SAAS,EAAE,IAAI,CAACG,MAAM,CAAC,CAAA;IAElD,IAAI,IAAI,CAACwB,YAAY,EAAE;AACrBE,MAAAA,QAAQ,CAACG,IAAI,CAAC,IAAI,CAACL,YAAY,CAAC,CAAA;AAClC,KAAA;AAEA,IAAA,OAAOE,QAAQ,CAAA;AACjB,GAAA;EAEA,MAAMI,SAAS,CAAIP,QAAyC,EAAgB;IAC1E,OAAO,CAAC,MAAM,IAAI,CAACE,GAAG,EAAE,EAAEM,GAAG,CAACR,QAAQ,CAAC,CAAA;AACzC,GAAA;AAEA,EAAA,MAAMS,aAAa,GAAyB;IAC1C,OAAO,IAAI,CAACF,SAAS,CAAEG,OAAO,IAAKA,OAAO,CAACC,SAAS,CAAC,CAAA;AACvD,GAAA;AAEA,EAAA,MAAMC,mBAAmB,GAAyB;AAChD;AACA,IAAA,OAAO,IAAI,CAACL,SAAS,CAAEG,OAAO,IAAK,IAAIG,iBAAS,CAACH,OAAO,CAACI,IAAI,CAAC,CAAC,CAAA;AACjE,GAAA;AAEA,EAAA,MAAMC,mBAAmB,CACvBf,QAAkD,EAClDgB,OAA2B,EACN;AACrB;AACA,IAAA,MAAMC,EAAE,GAAGjB,QAAQ,KAAMU,OAAO,IAAK,IAAIG,iBAAS,CAACH,OAAO,CAACI,IAAI,CAAC,CAAC,CAAA;AAEjE,IAAA,OAAO,IAAII,qBAAU,CAAC,IAAI,CAAC7C,QAAQ,EAAE,MAAM,IAAI,CAACkC,SAAS,CAACU,EAAE,CAAC,EAAED,OAAO,CAAC,CAAA;AACzE,GAAA;AACF;;;;"}