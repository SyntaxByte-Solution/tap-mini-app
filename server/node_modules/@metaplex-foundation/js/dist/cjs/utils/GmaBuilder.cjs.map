{"version":3,"file":"GmaBuilder.cjs","sources":["../../../src/utils/GmaBuilder.ts"],"sourcesContent":["import { Commitment, PublicKey } from '@solana/web3.js';\nimport { chunk } from './common';\nimport { Metaplex } from '@/Metaplex';\nimport { UnparsedMaybeAccount } from '@/types';\n\nexport type GmaBuilderOptions = {\n  chunkSize?: number;\n\n  /** The level of commitment desired when querying the blockchain. */\n  commitment?: Commitment;\n};\n\nexport class GmaBuilder {\n  protected readonly metaplex: Metaplex;\n  protected readonly publicKeys: PublicKey[];\n  protected readonly commitment?: Commitment;\n  protected chunkSize: number;\n\n  constructor(\n    metaplex: Metaplex,\n    publicKeys: PublicKey[],\n    options: GmaBuilderOptions = {}\n  ) {\n    this.metaplex = metaplex;\n    this.chunkSize = options.chunkSize ?? 100;\n    this.commitment = options.commitment;\n    this.publicKeys = publicKeys;\n  }\n\n  static make(\n    metaplex: Metaplex,\n    publicKeys: PublicKey[],\n    options: GmaBuilderOptions = {}\n  ) {\n    return new GmaBuilder(metaplex, publicKeys, options);\n  }\n\n  chunkBy(n: number) {\n    this.chunkSize = n;\n\n    return this;\n  }\n\n  addPublicKeys(publicKeys: PublicKey[]) {\n    this.publicKeys.push(...publicKeys);\n\n    return this;\n  }\n\n  getPublicKeys(): PublicKey[] {\n    return this.publicKeys;\n  }\n\n  getUniquePublicKeys(): PublicKey[] {\n    // TODO: Only send unique keys and reconciliate after call.\n    return this.getPublicKeys();\n  }\n\n  async getFirst(n?: number): Promise<UnparsedMaybeAccount[]> {\n    const end = this.boundNumber(n ?? 1);\n\n    return this.getChunks(this.getPublicKeys().slice(0, end));\n  }\n\n  async getLast(n?: number): Promise<UnparsedMaybeAccount[]> {\n    const start = this.boundNumber(n ?? 1);\n\n    return this.getChunks(this.getPublicKeys().slice(-start));\n  }\n\n  async getBetween(\n    start: number,\n    end: number\n  ): Promise<UnparsedMaybeAccount[]> {\n    start = this.boundNumber(start);\n    end = this.boundNumber(end);\n    [start, end] = start > end ? [end, start] : [start, end];\n\n    return this.getChunks(this.getPublicKeys().slice(start, end));\n  }\n\n  async getPage(\n    page: number,\n    perPage: number\n  ): Promise<UnparsedMaybeAccount[]> {\n    return this.getBetween((page - 1) * perPage, page * perPage);\n  }\n\n  async get(): Promise<UnparsedMaybeAccount[]> {\n    return this.getChunks(this.getPublicKeys());\n  }\n\n  async getAndMap<T>(\n    callback: (account: UnparsedMaybeAccount) => T\n  ): Promise<T[]> {\n    return (await this.get()).map(callback);\n  }\n\n  protected async getChunks(\n    publicKeys: PublicKey[]\n  ): Promise<UnparsedMaybeAccount[]> {\n    const chunks = chunk(publicKeys, this.chunkSize);\n    const chunkPromises = chunks.map((chunk) => this.getChunk(chunk));\n    const resolvedChunks = await Promise.all(chunkPromises);\n\n    return resolvedChunks.flat();\n  }\n\n  protected async getChunk(\n    publicKeys: PublicKey[]\n  ): Promise<UnparsedMaybeAccount[]> {\n    try {\n      // TODO(loris): Use lower level RPC call to add dataSlice support.\n      return await this.metaplex\n        .rpc()\n        .getMultipleAccounts(publicKeys, this.commitment);\n    } catch (error) {\n      // TODO(loris): Custom error instead.\n      throw error;\n    }\n  }\n\n  protected boundNumber(n: number): number {\n    return this.boundIndex(n - 1) + 1;\n  }\n\n  protected boundIndex(index: number): number {\n    index = index < 0 ? 0 : index;\n    index =\n      index >= this.publicKeys.length ? this.publicKeys.length - 1 : index;\n\n    return index;\n  }\n}\n"],"names":["GmaBuilder","constructor","metaplex","publicKeys","options","chunkSize","commitment","make","chunkBy","n","addPublicKeys","push","getPublicKeys","getUniquePublicKeys","getFirst","end","boundNumber","getChunks","slice","getLast","start","getBetween","getPage","page","perPage","get","getAndMap","callback","map","chunks","chunk","chunkPromises","getChunk","resolvedChunks","Promise","all","flat","rpc","getMultipleAccounts","error","boundIndex","index","length"],"mappings":";;;;;;AAYO,MAAMA,UAAU,CAAC;EAMtBC,WAAW,CACTC,QAAkB,EAClBC,UAAuB,EACvBC,OAA0B,GAAG,EAAE,EAC/B;IACA,IAAI,CAACF,QAAQ,GAAGA,QAAQ,CAAA;AACxB,IAAA,IAAI,CAACG,SAAS,GAAGD,OAAO,CAACC,SAAS,IAAI,GAAG,CAAA;AACzC,IAAA,IAAI,CAACC,UAAU,GAAGF,OAAO,CAACE,UAAU,CAAA;IACpC,IAAI,CAACH,UAAU,GAAGA,UAAU,CAAA;AAC9B,GAAA;EAEA,OAAOI,IAAI,CACTL,QAAkB,EAClBC,UAAuB,EACvBC,OAA0B,GAAG,EAAE,EAC/B;IACA,OAAO,IAAIJ,UAAU,CAACE,QAAQ,EAAEC,UAAU,EAAEC,OAAO,CAAC,CAAA;AACtD,GAAA;EAEAI,OAAO,CAACC,CAAS,EAAE;IACjB,IAAI,CAACJ,SAAS,GAAGI,CAAC,CAAA;AAElB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;EAEAC,aAAa,CAACP,UAAuB,EAAE;AACrC,IAAA,IAAI,CAACA,UAAU,CAACQ,IAAI,CAAC,GAAGR,UAAU,CAAC,CAAA;AAEnC,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEAS,EAAAA,aAAa,GAAgB;IAC3B,OAAO,IAAI,CAACT,UAAU,CAAA;AACxB,GAAA;AAEAU,EAAAA,mBAAmB,GAAgB;AACjC;IACA,OAAO,IAAI,CAACD,aAAa,EAAE,CAAA;AAC7B,GAAA;EAEA,MAAME,QAAQ,CAACL,CAAU,EAAmC;IAC1D,MAAMM,GAAG,GAAG,IAAI,CAACC,WAAW,CAACP,CAAC,IAAI,CAAC,CAAC,CAAA;AAEpC,IAAA,OAAO,IAAI,CAACQ,SAAS,CAAC,IAAI,CAACL,aAAa,EAAE,CAACM,KAAK,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAA;AAC3D,GAAA;EAEA,MAAMI,OAAO,CAACV,CAAU,EAAmC;IACzD,MAAMW,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACP,CAAC,IAAI,CAAC,CAAC,CAAA;AAEtC,IAAA,OAAO,IAAI,CAACQ,SAAS,CAAC,IAAI,CAACL,aAAa,EAAE,CAACM,KAAK,CAAC,CAACE,KAAK,CAAC,CAAC,CAAA;AAC3D,GAAA;AAEA,EAAA,MAAMC,UAAU,CACdD,KAAa,EACbL,GAAW,EACsB;AACjCK,IAAAA,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACI,KAAK,CAAC,CAAA;AAC/BL,IAAAA,GAAG,GAAG,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC,CAAA;AAC3B,IAAA,CAACK,KAAK,EAAEL,GAAG,CAAC,GAAGK,KAAK,GAAGL,GAAG,GAAG,CAACA,GAAG,EAAEK,KAAK,CAAC,GAAG,CAACA,KAAK,EAAEL,GAAG,CAAC,CAAA;AAExD,IAAA,OAAO,IAAI,CAACE,SAAS,CAAC,IAAI,CAACL,aAAa,EAAE,CAACM,KAAK,CAACE,KAAK,EAAEL,GAAG,CAAC,CAAC,CAAA;AAC/D,GAAA;AAEA,EAAA,MAAMO,OAAO,CACXC,IAAY,EACZC,OAAe,EACkB;AACjC,IAAA,OAAO,IAAI,CAACH,UAAU,CAAC,CAACE,IAAI,GAAG,CAAC,IAAIC,OAAO,EAAED,IAAI,GAAGC,OAAO,CAAC,CAAA;AAC9D,GAAA;AAEA,EAAA,MAAMC,GAAG,GAAoC;IAC3C,OAAO,IAAI,CAACR,SAAS,CAAC,IAAI,CAACL,aAAa,EAAE,CAAC,CAAA;AAC7C,GAAA;EAEA,MAAMc,SAAS,CACbC,QAA8C,EAChC;IACd,OAAO,CAAC,MAAM,IAAI,CAACF,GAAG,EAAE,EAAEG,GAAG,CAACD,QAAQ,CAAC,CAAA;AACzC,GAAA;EAEA,MAAgBV,SAAS,CACvBd,UAAuB,EACU;IACjC,MAAM0B,MAAM,GAAGC,YAAK,CAAC3B,UAAU,EAAE,IAAI,CAACE,SAAS,CAAC,CAAA;AAChD,IAAA,MAAM0B,aAAa,GAAGF,MAAM,CAACD,GAAG,CAAEE,KAAK,IAAK,IAAI,CAACE,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAA;IACjE,MAAMG,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC,CAAA;IAEvD,OAAOE,cAAc,CAACG,IAAI,EAAE,CAAA;AAC9B,GAAA;EAEA,MAAgBJ,QAAQ,CACtB7B,UAAuB,EACU;IACjC,IAAI;AACF;AACA,MAAA,OAAO,MAAM,IAAI,CAACD,QAAQ,CACvBmC,GAAG,EAAE,CACLC,mBAAmB,CAACnC,UAAU,EAAE,IAAI,CAACG,UAAU,CAAC,CAAA;KACpD,CAAC,OAAOiC,KAAK,EAAE;AACd;AACA,MAAA,MAAMA,KAAK,CAAA;AACb,KAAA;AACF,GAAA;EAEUvB,WAAW,CAACP,CAAS,EAAU;IACvC,OAAO,IAAI,CAAC+B,UAAU,CAAC/B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;AACnC,GAAA;EAEU+B,UAAU,CAACC,KAAa,EAAU;AAC1CA,IAAAA,KAAK,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,GAAGA,KAAK,CAAA;AAC7BA,IAAAA,KAAK,GACHA,KAAK,IAAI,IAAI,CAACtC,UAAU,CAACuC,MAAM,GAAG,IAAI,CAACvC,UAAU,CAACuC,MAAM,GAAG,CAAC,GAAGD,KAAK,CAAA;AAEtE,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;AACF;;;;"}