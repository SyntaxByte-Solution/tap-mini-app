/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type ConvertMasterEditionV1ToV2InstructionAccounts = {
    /** Master Record Edition V1 (pda of ['metadata', program id, master metadata mint id, 'edition']) */
    masterEdition: PublicKey | Pda;
    /** One time authorization mint */
    oneTimeAuth: PublicKey | Pda;
    /** Printing mint */
    printingMint: PublicKey | Pda;
};
export type ConvertMasterEditionV1ToV2InstructionData = {
    discriminator: number;
};
export type ConvertMasterEditionV1ToV2InstructionDataArgs = {};
export declare function getConvertMasterEditionV1ToV2InstructionDataSerializer(): Serializer<ConvertMasterEditionV1ToV2InstructionDataArgs, ConvertMasterEditionV1ToV2InstructionData>;
export declare function convertMasterEditionV1ToV2(context: Pick<Context, 'programs'>, input: ConvertMasterEditionV1ToV2InstructionAccounts): TransactionBuilder;
