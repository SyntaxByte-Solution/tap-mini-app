{"version":3,"file":"errors.cjs","sources":["../../../../src/plugins/auctionHouseModule/errors.ts"],"sourcesContent":["import { MetaplexError } from '@/errors';\nimport { Amount, formatAmount } from '@/types';\n\n/** @group Errors */\nexport class AuctionHouseError extends MetaplexError {\n  readonly name: string = 'AuctionHouseError';\n  constructor(message: string, cause?: Error) {\n    super(message, 'plugin', 'Auction House', cause);\n  }\n}\n\n/** @group Errors */\nexport class TreasuryDestinationOwnerRequiredError extends AuctionHouseError {\n  readonly name: string = 'TreasuryDestinationOwnerRequiredError';\n  constructor() {\n    const message =\n      'You are trying to update an Auction House which uses a custom token as a treasury. ' +\n      'You have not provided the \"treasuryWithdrawalDestinationOwner\" because you do not wish to change it. ' +\n      'However, the Auction House account does not keep track of that information so we cannot prefill that for you. ' +\n      'Thus, if you wish to keep the same treasury withdrawal, you must provide it explicilty. ' +\n      'Please provide the current \"treasuryWithdrawalDestinationOwner\" parameter so you can update the other fields.' +\n      'Note that we keep that parameter optional because no Associate Token Account is needed for Auction Houses ' +\n      'whose treasury is the native SOL.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class AuctioneerAuthorityRequiredError extends AuctionHouseError {\n  readonly name: string = 'AuctioneerAuthorityRequiredError';\n  constructor() {\n    const message =\n      'You are trying to use or fetch an Auction House which delegates to an Auctioneer authority ' +\n      'but you have not provided the required \"auctioneerAuthority\" parameter. ' +\n      'Please provide the \"auctioneerAuthority\" parameter so the SDK can figure out which Auctioneer instance to interact with. ' +\n      'Note that we keep that parameter optional because no Auctioneer Authority is needed for Auction Houses ' +\n      'that use native Auction House behavior.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class AuctioneerPartialSaleNotSupportedError extends AuctionHouseError {\n  readonly name: string = 'AuctioneerPartialSaleNotSupportedError';\n  constructor() {\n    const message =\n      'You are trying to execute a partial sale, but partial orders are not supported in Auctioneer. ' +\n      'Any Partial Buys must be executed against a sale listed through the Auction House Sale.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class BidAndListingHaveDifferentAuctionHousesError extends AuctionHouseError {\n  readonly name: string = 'BidAndListingHaveDifferentAuctionHousesError';\n  constructor() {\n    const message =\n      'You are trying to use a Bid and a Listing from different Auction Houses. ' +\n      'Please provide both Bid and Listing from the same Auction House. ' +\n      'They should have the same \"auctionHouse.address\".';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class BidAndListingHaveDifferentMintsError extends AuctionHouseError {\n  readonly name: string = 'BidAndListingHaveDifferentMintsError';\n  constructor() {\n    const message =\n      'You are trying to execute a sale using a Bid and a Listing that have different mint addresses. ' +\n      'Please provide a Bid and a Listing on the same asset in order to execute the sale. ' +\n      'They should have the same \"asset.address\".';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CanceledBidIsNotAllowedError extends AuctionHouseError {\n  readonly name: string = 'CanceledBidIsNotAllowedError';\n  constructor() {\n    const message =\n      'You are trying to execute a sale using a canceled Bid. ' +\n      'Please provide a Bid that is not cancelled in order to execute the sale.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CanceledListingIsNotAllowedError extends AuctionHouseError {\n  readonly name: string = 'CanceledListingIsNotAllowedError';\n  constructor() {\n    const message =\n      'You are trying to execute a sale using a canceled Listing. ' +\n      'Please provide a Listing that is not cancelld in order to execute the sale.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CreateListingRequiresSignerError extends AuctionHouseError {\n  readonly name: string = 'CreateListingRequiresSignerError';\n  constructor() {\n    const message =\n      'You are trying to create a listing without providing a signer. ' +\n      'Either a seller or authority must be a Signer.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class WithdrawFromBuyerAccountRequiresSignerError extends AuctionHouseError {\n  readonly name: string = 'WithdrawFromBuyerAccountRequiresSignerError';\n  constructor() {\n    const message =\n      'You are trying to withdraw from buyer account without providing a signer. ' +\n      'Either a buyer or authority must be a Signer.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class PartialPriceMismatchError extends AuctionHouseError {\n  readonly name: string = 'PartialPriceMismatchError';\n  constructor(expected: Amount, actual: Amount) {\n    const message =\n      'The calculated partial price does not equal the partial price provided. ' +\n      `Expected to receive ${formatAmount(expected)} per SFT ` +\n      `but provided ${formatAmount(actual)} per SFT. ` +\n      'The token price must equal the price it has in the listing. ' +\n      'If executing a partial sale, ' +\n      'divide the total price by the number of total tokens on sale and multiply it by the number of tokens you want to buy.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class FindAllSupportsOnlyThreeFiltersMaxError extends AuctionHouseError {\n  readonly name: string = 'FindAllSupportsOnlyThreeFiltersMaxError';\n  constructor() {\n    const message =\n      'Solana filter allows only to provide four custom filters, ' +\n      'one of the filters is internal so it is only possible to provide 3 custom filters. ' +\n      'Please provide less filters to the find all query.';\n    super(message);\n  }\n}\n"],"names":["AuctionHouseError","MetaplexError","constructor","message","cause","_defineProperty","TreasuryDestinationOwnerRequiredError","AuctioneerAuthorityRequiredError","AuctioneerPartialSaleNotSupportedError","BidAndListingHaveDifferentAuctionHousesError","BidAndListingHaveDifferentMintsError","CanceledBidIsNotAllowedError","CanceledListingIsNotAllowedError","CreateListingRequiresSignerError","WithdrawFromBuyerAccountRequiresSignerError","PartialPriceMismatchError","expected","actual","formatAmount","FindAllSupportsOnlyThreeFiltersMaxError"],"mappings":"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"}