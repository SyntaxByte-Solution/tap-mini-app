{"version":3,"file":"Disposable.mjs","sources":["../../../src/utils/Disposable.ts"],"sourcesContent":["import EventEmitterPackage from 'eventemitter3';\nimport type EventEmitter from 'eventemitter3';\n\nexport type DisposableScope = {\n  signal: AbortSignal | undefined;\n  isCanceled: () => boolean;\n  getCancelationError: () => unknown;\n  throwIfCanceled: () => void;\n};\n\nexport class Disposable {\n  protected eventEmitter: EventEmitter;\n  protected signal: AbortSignal;\n  protected cancelationError: unknown = null;\n  protected abortListener: (error: unknown) => void;\n\n  constructor(signal: AbortSignal) {\n    this.signal = signal;\n    this.eventEmitter = new EventEmitterPackage.EventEmitter();\n    this.abortListener = (error: unknown) => {\n      this.cancelationError = error;\n      this.eventEmitter.emit('cancel', error);\n      this.close();\n    };\n    this.signal.addEventListener('abort', this.abortListener);\n  }\n\n  async run<T>(\n    callback: (scope: DisposableScope) => T,\n    thenCloseDisposable = true\n  ) {\n    try {\n      return await Promise.resolve(callback(this.getScope()));\n    } finally {\n      if (thenCloseDisposable) {\n        this.close();\n      }\n    }\n  }\n\n  getScope(): DisposableScope {\n    return {\n      signal: this.signal,\n      isCanceled: () => this.isCanceled(),\n      getCancelationError: () => this.cancelationError,\n      throwIfCanceled: () => {\n        if (this.isCanceled()) {\n          throw this.getCancelationError();\n        }\n      },\n    };\n  }\n\n  isCanceled() {\n    return this.signal.aborted;\n  }\n\n  getCancelationError() {\n    return this.cancelationError;\n  }\n\n  onCancel(callback: (reason: unknown) => unknown): Disposable {\n    this.eventEmitter.on('cancel', callback);\n\n    return this;\n  }\n\n  close() {\n    this.signal.removeEventListener('abort', this.abortListener);\n    this.eventEmitter.removeAllListeners();\n  }\n}\n"],"names":["Disposable","constructor","signal","eventEmitter","EventEmitterPackage","EventEmitter","abortListener","error","cancelationError","emit","close","addEventListener","run","callback","thenCloseDisposable","Promise","resolve","getScope","isCanceled","getCancelationError","throwIfCanceled","aborted","onCancel","on","removeEventListener","removeAllListeners"],"mappings":";;;AAUO,MAAMA,UAAU,CAAC;EAMtBC,WAAW,CAACC,MAAmB,EAAE;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,EAHK,IAAI,CAAA,CAAA;IAIxC,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAA;AACpB,IAAA,IAAI,CAACC,YAAY,GAAG,IAAIC,mBAAmB,CAACC,YAAY,EAAE,CAAA;AAC1D,IAAA,IAAI,CAACC,aAAa,GAAIC,KAAc,IAAK;MACvC,IAAI,CAACC,gBAAgB,GAAGD,KAAK,CAAA;MAC7B,IAAI,CAACJ,YAAY,CAACM,IAAI,CAAC,QAAQ,EAAEF,KAAK,CAAC,CAAA;MACvC,IAAI,CAACG,KAAK,EAAE,CAAA;KACb,CAAA;IACD,IAAI,CAACR,MAAM,CAACS,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACL,aAAa,CAAC,CAAA;AAC3D,GAAA;AAEA,EAAA,MAAMM,GAAG,CACPC,QAAuC,EACvCC,mBAAmB,GAAG,IAAI,EAC1B;IACA,IAAI;AACF,MAAA,OAAO,MAAMC,OAAO,CAACC,OAAO,CAACH,QAAQ,CAAC,IAAI,CAACI,QAAQ,EAAE,CAAC,CAAC,CAAA;AACzD,KAAC,SAAS;AACR,MAAA,IAAIH,mBAAmB,EAAE;QACvB,IAAI,CAACJ,KAAK,EAAE,CAAA;AACd,OAAA;AACF,KAAA;AACF,GAAA;AAEAO,EAAAA,QAAQ,GAAoB;IAC1B,OAAO;MACLf,MAAM,EAAE,IAAI,CAACA,MAAM;AACnBgB,MAAAA,UAAU,EAAE,MAAM,IAAI,CAACA,UAAU,EAAE;AACnCC,MAAAA,mBAAmB,EAAE,MAAM,IAAI,CAACX,gBAAgB;AAChDY,MAAAA,eAAe,EAAE,MAAM;AACrB,QAAA,IAAI,IAAI,CAACF,UAAU,EAAE,EAAE;UACrB,MAAM,IAAI,CAACC,mBAAmB,EAAE,CAAA;AAClC,SAAA;AACF,OAAA;KACD,CAAA;AACH,GAAA;AAEAD,EAAAA,UAAU,GAAG;AACX,IAAA,OAAO,IAAI,CAAChB,MAAM,CAACmB,OAAO,CAAA;AAC5B,GAAA;AAEAF,EAAAA,mBAAmB,GAAG;IACpB,OAAO,IAAI,CAACX,gBAAgB,CAAA;AAC9B,GAAA;EAEAc,QAAQ,CAACT,QAAsC,EAAc;IAC3D,IAAI,CAACV,YAAY,CAACoB,EAAE,CAAC,QAAQ,EAAEV,QAAQ,CAAC,CAAA;AAExC,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEAH,EAAAA,KAAK,GAAG;IACN,IAAI,CAACR,MAAM,CAACsB,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAClB,aAAa,CAAC,CAAA;AAC5D,IAAA,IAAI,CAACH,YAAY,CAACsB,kBAAkB,EAAE,CAAA;AACxC,GAAA;AACF;;;;"}