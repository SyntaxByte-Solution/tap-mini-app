/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type BurnTokenInstructionAccounts = {
    account: PublicKey | Pda;
    mint: PublicKey | Pda;
    authority?: Signer;
};
export type BurnTokenInstructionData = {
    discriminator: number;
    amount: bigint;
};
export type BurnTokenInstructionDataArgs = {
    amount: number | bigint;
};
export declare function getBurnTokenInstructionDataSerializer(): Serializer<BurnTokenInstructionDataArgs, BurnTokenInstructionData>;
export type BurnTokenInstructionArgs = BurnTokenInstructionDataArgs;
export declare function burnToken(context: Pick<Context, 'identity' | 'programs'>, input: BurnTokenInstructionAccounts & BurnTokenInstructionArgs): TransactionBuilder;
