import { updateCandyGuardAuthorityBuilder } from './operations/updateCandyGuardAuthority.mjs';
import { callCandyGuardRouteBuilder } from './operations/callCandyGuardRoute.mjs';
import { createCandyMachineBuilder } from './operations/createCandyMachine.mjs';
import { createCandyGuardBuilder } from './operations/createCandyGuard.mjs';
import { deleteCandyMachineBuilder } from './operations/deleteCandyMachine.mjs';
import { deleteCandyGuardBuilder } from './operations/deleteCandyGuard.mjs';
import { insertCandyMachineItemsBuilder } from './operations/insertCandyMachineItems.mjs';
import { mintFromCandyMachineBuilder } from './operations/mintFromCandyMachine.mjs';
import { unwrapCandyGuardBuilder } from './operations/unwrapCandyGuard.mjs';
import { updateCandyMachineBuilder } from './operations/updateCandyMachine.mjs';
import { updateCandyGuardBuilder } from './operations/updateCandyGuard.mjs';
import { wrapCandyGuardBuilder } from './operations/wrapCandyGuard.mjs';

/**
 * This client allows you to access the underlying Transaction Builders
 * for the write operations of the Candy Guard module.
 *
 * @see {@link CandyMachineClient}
 * @group Module Builders
 */
class CandyMachineBuildersClient {
  constructor(metaplex) {
    this.metaplex = metaplex;
  }

  /** {@inheritDoc callCandyGuardRouteBuilder} */
  callGuardRoute(input, options) {
    return callCandyGuardRouteBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc createCandyMachineBuilder} */
  create(input, options) {
    return createCandyMachineBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc createCandyGuardBuilder} */
  createCandyGuard(input, options) {
    return createCandyGuardBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc deleteCandyMachineBuilder} */
  delete(input, options) {
    return deleteCandyMachineBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc deleteCandyGuardBuilder} */
  deleteCandyGuard(input, options) {
    return deleteCandyGuardBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc insertCandyMachineItemsBuilder} */
  insertItems(input, options) {
    return insertCandyMachineItemsBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc mintFromCandyMachineBuilder} */
  mint(input, options) {
    return mintFromCandyMachineBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc unwrapCandyGuardBuilder} */
  unwrapCandyGuard(input, options) {
    return unwrapCandyGuardBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc updateCandyMachineBuilder} */
  update(input, options) {
    return updateCandyMachineBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc updateCandyGuardBuilder} */
  updateCandyGuard(input, options) {
    return updateCandyGuardBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc updateCandyGuardAuthorityBuilder} */
  updateCandyGuardAuthority(input, options) {
    return updateCandyGuardAuthorityBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc wrapCandyGuardBuilder} */
  wrapCandyGuard(input, options) {
    return wrapCandyGuardBuilder(this.metaplex, input, options);
  }
}

export { CandyMachineBuildersClient };
//# sourceMappingURL=CandyMachineBuildersClient.mjs.map
