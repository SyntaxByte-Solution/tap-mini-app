import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.mjs';
import { MetaplexError } from '../../errors/MetaplexError.mjs';

/** @group Errors */
class NftError extends MetaplexError {
  constructor(message, cause) {
    super(message, 'plugin', 'NFT', cause);
    _defineProperty(this, "name", 'NftError');
  }
}

/** @group Errors */
class ParentCollectionMissingError extends NftError {
  constructor(mint, operation) {
    const message = `You are trying to send the operation [${operation}] which requires the NFT to have ` + `a parent collection but that is not the case for the NFT at address [${mint}]. ` + 'Ensure the NFT you are interacting with has a parent collection.';
    super(message);
    _defineProperty(this, "name", 'ParentCollectionMissingError');
  }
}

/** @group Errors */
class DelegateRoleRequiredDataError extends NftError {
  constructor(type) {
    const message = `You are trying to approve a delegate of type "${type}" ` + `but did not provide any data for that role. Please provide the "data" ` + 'attribute as the SDK cannot provide a default value for that role.';
    super(message);
    _defineProperty(this, "name", 'DelegateRoleRequiredDataError');
  }
}

export { DelegateRoleRequiredDataError, NftError, ParentCollectionMissingError };
//# sourceMappingURL=errors.mjs.map
