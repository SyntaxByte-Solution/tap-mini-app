/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type TransferAllSolInstructionAccounts = {
    /** The source account sending all its lamports */
    source?: Signer;
    /** The destination account receiving the lamports */
    destination: PublicKey | Pda;
    /** System program */
    systemProgram?: PublicKey | Pda;
};
export type TransferAllSolInstructionData = {
    discriminator: number;
};
export type TransferAllSolInstructionDataArgs = {};
export declare function getTransferAllSolInstructionDataSerializer(): Serializer<TransferAllSolInstructionDataArgs, TransferAllSolInstructionData>;
export declare function transferAllSol(context: Pick<Context, 'identity' | 'programs'>, input: TransferAllSolInstructionAccounts): TransactionBuilder;
