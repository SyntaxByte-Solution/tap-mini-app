import { Commitment, Connection, ConnectionConfig, PublicKey } from '@solana/web3.js';
import type { Metadata, Mint, NftOriginalEdition } from '../plugins';
import { ReadApiError } from '../errors/ReadApiError';
import type { GetAssetProofRpcResponse, GetAssetsByOwnerRpcInput, GetAssetsByGroupRpcInput, ReadApiAsset, ReadApiAssetList } from '../types/ReadApi';
export declare const toNftEditionFromReadApiAsset: (input: ReadApiAsset) => NftOriginalEdition;
export declare const toMintFromReadApiAsset: (input: ReadApiAsset) => Mint;
export declare const toMetadataFromReadApiAsset: (input: ReadApiAsset) => Metadata;
export declare class ReadApiConnection extends Connection {
    constructor(endpoint: string, commitmentOrConfig?: Commitment | ConnectionConfig);
    private callReadApi;
    getAsset(assetId: PublicKey): Promise<ReadApiAsset | ReadApiError>;
    getAssetProof(assetId: PublicKey): Promise<GetAssetProofRpcResponse | ReadApiError>;
    getAssetsByGroup({ groupKey, groupValue, page, limit, sortBy, before, after, }: GetAssetsByGroupRpcInput): Promise<ReadApiAssetList | ReadApiError>;
    getAssetsByOwner({ ownerAddress, page, limit, sortBy, before, after, }: GetAssetsByOwnerRpcInput): Promise<ReadApiAssetList | ReadApiError>;
}
