{"version":3,"file":"Model.mjs","sources":["../../../src/types/Model.ts"],"sourcesContent":["import { default as assert } from '@/utils/assert';\n\n/**\n * A helper type that defines a model as an opaque type.\n */\nexport type Model<T extends string> = {\n  /** A model identifier to distinguish models in the SDK. */\n  readonly model: T;\n};\n\n/**\n * A helper function that determines whether a value is a model\n * of the given type.\n */\nexport const isModel = <M extends Model<T>, T extends string = M['model']>(\n  model: T,\n  value: any\n): value is M => typeof value === 'object' && value.model === model;\n\n/**\n * A helper function to use in type guards asserting that a value is a model.\n * This currently wraps the `assert` method which is not exposed by the library.\n * In the future, we might replace this with a custom error.\n */\nexport function assertModel(\n  condition: boolean,\n  message?: string\n): asserts condition {\n  assert(condition, message);\n}\n"],"names":["isModel","model","value","assertModel","condition","message","assert"],"mappings":";;AAEA;AACA;AACA;;AAMA;AACA;AACA;AACA;MACaA,OAAO,GAAG,CACrBC,KAAQ,EACRC,KAAU,KACK,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACD,KAAK,KAAKA,MAAK;;AAEnE;AACA;AACA;AACA;AACA;AACO,SAASE,WAAW,CACzBC,SAAkB,EAClBC,OAAgB,EACG;AACnBC,EAAAA,MAAM,CAACF,SAAS,EAAEC,OAAO,CAAC,CAAA;AAC5B;;;;"}