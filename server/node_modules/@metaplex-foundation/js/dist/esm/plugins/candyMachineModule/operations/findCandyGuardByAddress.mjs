import { assertAccountExists } from '../../../types/Account.mjs';
import { toCandyGuard } from '../models/CandyGuard.mjs';

// -----------------
// Operation
// -----------------

const Key = 'FindCandyGuardByAddressOperation';

/**
 * Find an existing Candy Guard by its address.
 *
 * ```ts
 * const candyGuard = await metaplex
 *   .candyMachines()
 *   .findCandyGuardbyAddress({ address };
 * ```
 *
 * @group Operations
 * @category Constructors
 */
const findCandyGuardByAddressOperation = _findCandyGuardByAddressOperation;
// eslint-disable-next-line @typescript-eslint/naming-convention
function _findCandyGuardByAddressOperation(input) {
  return {
    key: Key,
    input
  };
}
_findCandyGuardByAddressOperation.key = Key;

/**
 * @group Operations
 * @category Types
 */

/**
 * @group Operations
 * @category Handlers
 */
const findCandyGuardByAddressOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const {
      address
    } = operation.input;
    const account = await metaplex.rpc().getAccount(address, scope.commitment);
    assertAccountExists(account);
    return toCandyGuard(account, metaplex);
  }
};

export { findCandyGuardByAddressOperation, findCandyGuardByAddressOperationHandler };
//# sourceMappingURL=findCandyGuardByAddress.mjs.map
