import { PublicKey } from '@solana/web3.js';
import { AuctionHouse, Bid, LazyBid } from '../models';
import { Operation, OperationHandler } from '../../../types';
declare const Key: "FindBidsOperation";
/**
 * Finds Bids by multiple criteria.
 * You can use any combination of keys.
 *
 * ```ts
 * // Find all bids in an Auction House.
 * const bids = await metaplex
 *   .auctionHouse()
 *   .findBids({ auctionHouse });
 *
 * // Find bids by buyer and mint.
 * const bids = await metaplex
 *   .auctionHouse()
 *   .findBids({ auctionHouse, buyer, mint });
 *
 * // Find bids by metadata.
 * const bids = await metaplex
 *   .auctionHouse()
 *   .findBids({ auctionHouse, metadata });
 * ```
 *
 * @group Operations
 * @category Constructors
 */
export declare const findBidsOperation: import("../../../types").OperationConstructor<FindBidsOperation, "FindBidsOperation", FindBidsInput, FindBidsOutput>;
/**
 * @group Operations
 * @category Types
 */
export type FindBidsOperation = Operation<typeof Key, FindBidsInput, FindBidsOutput>;
/**
 * @group Operations
 * @category Inputs
 */
export type FindBidsInput = {
    /** A model of the Auction House related to these listings. */
    auctionHouse: AuctionHouse;
    /** The address of a buyer to search by. */
    buyer?: PublicKey;
    /**
     * The address of metadata to search by.
     * Ignored when mint provided.
     */
    metadata?: PublicKey;
    /** The address of a mint to search by. */
    mint?: PublicKey;
};
/**
 * @group Operations
 * @category Outputs
 */
export type FindBidsOutput = (LazyBid | Bid)[];
/**
 * @group Operations
 * @category Handlers
 */
export declare const findBidsOperationHandler: OperationHandler<FindBidsOperation>;
export {};
