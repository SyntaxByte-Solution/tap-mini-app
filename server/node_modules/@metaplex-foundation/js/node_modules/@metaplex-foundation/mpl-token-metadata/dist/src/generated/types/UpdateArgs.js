"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateArgsBeet = exports.isUpdateArgsAsProgrammableConfigItemDelegateV2 = exports.isUpdateArgsAsCollectionItemDelegateV2 = exports.isUpdateArgsAsDataItemDelegateV2 = exports.isUpdateArgsAsProgrammableConfigDelegateV2 = exports.isUpdateArgsAsDataDelegateV2 = exports.isUpdateArgsAsCollectionDelegateV2 = exports.isUpdateArgsAsAuthorityItemDelegateV2 = exports.isUpdateArgsAsUpdateAuthorityV2 = exports.isUpdateArgsV1 = void 0;
const beet = __importStar(require("@metaplex-foundation/beet"));
const beetSolana = __importStar(require("@metaplex-foundation/beet-solana"));
const Data_1 = require("./Data");
const CollectionToggle_1 = require("./CollectionToggle");
const CollectionDetailsToggle_1 = require("./CollectionDetailsToggle");
const UsesToggle_1 = require("./UsesToggle");
const RuleSetToggle_1 = require("./RuleSetToggle");
const AuthorizationData_1 = require("./AuthorizationData");
const TokenStandard_1 = require("./TokenStandard");
const isUpdateArgsV1 = (x) => x.__kind === 'V1';
exports.isUpdateArgsV1 = isUpdateArgsV1;
const isUpdateArgsAsUpdateAuthorityV2 = (x) => x.__kind === 'AsUpdateAuthorityV2';
exports.isUpdateArgsAsUpdateAuthorityV2 = isUpdateArgsAsUpdateAuthorityV2;
const isUpdateArgsAsAuthorityItemDelegateV2 = (x) => x.__kind === 'AsAuthorityItemDelegateV2';
exports.isUpdateArgsAsAuthorityItemDelegateV2 = isUpdateArgsAsAuthorityItemDelegateV2;
const isUpdateArgsAsCollectionDelegateV2 = (x) => x.__kind === 'AsCollectionDelegateV2';
exports.isUpdateArgsAsCollectionDelegateV2 = isUpdateArgsAsCollectionDelegateV2;
const isUpdateArgsAsDataDelegateV2 = (x) => x.__kind === 'AsDataDelegateV2';
exports.isUpdateArgsAsDataDelegateV2 = isUpdateArgsAsDataDelegateV2;
const isUpdateArgsAsProgrammableConfigDelegateV2 = (x) => x.__kind === 'AsProgrammableConfigDelegateV2';
exports.isUpdateArgsAsProgrammableConfigDelegateV2 = isUpdateArgsAsProgrammableConfigDelegateV2;
const isUpdateArgsAsDataItemDelegateV2 = (x) => x.__kind === 'AsDataItemDelegateV2';
exports.isUpdateArgsAsDataItemDelegateV2 = isUpdateArgsAsDataItemDelegateV2;
const isUpdateArgsAsCollectionItemDelegateV2 = (x) => x.__kind === 'AsCollectionItemDelegateV2';
exports.isUpdateArgsAsCollectionItemDelegateV2 = isUpdateArgsAsCollectionItemDelegateV2;
const isUpdateArgsAsProgrammableConfigItemDelegateV2 = (x) => x.__kind === 'AsProgrammableConfigItemDelegateV2';
exports.isUpdateArgsAsProgrammableConfigItemDelegateV2 = isUpdateArgsAsProgrammableConfigItemDelegateV2;
exports.updateArgsBeet = beet.dataEnum([
    [
        'V1',
        new beet.FixableBeetArgsStruct([
            ['newUpdateAuthority', beet.coption(beetSolana.publicKey)],
            ['data', beet.coption(Data_1.dataBeet)],
            ['primarySaleHappened', beet.coption(beet.bool)],
            ['isMutable', beet.coption(beet.bool)],
            ['collection', CollectionToggle_1.collectionToggleBeet],
            ['collectionDetails', CollectionDetailsToggle_1.collectionDetailsToggleBeet],
            ['uses', UsesToggle_1.usesToggleBeet],
            ['ruleSet', RuleSetToggle_1.ruleSetToggleBeet],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["V1"]'),
    ],
    [
        'AsUpdateAuthorityV2',
        new beet.FixableBeetArgsStruct([
            ['newUpdateAuthority', beet.coption(beetSolana.publicKey)],
            ['data', beet.coption(Data_1.dataBeet)],
            ['primarySaleHappened', beet.coption(beet.bool)],
            ['isMutable', beet.coption(beet.bool)],
            ['collection', CollectionToggle_1.collectionToggleBeet],
            ['collectionDetails', CollectionDetailsToggle_1.collectionDetailsToggleBeet],
            ['uses', UsesToggle_1.usesToggleBeet],
            ['ruleSet', RuleSetToggle_1.ruleSetToggleBeet],
            ['tokenStandard', beet.coption(TokenStandard_1.tokenStandardBeet)],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsUpdateAuthorityV2"]'),
    ],
    [
        'AsAuthorityItemDelegateV2',
        new beet.FixableBeetArgsStruct([
            ['newUpdateAuthority', beet.coption(beetSolana.publicKey)],
            ['primarySaleHappened', beet.coption(beet.bool)],
            ['isMutable', beet.coption(beet.bool)],
            ['tokenStandard', beet.coption(TokenStandard_1.tokenStandardBeet)],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsAuthorityItemDelegateV2"]'),
    ],
    [
        'AsCollectionDelegateV2',
        new beet.FixableBeetArgsStruct([
            ['collection', CollectionToggle_1.collectionToggleBeet],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsCollectionDelegateV2"]'),
    ],
    [
        'AsDataDelegateV2',
        new beet.FixableBeetArgsStruct([
            ['data', beet.coption(Data_1.dataBeet)],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsDataDelegateV2"]'),
    ],
    [
        'AsProgrammableConfigDelegateV2',
        new beet.FixableBeetArgsStruct([
            ['ruleSet', RuleSetToggle_1.ruleSetToggleBeet],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsProgrammableConfigDelegateV2"]'),
    ],
    [
        'AsDataItemDelegateV2',
        new beet.FixableBeetArgsStruct([
            ['data', beet.coption(Data_1.dataBeet)],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsDataItemDelegateV2"]'),
    ],
    [
        'AsCollectionItemDelegateV2',
        new beet.FixableBeetArgsStruct([
            ['collection', CollectionToggle_1.collectionToggleBeet],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsCollectionItemDelegateV2"]'),
    ],
    [
        'AsProgrammableConfigItemDelegateV2',
        new beet.FixableBeetArgsStruct([
            ['ruleSet', RuleSetToggle_1.ruleSetToggleBeet],
            ['authorizationData', beet.coption(AuthorizationData_1.authorizationDataBeet)],
        ], 'UpdateArgsRecord["AsProgrammableConfigItemDelegateV2"]'),
    ],
]);
//# sourceMappingURL=UpdateArgs.js.map