{"version":3,"file":"common.mjs","sources":["../../../src/utils/common.ts"],"sourcesContent":["import mime from 'mime';\n\n// eslint-disable-next-line no-control-regex\nexport const removeEmptyChars = (value: string) => value.replace(/\\u0000/g, '');\n\nexport const padEmptyChars = (value: string, chars: number) =>\n  value.padEnd(chars, '\\u0000');\n\nexport const tryOr = <T, U>(callback: () => T, defaultValue: U): T | U => {\n  try {\n    return callback();\n  } catch (error) {\n    return defaultValue;\n  }\n};\n\nexport const tryOrNull = <T>(cb: () => T) => tryOr(cb, null);\n\nexport const chunk = <T>(array: T[], chunkSize: number): T[][] =>\n  array.reduce((accumulator, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n\n    if (!accumulator[chunkIndex]) {\n      accumulator[chunkIndex] = [];\n    }\n\n    accumulator[chunkIndex].push(item);\n\n    return accumulator;\n  }, [] as T[][]);\n\nexport const zipMap = <T, U, V>(\n  left: T[],\n  right: U[],\n  fn: (t: T, u: U | null, i: number) => V\n): V[] => left.map((t: T, index) => fn(t, right?.[index] ?? null, index));\n\nexport const randomStr = (\n  length = 20,\n  alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n) => {\n  let result = '';\n  const alphabetLength = alphabet.length;\n  for (var i = 0; i < length; i++) {\n    result += alphabet.charAt(Math.floor(Math.random() * alphabetLength));\n  }\n\n  return result;\n};\n\nexport const getContentType = (fileName: string): string | null =>\n  mime.getType(fileName);\n\nexport const getExtension = (fileName: string): string | null => {\n  const lastDotIndex = fileName.lastIndexOf('.');\n\n  return lastDotIndex < 0 ? null : fileName.slice(lastDotIndex + 1);\n};\n\nexport type WalkOptions = {\n  sortObjectKeys?: boolean;\n};\n\nexport const walk = (\n  parent: any,\n  cb: (\n    next: (child: any) => void,\n    value: any,\n    key: any,\n    parent: any\n  ) => unknown,\n  options?: WalkOptions\n): void => {\n  const recursiveWalk = (child: any) => walk(child, cb, options);\n\n  if (parent && Array.isArray(parent)) {\n    parent.forEach((child, index) => {\n      cb(recursiveWalk, child, index, parent);\n    });\n  } else if (parent && typeof parent === 'object') {\n    const keys = Object.keys(parent);\n\n    if (options?.sortObjectKeys ?? true) {\n      keys.sort();\n    }\n\n    keys.forEach((key) => {\n      const child = parent[key];\n      cb(recursiveWalk, child, key, parent);\n    });\n  }\n};\n\nexport const removeUndefinedAttributes = <\n  T extends {\n    [key: string]: any;\n  }\n>(\n  object: T\n): { [key in keyof T]-?: T[key] } =>\n  Object.keys(object).reduce((acc, key: keyof T) => {\n    if (object[key] !== undefined) {\n      acc[key] = object[key];\n    }\n    return acc;\n  }, {} as { [key in keyof T]-?: T[key] });\n"],"names":["removeEmptyChars","value","replace","padEmptyChars","chars","padEnd","tryOr","callback","defaultValue","error","tryOrNull","cb","chunk","array","chunkSize","reduce","accumulator","item","index","chunkIndex","Math","floor","push","zipMap","left","right","fn","map","t","randomStr","length","alphabet","result","alphabetLength","i","charAt","random","getContentType","fileName","mime","getType","getExtension","lastDotIndex","lastIndexOf","slice","walk","parent","options","recursiveWalk","child","Array","isArray","forEach","keys","Object","sortObjectKeys","sort","key","removeUndefinedAttributes","object","acc","undefined"],"mappings":"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"}