{"version":3,"file":"CandyMachineClient.cjs","sources":["../../../../src/plugins/candyMachineModule/CandyMachineClient.ts"],"sourcesContent":["import { CandyMachineBuildersClient } from './CandyMachineBuildersClient';\nimport { CandyMachineGuardsClient } from './CandyMachineGuardsClient';\nimport { CandyMachinePdasClient } from './CandyMachinePdasClient';\nimport {\n  CandyGuardsMintSettings,\n  CandyGuardsRouteSettings,\n  CandyGuardsSettings,\n  DefaultCandyGuardMintSettings,\n  DefaultCandyGuardRouteSettings,\n  DefaultCandyGuardSettings,\n} from './guards';\nimport { CandyGuard, CandyMachine, isCandyMachine } from './models';\nimport {\n  CallCandyGuardRouteInput,\n  callCandyGuardRouteOperation,\n  CreateCandyGuardInput,\n  createCandyGuardOperation,\n  CreateCandyMachineInput,\n  createCandyMachineOperation,\n  DeleteCandyGuardInput,\n  deleteCandyGuardOperation,\n  DeleteCandyMachineInput,\n  deleteCandyMachineOperation,\n  FindCandyGuardByAddressInput,\n  findCandyGuardByAddressOperation,\n  FindCandyGuardsByAuthorityInput,\n  findCandyGuardsByAuthorityOperation,\n  FindCandyMachineByAddressInput,\n  findCandyMachineByAddressOperation,\n  InsertCandyMachineItemsInput,\n  insertCandyMachineItemsOperation,\n  MintFromCandyMachineInput,\n  mintFromCandyMachineOperation,\n  UnwrapCandyGuardInput,\n  unwrapCandyGuardOperation,\n  UpdateCandyGuardInput,\n  updateCandyGuardOperation,\n  UpdateCandyMachineInput,\n  updateCandyMachineOperation,\n  WrapCandyGuardInput,\n  wrapCandyGuardOperation,\n} from './operations';\nimport {\n  UpdateCandyGuardAuthorityInput,\n  updateCandyGuardAuthorityOperation,\n} from './operations/updateCandyGuardAuthority';\nimport { OperationOptions, toPublicKey } from '@/types';\nimport type { Metaplex } from '@/Metaplex';\n\n/**\n * This is a client for the Candy Machine V3 module.\n *\n * It enables us to interact with the Candy Machine V3 and Candy Guard programs\n * in order to create, update, delete and mint from Candy Machines as well as\n * registering your own custom Candy Guards.\n *\n * You may access this client via the `candyMachines()` method of your `Metaplex` instance.\n *\n * ```ts\n * const candyMachineClient = metaplex.candyMachines();\n * ```\n *\n * @example\n * You can create a new Candy Machine with minimum input like so.\n * By default, the current identity of the Metaplex instance will be\n * the authority of the Candy Machine and it will immediately create\n * a Candy Guard linked to the new Candy Machine.\n *\n * ```ts\n *  const { candyMachine } = await metaplex\n *    .candyMachines()\n *    .create({\n *      itemsAvailable: toBigNumber(5000),\n *      sellerFeeBasisPoints: 333, // 3.33%\n *      collection: {\n *        address: collectionNft.address,\n *        updateAuthority: collectionUpdateAuthority,\n *      },\n *    });\n * ```\n *\n * @see {@link CandyGuard} The `CandyGuard` model\n * @group Modules\n */\nexport class CandyMachineClient {\n  protected readonly guardsClient: CandyMachineGuardsClient;\n\n  constructor(readonly metaplex: Metaplex) {\n    this.guardsClient = new CandyMachineGuardsClient(metaplex);\n  }\n\n  /**\n   * You may use the `guards()` client to access the default guards\n   * available as well as register your own guards.\n   *\n   * ```ts\n   * const guardsClient = metaplex.candyMachines().guards();\n   * ```\n   */\n  guards() {\n    return this.guardsClient;\n  }\n\n  /**\n   * You may use the `builders()` client to access the\n   * underlying Transaction Builders of this module.\n   *\n   * ```ts\n   * const buildersClient = metaplex.candyMachines().builders();\n   * ```\n   */\n  builders() {\n    return new CandyMachineBuildersClient(this.metaplex);\n  }\n\n  /**\n   * You may use the `pdas()` client to build PDAs related to this module.\n   *\n   * ```ts\n   * const pdasClient = metaplex.candyMachines().pdas();\n   * ```\n   */\n  pdas() {\n    return new CandyMachinePdasClient(this.metaplex);\n  }\n\n  /** {@inheritDoc callCandyGuardRouteOperation} */\n  callGuardRoute<\n    Guard extends keyof RouteSettings & string,\n    Settings extends CandyGuardsSettings = DefaultCandyGuardSettings,\n    RouteSettings extends CandyGuardsRouteSettings = DefaultCandyGuardRouteSettings\n  >(\n    input: CallCandyGuardRouteInput<\n      Guard,\n      Settings extends undefined ? DefaultCandyGuardSettings : Settings,\n      RouteSettings extends undefined\n        ? DefaultCandyGuardRouteSettings\n        : RouteSettings\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(callCandyGuardRouteOperation(input), options);\n  }\n\n  /** {@inheritDoc createCandyMachineOperation} */\n  create<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: CreateCandyMachineInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(createCandyMachineOperation(input), options);\n  }\n\n  /** {@inheritDoc createCandyGuardOperation} */\n  createCandyGuard<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: CreateCandyGuardInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(createCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc deleteCandyMachineOperation} */\n  delete(input: DeleteCandyMachineInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(deleteCandyMachineOperation(input), options);\n  }\n\n  /** {@inheritDoc deleteCandyGuardOperation} */\n  deleteCandyGuard(input: DeleteCandyGuardInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(deleteCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc findCandyGuardsByAuthorityOperation} */\n  findAllCandyGuardsByAuthority<\n    T extends CandyGuardsSettings = DefaultCandyGuardSettings\n  >(input: FindCandyGuardsByAuthorityInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findCandyGuardsByAuthorityOperation<T>(input), options);\n  }\n\n  /** {@inheritDoc findCandyMachineByAddressOperation} */\n  findByAddress<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: FindCandyMachineByAddressInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findCandyMachineByAddressOperation<T>(input), options);\n  }\n\n  /** {@inheritDoc findCandyGuardByAddressOperation} */\n  findCandyGuardByAddress<\n    T extends CandyGuardsSettings = DefaultCandyGuardSettings\n  >(input: FindCandyGuardByAddressInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findCandyGuardByAddressOperation<T>(input), options);\n  }\n\n  /**\n   * Helper method that fetches a Candy Guard via the base\n   * address used to derived its PDA.\n   *\n   * ```ts\n   * const candyGuard = await metaplex\n   *   .candyMachines()\n   *   .findCandyGuardByBaseAddress({ address: base });\n   * ```\n   */\n  findCandyGuardByBaseAddress<\n    T extends CandyGuardsSettings = DefaultCandyGuardSettings\n  >(input: FindCandyGuardByAddressInput, options?: OperationOptions) {\n    const address = this.pdas().candyGuard({ base: input.address });\n    return this.findCandyGuardByAddress<T>({ ...input, address }, options);\n  }\n\n  /** {@inheritDoc insertCandyMachineItemsOperation} */\n  insertItems(input: InsertCandyMachineItemsInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(insertCandyMachineItemsOperation(input), options);\n  }\n\n  /** {@inheritDoc mintFromCandyMachineOperation} */\n  mint<\n    Settings extends CandyGuardsSettings = DefaultCandyGuardSettings,\n    MintSettings extends CandyGuardsMintSettings = DefaultCandyGuardMintSettings\n  >(\n    input: MintFromCandyMachineInput<\n      Settings extends undefined ? DefaultCandyGuardSettings : Settings,\n      MintSettings extends undefined\n        ? DefaultCandyGuardMintSettings\n        : MintSettings\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(mintFromCandyMachineOperation(input), options);\n  }\n\n  /**\n   * Helper method that refetches a given Candy Machine or Candy Guard.\n   *\n   * ```ts\n   * const candyMachine = await metaplex.candyMachines().refresh(candyMachine);\n   * const candyGuard = await metaplex.candyMachines().refresh(candyGuard);\n   * ```\n   */\n  async refresh<\n    T extends CandyGuardsSettings,\n    M extends CandyMachine<T> | CandyGuard<T>\n  >(model: M, options?: OperationOptions): Promise<M> {\n    const input = { address: toPublicKey(model) };\n    const refreshedModel = isCandyMachine(model)\n      ? await this.findByAddress<T>(input, options)\n      : await this.findCandyGuardByAddress<T>(input, options);\n\n    return refreshedModel as M;\n  }\n\n  /** {@inheritDoc unwrapCandyGuardOperation} */\n  unwrapCandyGuard(input: UnwrapCandyGuardInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(unwrapCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc updateCandyMachineOperation} */\n  update<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: UpdateCandyMachineInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(updateCandyMachineOperation(input), options);\n  }\n\n  /** {@inheritDoc updateCandyGuardOperation} */\n  updateCandyGuard<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: UpdateCandyGuardInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(updateCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc updateCandyGuardAuthorityOperation} */\n  updateCandyGuardAuthority(\n    input: UpdateCandyGuardAuthorityInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(updateCandyGuardAuthorityOperation(input), options);\n  }\n\n  /** {@inheritDoc wrapCandyGuardOperation} */\n  wrapCandyGuard(input: WrapCandyGuardInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(wrapCandyGuardOperation(input), options);\n  }\n}\n"],"names":["CandyMachineClient","constructor","metaplex","guardsClient","CandyMachineGuardsClient","guards","builders","CandyMachineBuildersClient","pdas","CandyMachinePdasClient","callGuardRoute","input","options","operations","execute","callCandyGuardRouteOperation","create","createCandyMachineOperation","createCandyGuard","createCandyGuardOperation","delete","deleteCandyMachineOperation","deleteCandyGuard","deleteCandyGuardOperation","findAllCandyGuardsByAuthority","findCandyGuardsByAuthorityOperation","findByAddress","findCandyMachineByAddressOperation","findCandyGuardByAddress","findCandyGuardByAddressOperation","findCandyGuardByBaseAddress","address","candyGuard","base","insertItems","insertCandyMachineItemsOperation","mint","mintFromCandyMachineOperation","refresh","model","toPublicKey","refreshedModel","isCandyMachine","unwrapCandyGuard","unwrapCandyGuardOperation","update","updateCandyMachineOperation","updateCandyGuard","updateCandyGuardOperation","updateCandyGuardAuthority","updateCandyGuardAuthorityOperation","wrapCandyGuard","wrapCandyGuardOperation"],"mappings":"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"}