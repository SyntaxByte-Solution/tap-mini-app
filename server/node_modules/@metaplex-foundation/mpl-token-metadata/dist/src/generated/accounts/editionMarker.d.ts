/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { Key, KeyArgs } from '../types';
export type EditionMarker = Account<EditionMarkerAccountData>;
export type EditionMarkerAccountData = {
    key: Key;
    ledger: Array<number>;
};
export type EditionMarkerAccountDataArgs = {
    ledger: Array<number>;
};
export declare function getEditionMarkerAccountDataSerializer(): Serializer<EditionMarkerAccountDataArgs, EditionMarkerAccountData>;
export declare function deserializeEditionMarker(rawAccount: RpcAccount): EditionMarker;
export declare function fetchEditionMarker(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<EditionMarker>;
export declare function safeFetchEditionMarker(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<EditionMarker | null>;
export declare function fetchAllEditionMarker(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<EditionMarker[]>;
export declare function safeFetchAllEditionMarker(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<EditionMarker[]>;
export declare function getEditionMarkerGpaBuilder(context: Pick<Context, 'rpc' | 'programs'>): import("@metaplex-foundation/umi").GpaBuilder<EditionMarker, {
    key: KeyArgs;
    ledger: Array<number>;
}>;
export declare function getEditionMarkerSize(): number;
export declare function findEditionMarkerPda(context: Pick<Context, 'eddsa' | 'programs'>, seeds: {
    /** The address of the mint account */
    mint: PublicKey;
    /** The floor of the edition number divided by 248 as a string. I.e. ⌊edition/248⌋. */
    editionMarker: string;
}): Pda;
export declare function fetchEditionMarkerFromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findEditionMarkerPda>[1], options?: RpcGetAccountOptions): Promise<EditionMarker>;
export declare function safeFetchEditionMarkerFromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findEditionMarkerPda>[1], options?: RpcGetAccountOptions): Promise<EditionMarker | null>;
