import { Buffer } from 'buffer';
import { thirdPartySignerBeet } from '@metaplex-foundation/mpl-candy-guard';
import { GuardMintSettingsMissingError } from '../errors.mjs';
import { createSerializerFromBeet } from '../../../types/Serializer.mjs';

/**
 * The thirdPartySigner guard requires a predefined
 * address to sign the mint transaction. The signer will need
 * to be passed within the mint settings of this guard.
 *
 * This allows for more centralized mints where every single
 * mint transaction has to go through a specific signer.
 *
 * This object defines the settings that should be
 * provided when creating and/or updating a Candy
 * Machine if you wish to enable this guard.
 *
 * @see {@link ThirdPartySignerGuardMintSettings} for more
 * information on the mint settings of this guard.
 */

/** @internal */
const thirdPartySignerGuardManifest = {
  name: 'thirdPartySigner',
  settingsBytes: 32,
  settingsSerializer: createSerializerFromBeet(thirdPartySignerBeet),
  mintSettingsParser: ({
    mintSettings
  }) => {
    if (!mintSettings) {
      throw new GuardMintSettingsMissingError('thirdPartySigner');
    }
    return {
      arguments: Buffer.from([]),
      remainingAccounts: [{
        isSigner: true,
        address: mintSettings.signer,
        isWritable: true
      }]
    };
  }
};

export { thirdPartySignerGuardManifest };
//# sourceMappingURL=thirdPartySigner.mjs.map
