{"version":3,"sources":["(disabled):crypto","../node_modules/.pnpm/tweetnacl@1.0.3/node_modules/tweetnacl/nacl-fast.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/_assert.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/utils.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/hmac.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/pbkdf2.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/_sha2.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/sha256.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/_u64.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/sha512.js","../node_modules/.pnpm/@scure+base@1.1.1/node_modules/@scure/base/lib/index.js","../node_modules/.pnpm/@scure+bip39@1.1.0/node_modules/@scure/bip39/index.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/bind.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/utils.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/buildURL.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/InterceptorManager.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/AxiosError.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/defaults/transitional.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/toFormData.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/settle.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/cookies.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/combineURLs.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/buildFullPath.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/cancel/CanceledError.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/adapters/xhr.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/null.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/defaults/index.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/transformData.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/cancel/isCancel.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/dispatchRequest.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/mergeConfig.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/env/data.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/validator.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/core/Axios.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/cancel/CancelToken.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/spread.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/lib/axios.js","../node_modules/.pnpm/axios@0.27.2/node_modules/axios/index.js","../node_modules/.pnpm/form-data@4.0.0/node_modules/form-data/lib/browser.js","../src/index.ts","../src/account/aptos_account.ts","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/utils.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/_assert.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/_u64.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/sha3.js","../src/utils/hd-key.ts","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/hmac.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/_sha2.js","../node_modules/.pnpm/@noble+hashes@1.1.3/node_modules/@noble/hashes/esm/sha512.js","../src/utils/misc.ts","../src/utils/memoize-decorator.ts","../src/utils/hex_string.ts","../src/utils/pagination_helpers.ts","../src/utils/api-endpoints.ts","../src/aptos_types/index.ts","../src/bcs/index.ts","../src/bcs/consts.ts","../src/bcs/serializer.ts","../src/bcs/deserializer.ts","../src/bcs/helper.ts","../src/aptos_types/account_address.ts","../src/aptos_types/ed25519.ts","../src/aptos_types/multi_ed25519.ts","../src/aptos_types/authenticator.ts","../src/aptos_types/identifier.ts","../src/aptos_types/type_tag.ts","../src/aptos_types/transaction.ts","../src/aptos_types/abi.ts","../src/aptos_types/authentication_key.ts","../src/aptos_types/rotation_proof_challenge.ts","../src/providers/indexer.ts","../src/indexer/generated/queries.ts","../src/generated/index.ts","../src/generated/core/BaseHttpRequest.ts","../src/generated/core/request.ts","../src/generated/core/ApiError.ts","../src/generated/core/CancelablePromise.ts","../src/generated/core/AxiosHttpRequest.ts","../src/generated/services/AccountsService.ts","../src/generated/services/BlocksService.ts","../src/generated/services/EventsService.ts","../src/generated/services/GeneralService.ts","../src/generated/services/TablesService.ts","../src/generated/services/TransactionsService.ts","../src/generated/services/ViewService.ts","../src/generated/AptosGeneratedClient.ts","../src/generated/core/OpenAPI.ts","../src/generated/models/AptosErrorCode.ts","../src/generated/models/MoveFunctionVisibility.ts","../src/generated/models/RoleType.ts","../src/generated/schemas/$AccountData.ts","../src/generated/schemas/$AccountSignature.ts","../src/generated/schemas/$AccountSignature_Ed25519Signature.ts","../src/generated/schemas/$AccountSignature_MultiEd25519Signature.ts","../src/generated/schemas/$Address.ts","../src/generated/schemas/$AptosError.ts","../src/generated/schemas/$AptosErrorCode.ts","../src/generated/schemas/$Block.ts","../src/generated/schemas/$BlockMetadataTransaction.ts","../src/generated/schemas/$DecodedTableData.ts","../src/generated/schemas/$DeletedTableData.ts","../src/generated/schemas/$DeleteModule.ts","../src/generated/schemas/$DeleteResource.ts","../src/generated/schemas/$DeleteTableItem.ts","../src/generated/schemas/$DirectWriteSet.ts","../src/generated/schemas/$Ed25519Signature.ts","../src/generated/schemas/$EncodeSubmissionRequest.ts","../src/generated/schemas/$EntryFunctionId.ts","../src/generated/schemas/$EntryFunctionPayload.ts","../src/generated/schemas/$Event.ts","../src/generated/schemas/$EventGuid.ts","../src/generated/schemas/$GasEstimation.ts","../src/generated/schemas/$GenesisPayload.ts","../src/generated/schemas/$GenesisPayload_WriteSetPayload.ts","../src/generated/schemas/$GenesisTransaction.ts","../src/generated/schemas/$HashValue.ts","../src/generated/schemas/$HealthCheckSuccess.ts","../src/generated/schemas/$HexEncodedBytes.ts","../src/generated/schemas/$IdentifierWrapper.ts","../src/generated/schemas/$IndexResponse.ts","../src/generated/schemas/$ModuleBundlePayload.ts","../src/generated/schemas/$MoveAbility.ts","../src/generated/schemas/$MoveFunction.ts","../src/generated/schemas/$MoveFunctionGenericTypeParam.ts","../src/generated/schemas/$MoveFunctionVisibility.ts","../src/generated/schemas/$MoveModule.ts","../src/generated/schemas/$MoveModuleBytecode.ts","../src/generated/schemas/$MoveModuleId.ts","../src/generated/schemas/$MoveResource.ts","../src/generated/schemas/$MoveScriptBytecode.ts","../src/generated/schemas/$MoveStruct.ts","../src/generated/schemas/$MoveStructField.ts","../src/generated/schemas/$MoveStructGenericTypeParam.ts","../src/generated/schemas/$MoveStructTag.ts","../src/generated/schemas/$MoveStructValue.ts","../src/generated/schemas/$MoveType.ts","../src/generated/schemas/$MoveValue.ts","../src/generated/schemas/$MultiAgentSignature.ts","../src/generated/schemas/$MultiEd25519Signature.ts","../src/generated/schemas/$MultisigPayload.ts","../src/generated/schemas/$MultisigTransactionPayload.ts","../src/generated/schemas/$PendingTransaction.ts","../src/generated/schemas/$RawTableItemRequest.ts","../src/generated/schemas/$RoleType.ts","../src/generated/schemas/$ScriptPayload.ts","../src/generated/schemas/$ScriptWriteSet.ts","../src/generated/schemas/$StateCheckpointTransaction.ts","../src/generated/schemas/$StateKeyWrapper.ts","../src/generated/schemas/$SubmitTransactionRequest.ts","../src/generated/schemas/$TableItemRequest.ts","../src/generated/schemas/$Transaction.ts","../src/generated/schemas/$Transaction_BlockMetadataTransaction.ts","../src/generated/schemas/$Transaction_GenesisTransaction.ts","../src/generated/schemas/$Transaction_PendingTransaction.ts","../src/generated/schemas/$Transaction_StateCheckpointTransaction.ts","../src/generated/schemas/$Transaction_UserTransaction.ts","../src/generated/schemas/$TransactionPayload.ts","../src/generated/schemas/$TransactionPayload_EntryFunctionPayload.ts","../src/generated/schemas/$TransactionPayload_ModuleBundlePayload.ts","../src/generated/schemas/$TransactionPayload_MultisigPayload.ts","../src/generated/schemas/$TransactionPayload_ScriptPayload.ts","../src/generated/schemas/$TransactionsBatchSingleSubmissionFailure.ts","../src/generated/schemas/$TransactionsBatchSubmissionResult.ts","../src/generated/schemas/$TransactionSignature.ts","../src/generated/schemas/$TransactionSignature_Ed25519Signature.ts","../src/generated/schemas/$TransactionSignature_MultiAgentSignature.ts","../src/generated/schemas/$TransactionSignature_MultiEd25519Signature.ts","../src/generated/schemas/$U128.ts","../src/generated/schemas/$U256.ts","../src/generated/schemas/$U64.ts","../src/generated/schemas/$UserTransaction.ts","../src/generated/schemas/$VersionedEvent.ts","../src/generated/schemas/$ViewRequest.ts","../src/generated/schemas/$WriteModule.ts","../src/generated/schemas/$WriteResource.ts","../src/generated/schemas/$WriteSet.ts","../src/generated/schemas/$WriteSet_DirectWriteSet.ts","../src/generated/schemas/$WriteSet_ScriptWriteSet.ts","../src/generated/schemas/$WriteSetChange.ts","../src/generated/schemas/$WriteSetChange_DeleteModule.ts","../src/generated/schemas/$WriteSetChange_DeleteResource.ts","../src/generated/schemas/$WriteSetChange_DeleteTableItem.ts","../src/generated/schemas/$WriteSetChange_WriteModule.ts","../src/generated/schemas/$WriteSetChange_WriteResource.ts","../src/generated/schemas/$WriteSetChange_WriteTableItem.ts","../src/generated/schemas/$WriteSetPayload.ts","../src/generated/schemas/$WriteTableItem.ts","../src/transaction_builder/builder_utils.ts","../src/transaction_builder/builder.ts","../src/providers/aptos_client.ts","../src/providers/provider.ts","../src/utils/property_map_serde.ts","../src/aptos_types/token_types.ts","../src/plugins/token_client.ts","../src/plugins/aptos_token.ts","../src/plugins/coin_client.ts","../src/plugins/faucet_client.ts"],"sourcesContent":["","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2 ** 11 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from \"./account\";\nexport * from \"./providers\";\nexport * as BCS from \"./bcs\";\nexport * from \"./utils/hex_string\";\nexport * from \"./plugins\";\nexport * from \"./transaction_builder\";\nexport * as TokenTypes from \"./aptos_types/token_types\";\nexport * as Types from \"./generated/index\";\nexport { derivePath } from \"./utils/hd-key\";\nexport {\n  deserializePropertyMap,\n  deserializeValueBasedOnTypeTag,\n  getPropertyValueRaw,\n} from \"./utils/property_map_serde\";\nexport { Network, CustomEndpoints } from \"./utils/api-endpoints\";\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport nacl from \"tweetnacl\";\nimport * as bip39 from \"@scure/bip39\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport { derivePath } from \"../utils/hd-key\";\nimport { HexString, MaybeHexString, Memoize } from \"../utils\";\nimport * as Gen from \"../generated/index\";\nimport { AccountAddress, AuthenticationKey, Ed25519PublicKey } from \"../aptos_types\";\nimport { bcsToBytes } from \"../bcs\";\n\nexport interface AptosAccountObject {\n  address?: Gen.HexEncodedBytes;\n  publicKeyHex?: Gen.HexEncodedBytes;\n  privateKeyHex: Gen.HexEncodedBytes;\n}\n\n/**\n * Class for creating and managing Aptos account\n */\nexport class AptosAccount {\n  /**\n   * A private key and public key, associated with the given account\n   */\n  readonly signingKey: nacl.SignKeyPair;\n\n  /**\n   * Address associated with the given account\n   */\n  private readonly accountAddress: HexString;\n\n  static fromAptosAccountObject(obj: AptosAccountObject): AptosAccount {\n    return new AptosAccount(HexString.ensure(obj.privateKeyHex).toUint8Array(), obj.address);\n  }\n\n  /**\n   * Test derive path\n   */\n  static isValidPath(path: string): boolean {\n    return /^m\\/44'\\/637'\\/[0-9]+'\\/[0-9]+'\\/[0-9]+'+$/.test(path);\n  }\n\n  /**\n   * Creates new account with bip44 path and mnemonics,\n   * @param path. (e.g. m/44'/637'/0'/0'/0')\n   * Detailed description: {@link https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki}\n   * @param mnemonics.\n   * @returns AptosAccount\n   */\n  static fromDerivePath(path: string, mnemonics: string): AptosAccount {\n    if (!AptosAccount.isValidPath(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n\n    const normalizeMnemonics = mnemonics\n      .trim()\n      .split(/\\s+/)\n      .map((part) => part.toLowerCase())\n      .join(\" \");\n\n    const { key } = derivePath(path, bytesToHex(bip39.mnemonicToSeedSync(normalizeMnemonics)));\n\n    return new AptosAccount(key);\n  }\n\n  /**\n   * Creates new account instance. Constructor allows passing in an address,\n   * to handle account key rotation, where auth_key != public_key\n   * @param privateKeyBytes  Private key from which account key pair will be generated.\n   * If not specified, new key pair is going to be created.\n   * @param address Account address (e.g. 0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591).\n   * If not specified, a new one will be generated from public key\n   */\n  constructor(privateKeyBytes?: Uint8Array | undefined, address?: MaybeHexString) {\n    if (privateKeyBytes) {\n      this.signingKey = nacl.sign.keyPair.fromSeed(privateKeyBytes.slice(0, 32));\n    } else {\n      this.signingKey = nacl.sign.keyPair();\n    }\n    this.accountAddress = HexString.ensure(address || this.authKey().hex());\n  }\n\n  /**\n   * This is the key by which Aptos account is referenced.\n   * It is the 32-byte of the SHA-3 256 cryptographic hash\n   * of the public key(s) concatenated with a signature scheme identifier byte\n   * @returns Address associated with the given account\n   */\n  address(): HexString {\n    return this.accountAddress;\n  }\n\n  /**\n   * This key enables account owners to rotate their private key(s)\n   * associated with the account without changing the address that hosts their account.\n   * See here for more info: {@link https://aptos.dev/concepts/accounts#single-signer-authentication}\n   * @returns Authentication key for the associated account\n   */\n  @Memoize()\n  authKey(): HexString {\n    const pubKey = new Ed25519PublicKey(this.signingKey.publicKey);\n    const authKey = AuthenticationKey.fromEd25519PublicKey(pubKey);\n    return authKey.derivedAddress();\n  }\n\n  /**\n   * Takes source address and seeds and returns the resource account address\n   * @param sourceAddress Address used to derive the resource account\n   * @param seed The seed bytes\n   * @returns The resource account address\n   */\n\n  static getResourceAccountAddress(sourceAddress: MaybeHexString, seed: Uint8Array): HexString {\n    const source = bcsToBytes(AccountAddress.fromHex(sourceAddress));\n\n    const bytes = new Uint8Array([...source, ...seed, AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME]);\n\n    const hash = sha3Hash.create();\n    hash.update(bytes);\n\n    return HexString.fromUint8Array(hash.digest());\n  }\n\n  /**\n   * This key is generated with Ed25519 scheme.\n   * Public key is used to check a signature of transaction, signed by given account\n   * @returns The public key for the associated account\n   */\n  pubKey(): HexString {\n    return HexString.fromUint8Array(this.signingKey.publicKey);\n  }\n\n  /**\n   * Signs specified `buffer` with account's private key\n   * @param buffer A buffer to sign\n   * @returns A signature HexString\n   */\n  signBuffer(buffer: Uint8Array): HexString {\n    const signature = nacl.sign.detached(buffer, this.signingKey.secretKey);\n    return HexString.fromUint8Array(signature);\n  }\n\n  /**\n   * Signs specified `hexString` with account's private key\n   * @param hexString A regular string or HexString to sign\n   * @returns A signature HexString\n   */\n  signHexString(hexString: MaybeHexString): HexString {\n    const toSign = HexString.ensure(hexString).toUint8Array();\n    return this.signBuffer(toSign);\n  }\n\n  /**\n   * Verifies the signature of the message with the public key of the account\n   * @param message a signed message\n   * @param signature the signature of the message\n   */\n  verifySignature(message: MaybeHexString, signature: MaybeHexString): boolean {\n    const rawMessage = HexString.ensure(message).toUint8Array();\n    const rawSignature = HexString.ensure(signature).toUint8Array();\n    return nacl.sign.detached.verify(rawMessage, rawSignature, this.signingKey.publicKey);\n  }\n\n  /**\n   * Derives account address, public key and private key\n   * @returns AptosAccountObject instance.\n   * @example An example of the returned AptosAccountObject object\n   * ```\n   * {\n   *    address: \"0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591\",\n   *    publicKeyHex: \"0xf56d8524faf79fbc0f48c13aeed3b0ce5dd376b4db93b8130a107c0a5e04ba04\",\n   *    privateKeyHex: `0x009c9f7c992a06cfafe916f125d8adb7a395fca243e264a8e56a4b3e6accf940\n   *      d2b11e9ece3049ce60e3c7b4a1c58aebfa9298e29a30a58a67f1998646135204`\n   * }\n   * ```\n   */\n  toPrivateKeyObject(): AptosAccountObject {\n    return {\n      address: this.address().hex(),\n      publicKeyHex: this.pubKey().hex(),\n      privateKeyHex: HexString.fromUint8Array(this.signingKey.secretKey.slice(0, 32)).hex(),\n    };\n  }\n}\n\n// Returns an account address as a HexString given either an AptosAccount or a MaybeHexString.\nexport function getAddressFromAccountOrAddress(accountOrAddress: AptosAccount | MaybeHexString): HexString {\n  return accountOrAddress instanceof AptosAccount ? accountOrAddress.address() : HexString.ensure(accountOrAddress);\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import nacl from \"tweetnacl\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { hexToBytes } from \"@noble/hashes/utils\";\n\ntype Hex = string;\ntype Path = string;\n\ntype Keys = {\n  key: Uint8Array;\n  chainCode: Uint8Array;\n};\n\nconst pathRegex = /^m(\\/[0-9]+')+$/;\n\nconst replaceDerive = (val: string): string => val.replace(\"'\", \"\");\n\nconst HMAC_KEY = \"ed25519 seed\";\nconst HARDENED_OFFSET = 0x80000000;\n\nexport const getMasterKeyFromSeed = (seed: Hex): Keys => {\n  const h = hmac.create(sha512, HMAC_KEY);\n  const I = h.update(hexToBytes(seed)).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR,\n  };\n};\n\nexport const CKDPriv = ({ key, chainCode }: Keys, index: number): Keys => {\n  const buffer = new ArrayBuffer(4);\n  new DataView(buffer).setUint32(0, index);\n  const indexBytes = new Uint8Array(buffer);\n  const zero = new Uint8Array([0]);\n  const data = new Uint8Array([...zero, ...key, ...indexBytes]);\n\n  const I = hmac.create(sha512, chainCode).update(data).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR,\n  };\n};\n\nexport const getPublicKey = (privateKey: Uint8Array, withZeroByte = true): Uint8Array => {\n  const keyPair = nacl.sign.keyPair.fromSeed(privateKey);\n  const signPk = keyPair.secretKey.subarray(32);\n  const zero = new Uint8Array([0]);\n  return withZeroByte ? new Uint8Array([...zero, ...signPk]) : signPk;\n};\n\nexport const isValidPath = (path: string): boolean => {\n  if (!pathRegex.test(path)) {\n    return false;\n  }\n  return !path\n    .split(\"/\")\n    .slice(1)\n    .map(replaceDerive)\n    .some(Number.isNaN as any);\n};\n\nexport const derivePath = (path: Path, seed: Hex, offset = HARDENED_OFFSET): Keys => {\n  if (!isValidPath(path)) {\n    throw new Error(\"Invalid derivation path\");\n  }\n\n  const { key, chainCode } = getMasterKeyFromSeed(seed);\n  const segments = path\n    .split(\"/\")\n    .slice(1)\n    .map(replaceDerive)\n    .map((el) => parseInt(el, 10));\n\n  return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + offset), { key, chainCode });\n};\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nexport type Nullable<T> = { [P in keyof T]: T[P] | null };\n\nexport type AnyObject = { [key: string]: any };\n\nexport async function sleep(timeMs: number): Promise<null> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeMs);\n  });\n}\n\nexport const DEFAULT_VERSION_PATH_BASE = \"/v1\";\n\nexport function fixNodeUrl(nodeUrl: string): string {\n  let out = `${nodeUrl}`;\n  if (out.endsWith(\"/\")) {\n    out = out.substring(0, out.length - 1);\n  }\n  if (!out.endsWith(DEFAULT_VERSION_PATH_BASE)) {\n    out = `${out}${DEFAULT_VERSION_PATH_BASE}`;\n  }\n  return out;\n}\n\nexport const DEFAULT_MAX_GAS_AMOUNT = 200000;\n// Transaction expire timestamp\nexport const DEFAULT_TXN_EXP_SEC_FROM_NOW = 20;\n// How long does SDK wait for txhn to finish\nexport const DEFAULT_TXN_TIMEOUT_SEC = 20;\nexport const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n","/**\n * Credits to https://github.com/darrylhodgins/typescript-memoize\n */\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-restricted-syntax */\n\ninterface MemoizeArgs {\n  // ttl in milliseconds for cached items. After `ttlMs`, cached items are evicted automatically. If no `ttlMs`\n  // is provided, cached items won't get auto-evicted.\n  ttlMs?: number;\n  // produces the cache key based on `args`.\n  hashFunction?: boolean | ((...args: any[]) => any);\n  // cached items can be taged with `tags`. `tags` can be used to evict cached items\n  tags?: string[];\n}\n\nexport function Memoize(args?: MemoizeArgs | MemoizeArgs[\"hashFunction\"]) {\n  let hashFunction: MemoizeArgs[\"hashFunction\"];\n  let ttlMs: MemoizeArgs[\"ttlMs\"];\n  let tags: MemoizeArgs[\"tags\"];\n\n  if (typeof args === \"object\") {\n    hashFunction = args.hashFunction;\n    ttlMs = args.ttlMs;\n    tags = args.tags;\n  } else {\n    hashFunction = args;\n  }\n\n  return (target: Object, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) => {\n    if (descriptor.value != null) {\n      descriptor.value = getNewFunction(descriptor.value, hashFunction, ttlMs, tags);\n    } else if (descriptor.get != null) {\n      descriptor.get = getNewFunction(descriptor.get, hashFunction, ttlMs, tags);\n    } else {\n      throw new Error(\"Only put a Memoize() decorator on a method or get accessor.\");\n    }\n  };\n}\n\nexport function MemoizeExpiring(ttlMs: number, hashFunction?: MemoizeArgs[\"hashFunction\"]) {\n  return Memoize({\n    ttlMs,\n    hashFunction,\n  });\n}\n\nconst clearCacheTagsMap: Map<string, Map<any, any>[]> = new Map();\n\nexport function clear(tags: string[]): number {\n  const cleared: Set<Map<any, any>> = new Set();\n  for (const tag of tags) {\n    const maps = clearCacheTagsMap.get(tag);\n    if (maps) {\n      for (const mp of maps) {\n        if (!cleared.has(mp)) {\n          mp.clear();\n          cleared.add(mp);\n        }\n      }\n    }\n  }\n  return cleared.size;\n}\n\nfunction getNewFunction(\n  originalMethod: () => void,\n  hashFunction?: MemoizeArgs[\"hashFunction\"],\n  ttlMs: number = 0,\n  tags?: MemoizeArgs[\"tags\"],\n) {\n  const propMapName = Symbol(\"__memoized_map__\");\n\n  // The function returned here gets called instead of originalMethod.\n  // eslint-disable-next-line func-names\n  return function (...args: any[]) {\n    let returnedValue: any;\n\n    // @ts-ignore\n    const that: any = this;\n\n    // Get or create map\n    // eslint-disable-next-line no-prototype-builtins\n    if (!that.hasOwnProperty(propMapName)) {\n      Object.defineProperty(that, propMapName, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: new Map<any, any>(),\n      });\n    }\n    const myMap: Map<any, any> = that[propMapName];\n\n    if (Array.isArray(tags)) {\n      for (const tag of tags) {\n        if (clearCacheTagsMap.has(tag)) {\n          clearCacheTagsMap.get(tag)!.push(myMap);\n        } else {\n          clearCacheTagsMap.set(tag, [myMap]);\n        }\n      }\n    }\n\n    if (hashFunction || args.length > 0 || ttlMs > 0) {\n      let hashKey: any;\n\n      // If true is passed as first parameter, will automatically use every argument, passed to string\n      if (hashFunction === true) {\n        hashKey = args.map((a) => a.toString()).join(\"!\");\n      } else if (hashFunction) {\n        hashKey = hashFunction.apply(that, args);\n      } else {\n        // eslint-disable-next-line prefer-destructuring\n        hashKey = args[0];\n      }\n\n      const timestampKey = `${hashKey}__timestamp`;\n      let isExpired: boolean = false;\n      if (ttlMs > 0) {\n        if (!myMap.has(timestampKey)) {\n          // \"Expired\" since it was never called before\n          isExpired = true;\n        } else {\n          const timestamp = myMap.get(timestampKey);\n          isExpired = Date.now() - timestamp > ttlMs;\n        }\n      }\n\n      if (myMap.has(hashKey) && !isExpired) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args as any);\n        myMap.set(hashKey, returnedValue);\n        if (ttlMs > 0) {\n          myMap.set(timestampKey, Date.now());\n        }\n      }\n    } else {\n      const hashKey = that;\n      if (myMap.has(hashKey)) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args as any);\n        myMap.set(hashKey, returnedValue);\n      }\n    }\n\n    return returnedValue;\n  };\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bytesToHex, hexToBytes } from \"@noble/hashes/utils\";\nimport { HexEncodedBytes } from \"../generated\";\n\n// eslint-disable-next-line no-use-before-define\nexport type MaybeHexString = HexString | string | HexEncodedBytes;\n\n/**\n * A util class for working with hex strings.\n * Hex strings are strings that are prefixed with `0x`\n */\nexport class HexString {\n  /// We want to make sure this hexString has the `0x` hex prefix\n  private readonly hexString: string;\n\n  /**\n   * Creates new hex string from Buffer\n   * @param buffer A buffer to convert\n   * @returns New HexString\n   */\n  static fromBuffer(buffer: Uint8Array): HexString {\n    return HexString.fromUint8Array(buffer);\n  }\n\n  /**\n   * Creates new hex string from Uint8Array\n   * @param arr Uint8Array to convert\n   * @returns New HexString\n   */\n  static fromUint8Array(arr: Uint8Array): HexString {\n    return new HexString(bytesToHex(arr));\n  }\n\n  /**\n   * Ensures `hexString` is instance of `HexString` class\n   * @param hexString String to check\n   * @returns New HexString if `hexString` is regular string or `hexString` if it is HexString instance\n   * @example\n   * ```\n   *  const regularString = \"string\";\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  HexString.ensure(regularString); // \"0xstring\"\n   *  HexString.ensure(hexString); // \"0xstring\"\n   * ```\n   */\n  static ensure(hexString: MaybeHexString): HexString {\n    if (typeof hexString === \"string\") {\n      return new HexString(hexString);\n    }\n    return hexString;\n  }\n\n  /**\n   * Creates new HexString instance from regular string. If specified string already starts with \"0x\" prefix,\n   * it will not add another one\n   * @param hexString String to convert\n   * @example\n   * ```\n   *  const string = \"string\";\n   *  new HexString(string); // \"0xstring\"\n   * ```\n   */\n  constructor(hexString: string | HexEncodedBytes) {\n    if (hexString.startsWith(\"0x\")) {\n      this.hexString = hexString;\n    } else {\n      this.hexString = `0x${hexString}`;\n    }\n  }\n\n  /**\n   * Getter for inner hexString\n   * @returns Inner hex string\n   */\n  hex(): string {\n    return this.hexString;\n  }\n\n  /**\n   * Getter for inner hexString without prefix\n   * @returns Inner hex string without prefix\n   * @example\n   * ```\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  hexString.noPrefix(); // \"string\"\n   * ```\n   */\n  noPrefix(): string {\n    return this.hexString.slice(2);\n  }\n\n  /**\n   * Overrides default `toString` method\n   * @returns Inner hex string\n   */\n  toString(): string {\n    return this.hex();\n  }\n\n  /**\n   * Trimmes extra zeroes in the begining of a string\n   * @returns Inner hexString without leading zeroes\n   * @example\n   * ```\n   *  new HexString(\"0x000000string\").toShortString(); // result = \"0xstring\"\n   * ```\n   */\n  toShortString(): string {\n    const trimmed = this.hexString.replace(/^0x0*/, \"\");\n    return `0x${trimmed}`;\n  }\n\n  /**\n   * Converts hex string to a Uint8Array\n   * @returns Uint8Array from inner hexString without prefix\n   */\n  toUint8Array(): Uint8Array {\n    return Uint8Array.from(hexToBytes(this.noPrefix()));\n  }\n}\n","import { AnyNumber } from \"../bcs\";\nimport { HexString, MaybeHexString } from \"./hex_string\";\n\n/// This function is a helper for paginating using a function wrapping an API\nexport async function paginateWithCursor<T>(\n  apiFunction: (\n    address: string,\n    ledgerVersion?: string | undefined,\n    start?: string | undefined,\n    limit?: number | undefined,\n  ) => Promise<T[]>,\n  accountAddress: MaybeHexString,\n  limitPerRequest: number,\n  query?: { ledgerVersion?: AnyNumber },\n): Promise<T[]> {\n  const out = [];\n  let cursor: string | undefined;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await apiFunction(\n      HexString.ensure(accountAddress).hex(),\n      query?.ledgerVersion?.toString(),\n      cursor,\n      limitPerRequest,\n    );\n    // Response is the main response, i.e. the T[]. Attached to that are the headers as `__headers`.\n    // eslint-disable-next-line no-underscore-dangle\n    cursor = (response as any).__headers[\"x-aptos-cursor\"];\n    // Now that we have the cursor (if any), we remove the headers before\n    // adding these to the output of this function.\n    // eslint-disable-next-line no-underscore-dangle\n    delete (response as any).__headers;\n    out.push(...response);\n    if (cursor === null || cursor === undefined) {\n      break;\n    }\n  }\n  return out;\n}\n","export const NetworkToIndexerAPI: Record<string, string> = {\n  mainnet: \"https://indexer.mainnet.aptoslabs.com/v1/graphql\",\n  testnet: \"https://indexer-testnet.staging.gcp.aptosdev.com/v1/graphql\",\n  devnet: \"https://indexer-devnet.staging.gcp.aptosdev.com/v1/graphql\",\n};\n\nexport const NetworkToNodeAPI: Record<string, string> = {\n  mainnet: \"https://fullnode.mainnet.aptoslabs.com/v1\",\n  testnet: \"https://fullnode.testnet.aptoslabs.com/v1\",\n  devnet: \"https://fullnode.devnet.aptoslabs.com/v1\",\n};\n\nexport enum Network {\n  MAINNET = \"mainnet\",\n  TESTNET = \"testnet\",\n  DEVNET = \"devnet\",\n}\n\nexport interface CustomEndpoints {\n  fullnodeUrl: string;\n  indexerUrl: string;\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from \"./abi\";\nexport * from \"./account_address\";\nexport * from \"./authenticator\";\nexport * from \"./transaction\";\nexport * from \"./type_tag\";\nexport * from \"./identifier\";\nexport * from \"./ed25519\";\nexport * from \"./multi_ed25519\";\nexport * from \"./authentication_key\";\nexport * from \"./rotation_proof_challenge\";\n\nexport type SigningMessage = Uint8Array;\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from \"./types\";\nexport * from \"./serializer\";\nexport * from \"./deserializer\";\nexport * from \"./helper\";\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Uint128, Uint16, Uint32, Uint64, Uint8, Uint256 } from \"./types\";\n\n// Upper bound values for uint8, uint16, uint64 and uint128\nexport const MAX_U8_NUMBER: Uint8 = 2 ** 8 - 1;\nexport const MAX_U16_NUMBER: Uint16 = 2 ** 16 - 1;\nexport const MAX_U32_NUMBER: Uint32 = 2 ** 32 - 1;\nexport const MAX_U64_BIG_INT: Uint64 = BigInt(2 ** 64) - BigInt(1);\nexport const MAX_U128_BIG_INT: Uint128 = BigInt(2 ** 128) - BigInt(1);\nexport const MAX_U256_BIG_INT: Uint256 = BigInt(2 ** 256) - BigInt(1);\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-bitwise */\nimport {\n  MAX_U128_BIG_INT,\n  MAX_U16_NUMBER,\n  MAX_U32_NUMBER,\n  MAX_U64_BIG_INT,\n  MAX_U8_NUMBER,\n  MAX_U256_BIG_INT,\n} from \"./consts\";\nimport { AnyNumber, Bytes, Uint16, Uint32, Uint8 } from \"./types\";\n\nexport class Serializer {\n  private buffer: ArrayBuffer;\n\n  private offset: number;\n\n  constructor() {\n    this.buffer = new ArrayBuffer(64);\n    this.offset = 0;\n  }\n\n  private ensureBufferWillHandleSize(bytes: number) {\n    while (this.buffer.byteLength < this.offset + bytes) {\n      const newBuffer = new ArrayBuffer(this.buffer.byteLength * 2);\n      new Uint8Array(newBuffer).set(new Uint8Array(this.buffer));\n      this.buffer = newBuffer;\n    }\n  }\n\n  protected serialize(values: Bytes) {\n    this.ensureBufferWillHandleSize(values.length);\n    new Uint8Array(this.buffer, this.offset).set(values);\n    this.offset += values.length;\n  }\n\n  private serializeWithFunction(\n    fn: (byteOffset: number, value: number, littleEndian?: boolean) => void,\n    bytesLength: number,\n    value: number,\n  ) {\n    this.ensureBufferWillHandleSize(bytesLength);\n    const dv = new DataView(this.buffer, this.offset);\n    fn.apply(dv, [0, value, true]);\n    this.offset += bytesLength;\n  }\n\n  /**\n   * Serializes a string. UTF8 string is supported. Serializes the string's bytes length \"l\" first,\n   * and then serializes \"l\" bytes of the string content.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeStr(\"çå∞≠¢õß∂ƒ∫\");\n   * assert(serializer.getBytes() === new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * ```\n   */\n  serializeStr(value: string): void {\n    const textEncoder = new TextEncoder();\n    this.serializeBytes(textEncoder.encode(value));\n  }\n\n  /**\n   * Serializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */\n  serializeBytes(value: Bytes): void {\n    this.serializeU32AsUleb128(value.length);\n    this.serialize(value);\n  }\n\n  /**\n   * Serializes an array of bytes with known length. Therefore length doesn't need to be\n   * serialized to help deserialization.  When deserializing, the number of\n   * bytes to deserialize needs to be passed in.\n   */\n  serializeFixedBytes(value: Bytes): void {\n    this.serialize(value);\n  }\n\n  /**\n   * Serializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */\n  serializeBool(value: boolean): void {\n    if (typeof value !== \"boolean\") {\n      throw new Error(\"Value needs to be a boolean\");\n    }\n    const byteValue = value ? 1 : 0;\n    this.serialize(new Uint8Array([byteValue]));\n  }\n\n  /**\n   * Serializes a uint8 number.\n   *\n   * BCS layout for \"uint8\": One byte. Binary format in little-endian representation.\n   */\n  @checkNumberRange(0, MAX_U8_NUMBER)\n  serializeU8(value: Uint8): void {\n    this.serialize(new Uint8Array([value]));\n  }\n\n  /**\n   * Serializes a uint16 number.\n   *\n   * BCS layout for \"uint16\": Two bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU16(4660);\n   * assert(serializer.getBytes() === new Uint8Array([0x34, 0x12]));\n   * ```\n   */\n  @checkNumberRange(0, MAX_U16_NUMBER)\n  serializeU16(value: Uint16): void {\n    this.serializeWithFunction(DataView.prototype.setUint16, 2, value);\n  }\n\n  /**\n   * Serializes a uint32 number.\n   *\n   * BCS layout for \"uint32\": Four bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU32(305419896);\n   * assert(serializer.getBytes() === new Uint8Array([0x78, 0x56, 0x34, 0x12]));\n   * ```\n   */\n  @checkNumberRange(0, MAX_U32_NUMBER)\n  serializeU32(value: Uint32): void {\n    this.serializeWithFunction(DataView.prototype.setUint32, 4, value);\n  }\n\n  /**\n   * Serializes a uint64 number.\n   *\n   * BCS layout for \"uint64\": Eight bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU64(1311768467750121216);\n   * assert(serializer.getBytes() === new Uint8Array([0x00, 0xEF, 0xCD, 0xAB, 0x78, 0x56, 0x34, 0x12]));\n   * ```\n   */\n  @checkNumberRange(BigInt(0), MAX_U64_BIG_INT)\n  serializeU64(value: AnyNumber): void {\n    const low = BigInt(value.toString()) & BigInt(MAX_U32_NUMBER);\n    const high = BigInt(value.toString()) >> BigInt(32);\n\n    // write little endian number\n    this.serializeU32(Number(low));\n    this.serializeU32(Number(high));\n  }\n\n  /**\n   * Serializes a uint128 number.\n   *\n   * BCS layout for \"uint128\": Sixteen bytes. Binary format in little-endian representation.\n   */\n  @checkNumberRange(BigInt(0), MAX_U128_BIG_INT)\n  serializeU128(value: AnyNumber): void {\n    const low = BigInt(value.toString()) & MAX_U64_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(64);\n\n    // write little endian number\n    this.serializeU64(low);\n    this.serializeU64(high);\n  }\n\n  /**\n   * Serializes a uint256 number.\n   *\n   * BCS layout for \"uint256\": Sixteen bytes. Binary format in little-endian representation.\n   */\n  @checkNumberRange(BigInt(0), MAX_U256_BIG_INT)\n  serializeU256(value: AnyNumber): void {\n    const low = BigInt(value.toString()) & MAX_U128_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(128);\n\n    // write little endian number\n    this.serializeU128(low);\n    this.serializeU128(high);\n  }\n\n  /**\n   * Serializes a uint32 number with uleb128.\n   *\n   * BCS use uleb128 encoding in two cases: (1) lengths of variable-length sequences and (2) tags of enum values\n   */\n  @checkNumberRange(0, MAX_U32_NUMBER)\n  serializeU32AsUleb128(val: Uint32): void {\n    let value = val;\n    const valueArray = [];\n    while (value >>> 7 !== 0) {\n      valueArray.push((value & 0x7f) | 0x80);\n      value >>>= 7;\n    }\n    valueArray.push(value);\n    this.serialize(new Uint8Array(valueArray));\n  }\n\n  /**\n   * Returns the buffered bytes\n   */\n  getBytes(): Bytes {\n    return new Uint8Array(this.buffer).slice(0, this.offset);\n  }\n}\n\n/**\n * Creates a decorator to make sure the arg value of the decorated function is within a range.\n * @param minValue The arg value of decorated function must >= minValue\n * @param maxValue The arg value of decorated function must <= maxValue\n * @param message Error message\n */\nfunction checkNumberRange<T extends AnyNumber>(minValue: T, maxValue: T, message?: string) {\n  return (target: unknown, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const childFunction = descriptor.value;\n    // eslint-disable-next-line no-param-reassign\n    descriptor.value = function deco(value: AnyNumber) {\n      const valueBigInt = BigInt(value.toString());\n      if (valueBigInt > BigInt(maxValue.toString()) || valueBigInt < BigInt(minValue.toString())) {\n        throw new Error(message || \"Value is out of range\");\n      }\n      childFunction.apply(this, [value]);\n    };\n    return descriptor;\n  };\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-bitwise */\nimport { MAX_U32_NUMBER } from \"./consts\";\nimport { Bytes, Uint128, Uint16, Uint256, Uint32, Uint64, Uint8 } from \"./types\";\n\nexport class Deserializer {\n  private buffer: ArrayBuffer;\n\n  private offset: number;\n\n  constructor(data: Bytes) {\n    // copies data to prevent outside mutation of buffer.\n    this.buffer = new ArrayBuffer(data.length);\n    new Uint8Array(this.buffer).set(data, 0);\n    this.offset = 0;\n  }\n\n  private read(length: number): ArrayBuffer {\n    if (this.offset + length > this.buffer.byteLength) {\n      throw new Error(\"Reached to the end of buffer\");\n    }\n\n    const bytes = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return bytes;\n  }\n\n  /**\n   * Deserializes a string. UTF8 string is supported. Reads the string's bytes length \"l\" first,\n   * and then reads \"l\" bytes of content. Decodes the byte array into a string.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * assert(deserializer.deserializeStr() === \"çå∞≠¢õß∂ƒ∫\");\n   * ```\n   */\n  deserializeStr(): string {\n    const value = this.deserializeBytes();\n    const textDecoder = new TextDecoder();\n    return textDecoder.decode(value);\n  }\n\n  /**\n   * Deserializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */\n  deserializeBytes(): Bytes {\n    const len = this.deserializeUleb128AsU32();\n    return new Uint8Array(this.read(len));\n  }\n\n  /**\n   * Deserializes an array of bytes. The number of bytes to read is already known.\n   *\n   */\n  deserializeFixedBytes(len: number): Bytes {\n    return new Uint8Array(this.read(len));\n  }\n\n  /**\n   * Deserializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */\n  deserializeBool(): boolean {\n    const bool = new Uint8Array(this.read(1))[0];\n    if (bool !== 1 && bool !== 0) {\n      throw new Error(\"Invalid boolean value\");\n    }\n    return bool === 1;\n  }\n\n  /**\n   * Deserializes a uint8 number.\n   *\n   * BCS layout for \"uint8\": One byte. Binary format in little-endian representation.\n   */\n  deserializeU8(): Uint8 {\n    return new DataView(this.read(1)).getUint8(0);\n  }\n\n  /**\n   * Deserializes a uint16 number.\n   *\n   * BCS layout for \"uint16\": Two bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x34, 0x12]));\n   * assert(deserializer.deserializeU16() === 4660);\n   * ```\n   */\n  deserializeU16(): Uint16 {\n    return new DataView(this.read(2)).getUint16(0, true);\n  }\n\n  /**\n   * Deserializes a uint32 number.\n   *\n   * BCS layout for \"uint32\": Four bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU32() === 305419896);\n   * ```\n   */\n  deserializeU32(): Uint32 {\n    return new DataView(this.read(4)).getUint32(0, true);\n  }\n\n  /**\n   * Deserializes a uint64 number.\n   *\n   * BCS layout for \"uint64\": Eight bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x00, 0xEF, 0xCD, 0xAB, 0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU64() === 1311768467750121216);\n   * ```\n   */\n  deserializeU64(): Uint64 {\n    const low = this.deserializeU32();\n    const high = this.deserializeU32();\n\n    // combine the two 32-bit values and return (little endian)\n    return BigInt((BigInt(high) << BigInt(32)) | BigInt(low));\n  }\n\n  /**\n   * Deserializes a uint128 number.\n   *\n   * BCS layout for \"uint128\": Sixteen bytes. Binary format in little-endian representation.\n   */\n  deserializeU128(): Uint128 {\n    const low = this.deserializeU64();\n    const high = this.deserializeU64();\n\n    // combine the two 64-bit values and return (little endian)\n    return BigInt((high << BigInt(64)) | low);\n  }\n\n  /**\n   * Deserializes a uint256 number.\n   *\n   * BCS layout for \"uint256\": Thirty-two bytes. Binary format in little-endian representation.\n   */\n  deserializeU256(): Uint256 {\n    const low = this.deserializeU128();\n    const high = this.deserializeU128();\n\n    // combine the two 128-bit values and return (little endian)\n    return BigInt((high << BigInt(128)) | low);\n  }\n\n  /**\n   * Deserializes a uleb128 encoded uint32 number.\n   *\n   * BCS use uleb128 encoding in two cases: (1) lengths of variable-length sequences and (2) tags of enum values\n   */\n  deserializeUleb128AsU32(): Uint32 {\n    let value: bigint = BigInt(0);\n    let shift = 0;\n\n    while (value < MAX_U32_NUMBER) {\n      const byte = this.deserializeU8();\n      value |= BigInt(byte & 0x7f) << BigInt(shift);\n\n      if ((byte & 0x80) === 0) {\n        break;\n      }\n      shift += 7;\n    }\n\n    if (value > MAX_U32_NUMBER) {\n      throw new Error(\"Overflow while parsing uleb128-encoded uint32 value\");\n    }\n\n    return Number(value);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Deserializer } from \"./deserializer\";\nimport { Serializer } from \"./serializer\";\nimport { AnyNumber, Bytes, Seq, Uint16, Uint32, Uint8 } from \"./types\";\n\ninterface Serializable {\n  serialize(serializer: Serializer): void;\n}\n\n/**\n * Serializes a vector values that are \"Serializable\".\n */\nexport function serializeVector<T extends Serializable>(value: Seq<T>, serializer: Serializer): void {\n  serializer.serializeU32AsUleb128(value.length);\n  value.forEach((item: T) => {\n    item.serialize(serializer);\n  });\n}\n\n/**\n * Serializes a vector with specified item serialization function.\n * Very dynamic function and bypasses static typechecking.\n */\nexport function serializeVectorWithFunc(value: any[], func: string): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU32AsUleb128(value.length);\n  const f = (serializer as any)[func];\n  value.forEach((item) => {\n    f.call(serializer, item);\n  });\n  return serializer.getBytes();\n}\n\n/**\n * Deserializes a vector of values.\n */\nexport function deserializeVector(deserializer: Deserializer, cls: any): any[] {\n  const length = deserializer.deserializeUleb128AsU32();\n  const list: Seq<typeof cls> = [];\n  for (let i = 0; i < length; i += 1) {\n    list.push(cls.deserialize(deserializer));\n  }\n  return list;\n}\n\nexport function bcsToBytes<T extends Serializable>(value: T): Bytes {\n  const serializer = new Serializer();\n  value.serialize(serializer);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeUint64(value: AnyNumber): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU64(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU8(value: Uint8): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU8(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU16(value: Uint16): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU16(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU32(value: Uint32): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU32(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeU128(value: AnyNumber): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeU128(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeBool(value: boolean): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeBool(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeStr(value: string): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeStr(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeBytes(value: Bytes): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeBytes(value);\n  return serializer.getBytes();\n}\n\nexport function bcsSerializeFixedBytes(value: Bytes): Bytes {\n  const serializer = new Serializer();\n  serializer.serializeFixedBytes(value);\n  return serializer.getBytes();\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { HexString, MaybeHexString } from \"../utils\";\nimport { Serializer, Deserializer, Bytes } from \"../bcs\";\n\nexport class AccountAddress {\n  static readonly LENGTH: number = 32;\n\n  readonly address: Bytes;\n\n  static CORE_CODE_ADDRESS: AccountAddress = AccountAddress.fromHex(\"0x1\");\n\n  constructor(address: Bytes) {\n    if (address.length !== AccountAddress.LENGTH) {\n      throw new Error(\"Expected address of length 32\");\n    }\n    this.address = address;\n  }\n\n  /**\n   * Creates AccountAddress from a hex string.\n   * @param addr Hex string can be with a prefix or without a prefix,\n   *   e.g. '0x1aa' or '1aa'. Hex string will be left padded with 0s if too short.\n   */\n  static fromHex(addr: MaybeHexString): AccountAddress {\n    let address = HexString.ensure(addr);\n\n    // If an address hex has odd number of digits, padd the hex string with 0\n    // e.g. '1aa' would become '01aa'.\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n\n    const addressBytes = address.toUint8Array();\n\n    if (addressBytes.length > AccountAddress.LENGTH) {\n      // eslint-disable-next-line quotes\n      throw new Error(\"Hex string is too long. Address's length is 32 bytes.\");\n    } else if (addressBytes.length === AccountAddress.LENGTH) {\n      return new AccountAddress(addressBytes);\n    }\n\n    const res: Bytes = new Uint8Array(AccountAddress.LENGTH);\n    res.set(addressBytes, AccountAddress.LENGTH - addressBytes.length);\n\n    return new AccountAddress(res);\n  }\n\n  /**\n   * Checks if the string is a valid AccountAddress\n   * @param addr Hex string can be with a prefix or without a prefix,\n   *   e.g. '0x1aa' or '1aa'. Hex string will be left padded with 0s if too short.\n   */\n  static isValid(addr: MaybeHexString): boolean {\n    // At least one zero is required\n    if (addr === \"\") {\n      return false;\n    }\n\n    let address = HexString.ensure(addr);\n\n    // If an address hex has odd number of digits, padd the hex string with 0\n    // e.g. '1aa' would become '01aa'.\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n\n    const addressBytes = address.toUint8Array();\n\n    return addressBytes.length <= AccountAddress.LENGTH;\n  }\n\n  /**\n   * Return a hex string from account Address.\n   */\n  toHexString(): MaybeHexString {\n    return HexString.fromUint8Array(this.address).hex();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeFixedBytes(this.address);\n  }\n\n  static deserialize(deserializer: Deserializer): AccountAddress {\n    return new AccountAddress(deserializer.deserializeFixedBytes(AccountAddress.LENGTH));\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Bytes, Deserializer, Serializer } from \"../bcs\";\n\nexport class Ed25519PublicKey {\n  static readonly LENGTH: number = 32;\n\n  readonly value: Bytes;\n\n  constructor(value: Bytes) {\n    if (value.length !== Ed25519PublicKey.LENGTH) {\n      throw new Error(`Ed25519PublicKey length should be ${Ed25519PublicKey.LENGTH}`);\n    }\n    this.value = value;\n  }\n\n  toBytes(): Bytes {\n    return this.value;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): Ed25519PublicKey {\n    const value = deserializer.deserializeBytes();\n    return new Ed25519PublicKey(value);\n  }\n}\n\nexport class Ed25519Signature {\n  static readonly LENGTH = 64;\n\n  constructor(public readonly value: Bytes) {\n    if (value.length !== Ed25519Signature.LENGTH) {\n      throw new Error(`Ed25519Signature length should be ${Ed25519Signature.LENGTH}`);\n    }\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): Ed25519Signature {\n    const value = deserializer.deserializeBytes();\n    return new Ed25519Signature(value);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-bitwise */\nimport { Bytes, Deserializer, Seq, Serializer, Uint8 } from \"../bcs\";\nimport { Ed25519PublicKey, Ed25519Signature } from \"./ed25519\";\n\n/**\n * MultiEd25519 currently supports at most 32 signatures.\n */\nconst MAX_SIGNATURES_SUPPORTED = 32;\n\nexport class MultiEd25519PublicKey {\n  /**\n   * Public key for a K-of-N multisig transaction. A K-of-N multisig transaction means that for such a\n   * transaction to be executed, at least K out of the N authorized signers have signed the transaction\n   * and passed the check conducted by the chain.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param public_keys A list of public keys\n   * @param threshold At least \"threshold\" signatures must be valid\n   */\n  constructor(public readonly public_keys: Seq<Ed25519PublicKey>, public readonly threshold: Uint8) {\n    if (threshold > MAX_SIGNATURES_SUPPORTED) {\n      throw new Error(`\"threshold\" cannot be larger than ${MAX_SIGNATURES_SUPPORTED}`);\n    }\n  }\n\n  /**\n   * Converts a MultiEd25519PublicKey into bytes with: bytes = p1_bytes | ... | pn_bytes | threshold\n   */\n  toBytes(): Bytes {\n    const bytes = new Uint8Array(this.public_keys.length * Ed25519PublicKey.LENGTH + 1);\n    this.public_keys.forEach((k: Ed25519PublicKey, i: number) => {\n      bytes.set(k.value, i * Ed25519PublicKey.LENGTH);\n    });\n\n    bytes[this.public_keys.length * Ed25519PublicKey.LENGTH] = this.threshold;\n\n    return bytes;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.toBytes());\n  }\n\n  static deserialize(deserializer: Deserializer): MultiEd25519PublicKey {\n    const bytes = deserializer.deserializeBytes();\n    const threshold = bytes[bytes.length - 1];\n\n    const keys: Seq<Ed25519PublicKey> = [];\n\n    for (let i = 0; i < bytes.length - 1; i += Ed25519PublicKey.LENGTH) {\n      const begin = i;\n      keys.push(new Ed25519PublicKey(bytes.subarray(begin, begin + Ed25519PublicKey.LENGTH)));\n    }\n    return new MultiEd25519PublicKey(keys, threshold);\n  }\n}\n\nexport class MultiEd25519Signature {\n  static BITMAP_LEN: Uint8 = 4;\n\n  /**\n   * Signature for a K-of-N multisig transaction.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param signatures A list of ed25519 signatures\n   * @param bitmap 4 bytes, at most 32 signatures are supported. If Nth bit value is `1`, the Nth\n   * signature should be provided in `signatures`. Bits are read from left to right\n   */\n  constructor(public readonly signatures: Seq<Ed25519Signature>, public readonly bitmap: Uint8Array) {\n    if (bitmap.length !== MultiEd25519Signature.BITMAP_LEN) {\n      throw new Error(`\"bitmap\" length should be ${MultiEd25519Signature.BITMAP_LEN}`);\n    }\n  }\n\n  /**\n   * Converts a MultiEd25519Signature into bytes with `bytes = s1_bytes | ... | sn_bytes | bitmap`\n   */\n  toBytes(): Bytes {\n    const bytes = new Uint8Array(this.signatures.length * Ed25519Signature.LENGTH + MultiEd25519Signature.BITMAP_LEN);\n    this.signatures.forEach((k: Ed25519Signature, i: number) => {\n      bytes.set(k.value, i * Ed25519Signature.LENGTH);\n    });\n\n    bytes.set(this.bitmap, this.signatures.length * Ed25519Signature.LENGTH);\n\n    return bytes;\n  }\n\n  /**\n   * Helper method to create a bitmap out of the specified bit positions\n   * @param bits The bitmap positions that should be set. A position starts at index 0.\n   * Valid position should range between 0 and 31.\n   * @example\n   * Here's an example of valid `bits`\n   * ```\n   * [0, 2, 31]\n   * ```\n   * `[0, 2, 31]` means the 1st, 3rd and 32nd bits should be set in the bitmap.\n   * The result bitmap should be 0b1010000000000000000000000000001\n   *\n   * @returns bitmap that is 32bit long\n   */\n  static createBitmap(bits: Seq<Uint8>): Uint8Array {\n    // Bits are read from left to right. e.g. 0b10000000 represents the first bit is set in one byte.\n    // The decimal value of 0b10000000 is 128.\n    const firstBitInByte = 128;\n    const bitmap = new Uint8Array([0, 0, 0, 0]);\n\n    // Check if duplicates exist in bits\n    const dupCheckSet = new Set();\n\n    bits.forEach((bit: number) => {\n      if (bit >= MAX_SIGNATURES_SUPPORTED) {\n        throw new Error(`Invalid bit value ${bit}.`);\n      }\n\n      if (dupCheckSet.has(bit)) {\n        throw new Error(\"Duplicated bits detected.\");\n      }\n\n      dupCheckSet.add(bit);\n\n      const byteOffset = Math.floor(bit / 8);\n\n      let byte = bitmap[byteOffset];\n\n      byte |= firstBitInByte >> bit % 8;\n\n      bitmap[byteOffset] = byte;\n    });\n\n    return bitmap;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.toBytes());\n  }\n\n  static deserialize(deserializer: Deserializer): MultiEd25519Signature {\n    const bytes = deserializer.deserializeBytes();\n    const bitmap = bytes.subarray(bytes.length - 4);\n\n    const sigs: Seq<Ed25519Signature> = [];\n\n    for (let i = 0; i < bytes.length - bitmap.length; i += Ed25519Signature.LENGTH) {\n      const begin = i;\n      sigs.push(new Ed25519Signature(bytes.subarray(begin, begin + Ed25519Signature.LENGTH)));\n    }\n    return new MultiEd25519Signature(sigs, bitmap);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { AccountAddress } from \"./account_address\";\nimport { Serializer, Deserializer, Seq, deserializeVector, serializeVector } from \"../bcs\";\nimport { Ed25519PublicKey, Ed25519Signature } from \"./ed25519\";\nimport { MultiEd25519PublicKey, MultiEd25519Signature } from \"./multi_ed25519\";\n\nexport abstract class TransactionAuthenticator {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TransactionAuthenticator {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return TransactionAuthenticatorMultiEd25519.load(deserializer);\n      case 2:\n        return TransactionAuthenticatorMultiAgent.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionAuthenticator: ${index}`);\n    }\n  }\n}\n\nexport class TransactionAuthenticatorEd25519 extends TransactionAuthenticator {\n  /**\n   * An authenticator for single signature.\n   *\n   * @param public_key Client's public key.\n   * @param signature Signature of a raw transaction.\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   * for details about generating a signature.\n   */\n  constructor(public readonly public_key: Ed25519PublicKey, public readonly signature: Ed25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionAuthenticatorEd25519 {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new TransactionAuthenticatorEd25519(public_key, signature);\n  }\n}\n\nexport class TransactionAuthenticatorMultiEd25519 extends TransactionAuthenticator {\n  /**\n   * An authenticator for multiple signatures.\n   *\n   * @param public_key\n   * @param signature\n   *\n   */\n  constructor(public readonly public_key: MultiEd25519PublicKey, public readonly signature: MultiEd25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionAuthenticatorMultiEd25519 {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new TransactionAuthenticatorMultiEd25519(public_key, signature);\n  }\n}\n\nexport class TransactionAuthenticatorMultiAgent extends TransactionAuthenticator {\n  constructor(\n    public readonly sender: AccountAuthenticator,\n    public readonly secondary_signer_addresses: Seq<AccountAddress>,\n    public readonly secondary_signers: Seq<AccountAuthenticator>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n    this.sender.serialize(serializer);\n    serializeVector<AccountAddress>(this.secondary_signer_addresses, serializer);\n    serializeVector<AccountAuthenticator>(this.secondary_signers, serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionAuthenticatorMultiAgent {\n    const sender = AccountAuthenticator.deserialize(deserializer);\n    const secondary_signer_addresses = deserializeVector(deserializer, AccountAddress);\n    const secondary_signers = deserializeVector(deserializer, AccountAuthenticator);\n    return new TransactionAuthenticatorMultiAgent(sender, secondary_signer_addresses, secondary_signers);\n  }\n}\n\nexport abstract class AccountAuthenticator {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): AccountAuthenticator {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return AccountAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return AccountAuthenticatorMultiEd25519.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for AccountAuthenticator: ${index}`);\n    }\n  }\n}\n\nexport class AccountAuthenticatorEd25519 extends AccountAuthenticator {\n  constructor(public readonly public_key: Ed25519PublicKey, public readonly signature: Ed25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): AccountAuthenticatorEd25519 {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new AccountAuthenticatorEd25519(public_key, signature);\n  }\n}\n\nexport class AccountAuthenticatorMultiEd25519 extends AccountAuthenticator {\n  constructor(public readonly public_key: MultiEd25519PublicKey, public readonly signature: MultiEd25519Signature) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): AccountAuthenticatorMultiEd25519 {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new AccountAuthenticatorMultiEd25519(public_key, signature);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Deserializer, Serializer } from \"../bcs\";\n\nexport class Identifier {\n  constructor(public value: string) {}\n\n  public serialize(serializer: Serializer): void {\n    serializer.serializeStr(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): Identifier {\n    const value = deserializer.deserializeStr();\n    return new Identifier(value);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport { AccountAddress } from \"./account_address\";\nimport { Deserializer, Seq, Serializer, deserializeVector, serializeVector } from \"../bcs\";\nimport { Identifier } from \"./identifier\";\n\nexport abstract class TypeTag {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TypeTag {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TypeTagBool.load(deserializer);\n      case 1:\n        return TypeTagU8.load(deserializer);\n      case 2:\n        return TypeTagU64.load(deserializer);\n      case 3:\n        return TypeTagU128.load(deserializer);\n      case 4:\n        return TypeTagAddress.load(deserializer);\n      case 5:\n        return TypeTagSigner.load(deserializer);\n      case 6:\n        return TypeTagVector.load(deserializer);\n      case 7:\n        return TypeTagStruct.load(deserializer);\n      case 8:\n        return TypeTagU16.load(deserializer);\n      case 9:\n        return TypeTagU32.load(deserializer);\n      case 10:\n        return TypeTagU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TypeTag: ${index}`);\n    }\n  }\n}\n\nexport class TypeTagBool extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n  }\n\n  static load(deserializer: Deserializer): TypeTagBool {\n    return new TypeTagBool();\n  }\n}\n\nexport class TypeTagU8 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU8 {\n    return new TypeTagU8();\n  }\n}\n\nexport class TypeTagU16 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU16 {\n    return new TypeTagU16();\n  }\n}\n\nexport class TypeTagU32 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU32 {\n    return new TypeTagU32();\n  }\n}\n\nexport class TypeTagU64 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU64 {\n    return new TypeTagU64();\n  }\n}\n\nexport class TypeTagU128 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(3);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU128 {\n    return new TypeTagU128();\n  }\n}\n\nexport class TypeTagU256 extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagU256 {\n    return new TypeTagU256();\n  }\n}\n\nexport class TypeTagAddress extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(4);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagAddress {\n    return new TypeTagAddress();\n  }\n}\n\nexport class TypeTagSigner extends TypeTag {\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(5);\n  }\n\n  static load(_deserializer: Deserializer): TypeTagSigner {\n    return new TypeTagSigner();\n  }\n}\n\nexport class TypeTagVector extends TypeTag {\n  constructor(public readonly value: TypeTag) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(6);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TypeTagVector {\n    const value = TypeTag.deserialize(deserializer);\n    return new TypeTagVector(value);\n  }\n}\n\nexport class TypeTagStruct extends TypeTag {\n  constructor(public readonly value: StructTag) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(7);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TypeTagStruct {\n    const value = StructTag.deserialize(deserializer);\n    return new TypeTagStruct(value);\n  }\n\n  isStringTypeTag(): boolean {\n    if (\n      this.value.module_name.value === \"string\" &&\n      this.value.name.value === \"String\" &&\n      this.value.address.toHexString() === AccountAddress.fromHex(\"0x1\").toHexString()\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class StructTag {\n  constructor(\n    public readonly address: AccountAddress,\n    public readonly module_name: Identifier,\n    public readonly name: Identifier,\n    public readonly type_args: Seq<TypeTag>,\n  ) {}\n\n  /**\n   * Converts a string literal to a StructTag\n   * @param structTag String literal in format \"AcountAddress::module_name::ResourceName\",\n   *   e.g. \"0x1::aptos_coin::AptosCoin\"\n   * @returns\n   */\n  static fromString(structTag: string): StructTag {\n    // Use the TypeTagParser to parse the string literal into a TypeTagStruct\n    const typeTagStruct = new TypeTagParser(structTag).parseTypeTag() as TypeTagStruct;\n\n    // Convert and return as a StructTag\n    return new StructTag(\n      typeTagStruct.value.address,\n      typeTagStruct.value.module_name,\n      typeTagStruct.value.name,\n      typeTagStruct.value.type_args,\n    );\n  }\n\n  serialize(serializer: Serializer): void {\n    this.address.serialize(serializer);\n    this.module_name.serialize(serializer);\n    this.name.serialize(serializer);\n    serializeVector<TypeTag>(this.type_args, serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): StructTag {\n    const address = AccountAddress.deserialize(deserializer);\n    const moduleName = Identifier.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    const typeArgs = deserializeVector(deserializer, TypeTag);\n    return new StructTag(address, moduleName, name, typeArgs);\n  }\n}\n\nexport const stringStructTag = new StructTag(\n  AccountAddress.fromHex(\"0x1\"),\n  new Identifier(\"string\"),\n  new Identifier(\"String\"),\n  [],\n);\n\nfunction bail(message: string) {\n  throw new TypeTagParserError(message);\n}\n\nfunction isWhiteSpace(c: string): boolean {\n  if (c.match(/\\s/)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isValidAlphabetic(c: string): boolean {\n  if (c.match(/[_A-Za-z0-9]/g)) {\n    return true;\n  }\n  return false;\n}\n\n// Generic format is T<digits> - for example T1, T2, T10\nfunction isGeneric(c: string): boolean {\n  if (c.match(/T\\d+/g)) {\n    return true;\n  }\n  return false;\n}\n\ntype TokenType = string;\ntype TokenValue = string;\ntype Token = [TokenType, TokenValue];\n\n// Returns Token and Token byte size\nfunction nextToken(tagStr: string, pos: number): [Token, number] {\n  const c = tagStr[pos];\n  if (c === \":\") {\n    if (tagStr.slice(pos, pos + 2) === \"::\") {\n      return [[\"COLON\", \"::\"], 2];\n    }\n    bail(\"Unrecognized token.\");\n  } else if (c === \"<\") {\n    return [[\"LT\", \"<\"], 1];\n  } else if (c === \">\") {\n    return [[\"GT\", \">\"], 1];\n  } else if (c === \",\") {\n    return [[\"COMMA\", \",\"], 1];\n  } else if (isWhiteSpace(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isWhiteSpace(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    return [[\"SPACE\", res], res.length];\n  } else if (isValidAlphabetic(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isValidAlphabetic(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    if (isGeneric(res)) {\n      return [[\"GENERIC\", res], res.length];\n    }\n    return [[\"IDENT\", res], res.length];\n  }\n  throw new Error(\"Unrecognized token.\");\n}\n\nfunction tokenize(tagStr: string): Token[] {\n  let pos = 0;\n  const tokens = [];\n  while (pos < tagStr.length) {\n    const [token, size] = nextToken(tagStr, pos);\n    if (token[0] !== \"SPACE\") {\n      tokens.push(token);\n    }\n    pos += size;\n  }\n  return tokens;\n}\n\n/**\n * Parser to parse a type tag string\n */\nexport class TypeTagParser {\n  private readonly tokens: Token[];\n\n  private readonly typeTags: string[] = [];\n\n  constructor(tagStr: string, typeTags?: string[]) {\n    this.tokens = tokenize(tagStr);\n    this.typeTags = typeTags || [];\n  }\n\n  private consume(targetToken: string) {\n    const token = this.tokens.shift();\n    if (!token || token[1] !== targetToken) {\n      bail(\"Invalid type tag.\");\n    }\n  }\n\n  private parseCommaList(endToken: TokenValue, allowTraillingComma: boolean): TypeTag[] {\n    const res: TypeTag[] = [];\n    if (this.tokens.length <= 0) {\n      bail(\"Invalid type tag.\");\n    }\n\n    while (this.tokens[0][1] !== endToken) {\n      res.push(this.parseTypeTag());\n\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken) {\n        break;\n      }\n\n      this.consume(\",\");\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken && allowTraillingComma) {\n        break;\n      }\n\n      if (this.tokens.length <= 0) {\n        bail(\"Invalid type tag.\");\n      }\n    }\n    return res;\n  }\n\n  parseTypeTag(): TypeTag {\n    if (this.tokens.length === 0) {\n      bail(\"Invalid type tag.\");\n    }\n\n    // Pop left most element out\n    const [tokenTy, tokenVal] = this.tokens.shift()!;\n\n    if (tokenVal === \"u8\") {\n      return new TypeTagU8();\n    }\n    if (tokenVal === \"u16\") {\n      return new TypeTagU16();\n    }\n    if (tokenVal === \"u32\") {\n      return new TypeTagU32();\n    }\n    if (tokenVal === \"u64\") {\n      return new TypeTagU64();\n    }\n    if (tokenVal === \"u128\") {\n      return new TypeTagU128();\n    }\n    if (tokenVal === \"u256\") {\n      return new TypeTagU256();\n    }\n    if (tokenVal === \"bool\") {\n      return new TypeTagBool();\n    }\n    if (tokenVal === \"address\") {\n      return new TypeTagAddress();\n    }\n    if (tokenVal === \"vector\") {\n      this.consume(\"<\");\n      const res = this.parseTypeTag();\n      this.consume(\">\");\n      return new TypeTagVector(res);\n    }\n    if (tokenVal === \"string\") {\n      return new StructTag(AccountAddress.fromHex(\"0x1\"), new Identifier(\"string\"), new Identifier(\"String\"), []);\n    }\n    if (tokenTy === \"IDENT\" && (tokenVal.startsWith(\"0x\") || tokenVal.startsWith(\"0X\"))) {\n      const address = tokenVal;\n      this.consume(\"::\");\n      const [moduleTokenTy, module] = this.tokens.shift()!;\n      if (moduleTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n      this.consume(\"::\");\n      const [nameTokenTy, name] = this.tokens.shift()!;\n      if (nameTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n\n      // an Object `0x1::object::Object<T>` doesn't hold a real type, it points to an address\n      // therefore, we parse it as an address and dont need to care/parse the `T` type\n      if (module === \"object\" && name === \"Object\") {\n        // to support a nested type tag, i.e 0x1::some_module::SomeResource<0x1::object::Object<T>>, we want\n        // to remove the `<T>` part from the tokens list so we dont parse it and can keep parse the type tag.\n        this.tokens.splice(0, 3);\n        return new TypeTagAddress();\n      }\n\n      let tyTags: TypeTag[] = [];\n      // Check if the struct has ty args\n      if (this.tokens.length > 0 && this.tokens[0][1] === \"<\") {\n        this.consume(\"<\");\n        tyTags = this.parseCommaList(\">\", true);\n        this.consume(\">\");\n      }\n\n      const structTag = new StructTag(\n        AccountAddress.fromHex(address),\n        new Identifier(module),\n        new Identifier(name),\n        tyTags,\n      );\n      return new TypeTagStruct(structTag);\n    }\n    if (tokenTy === \"GENERIC\") {\n      if (this.typeTags.length === 0) {\n        bail(\"Can't convert generic type since no typeTags were specified.\");\n      }\n      // a generic tokenVal has the format of `T<digit>`, for example `T1`.\n      // The digit (i.e 1) indicates the the index of this type in the typeTags array.\n      // For a tokenVal == T1, should be parsed as the type in typeTags[1]\n      const idx = parseInt(tokenVal.substring(1), 10);\n      return new TypeTagParser(this.typeTags[idx]).parseTypeTag();\n    }\n\n    throw new Error(\"Invalid type tag.\");\n  }\n}\n\nexport class TypeTagParserError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"TypeTagParserError\";\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-classes-per-file */\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport { HexString } from \"../utils\";\nimport {\n  Deserializer,\n  Serializer,\n  Uint64,\n  Bytes,\n  Seq,\n  Uint8,\n  Uint128,\n  deserializeVector,\n  serializeVector,\n  bcsToBytes,\n  Uint16,\n  Uint256,\n} from \"../bcs\";\nimport { TransactionAuthenticator } from \"./authenticator\";\nimport { Identifier } from \"./identifier\";\nimport { TypeTag } from \"./type_tag\";\nimport { AccountAddress } from \"./account_address\";\n\nexport class RawTransaction {\n  /**\n   * RawTransactions contain the metadata and payloads that can be submitted to Aptos chain for execution.\n   * RawTransactions must be signed before Aptos chain can execute them.\n   *\n   * @param sender Account address of the sender.\n   * @param sequence_number Sequence number of this transaction. This must match the sequence number stored in\n   *   the sender's account at the time the transaction executes.\n   * @param payload Instructions for the Aptos Blockchain, including publishing a module,\n   *   execute a entry function or execute a script payload.\n   * @param max_gas_amount Maximum total gas to spend for this transaction. The account must have more\n   *   than this gas or the transaction will be discarded during validation.\n   * @param gas_unit_price Price to be paid per gas unit.\n   * @param expiration_timestamp_secs The blockchain timestamp at which the blockchain would discard this transaction.\n   * @param chain_id The chain ID of the blockchain that this transaction is intended to be run on.\n   */\n  constructor(\n    public readonly sender: AccountAddress,\n    public readonly sequence_number: Uint64,\n    public readonly payload: TransactionPayload,\n    public readonly max_gas_amount: Uint64,\n    public readonly gas_unit_price: Uint64,\n    public readonly expiration_timestamp_secs: Uint64,\n    public readonly chain_id: ChainId,\n  ) {}\n\n  serialize(serializer: Serializer): void {\n    this.sender.serialize(serializer);\n    serializer.serializeU64(this.sequence_number);\n    this.payload.serialize(serializer);\n    serializer.serializeU64(this.max_gas_amount);\n    serializer.serializeU64(this.gas_unit_price);\n    serializer.serializeU64(this.expiration_timestamp_secs);\n    this.chain_id.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): RawTransaction {\n    const sender = AccountAddress.deserialize(deserializer);\n    const sequence_number = deserializer.deserializeU64();\n    const payload = TransactionPayload.deserialize(deserializer);\n    const max_gas_amount = deserializer.deserializeU64();\n    const gas_unit_price = deserializer.deserializeU64();\n    const expiration_timestamp_secs = deserializer.deserializeU64();\n    const chain_id = ChainId.deserialize(deserializer);\n    return new RawTransaction(\n      sender,\n      sequence_number,\n      payload,\n      max_gas_amount,\n      gas_unit_price,\n      expiration_timestamp_secs,\n      chain_id,\n    );\n  }\n}\n\nexport class Script {\n  /**\n   * Scripts contain the Move bytecodes payload that can be submitted to Aptos chain for execution.\n   * @param code Move bytecode\n   * @param ty_args Type arguments that bytecode requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to bytecode function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */\n  constructor(\n    public readonly code: Bytes,\n    public readonly ty_args: Seq<TypeTag>,\n    public readonly args: Seq<TransactionArgument>,\n  ) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.code);\n    serializeVector<TypeTag>(this.ty_args, serializer);\n    serializeVector<TransactionArgument>(this.args, serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): Script {\n    const code = deserializer.deserializeBytes();\n    const ty_args = deserializeVector(deserializer, TypeTag);\n    const args = deserializeVector(deserializer, TransactionArgument);\n    return new Script(code, ty_args, args);\n  }\n}\n\nexport class EntryFunction {\n  /**\n   * Contains the payload to run a function within a module.\n   * @param module_name Fully qualified module name. ModuleId consists of account address and module name.\n   * @param function_name The function to run.\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */\n  constructor(\n    public readonly module_name: ModuleId,\n    public readonly function_name: Identifier,\n    public readonly ty_args: Seq<TypeTag>,\n    public readonly args: Seq<Bytes>,\n  ) {}\n\n  /**\n   *\n   * @param module Fully qualified module name in format \"AccountAddress::module_name\" e.g. \"0x1::coin\"\n   * @param func Function name\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @returns\n   */\n  static natural(module: string, func: string, ty_args: Seq<TypeTag>, args: Seq<Bytes>): EntryFunction {\n    return new EntryFunction(ModuleId.fromStr(module), new Identifier(func), ty_args, args);\n  }\n\n  /**\n   * `natual` is deprecated, please use `natural`\n   *\n   * @deprecated.\n   */\n  static natual(module: string, func: string, ty_args: Seq<TypeTag>, args: Seq<Bytes>): EntryFunction {\n    return EntryFunction.natural(module, func, ty_args, args);\n  }\n\n  serialize(serializer: Serializer): void {\n    this.module_name.serialize(serializer);\n    this.function_name.serialize(serializer);\n    serializeVector<TypeTag>(this.ty_args, serializer);\n\n    serializer.serializeU32AsUleb128(this.args.length);\n    this.args.forEach((item: Bytes) => {\n      serializer.serializeBytes(item);\n    });\n  }\n\n  static deserialize(deserializer: Deserializer): EntryFunction {\n    const module_name = ModuleId.deserialize(deserializer);\n    const function_name = Identifier.deserialize(deserializer);\n    const ty_args = deserializeVector(deserializer, TypeTag);\n\n    const length = deserializer.deserializeUleb128AsU32();\n    const list: Seq<Bytes> = [];\n    for (let i = 0; i < length; i += 1) {\n      list.push(deserializer.deserializeBytes());\n    }\n\n    const args = list;\n    return new EntryFunction(module_name, function_name, ty_args, args);\n  }\n}\n\nexport class MultiSigTransactionPayload {\n  /**\n   * Contains the payload to run a multisig account transaction.\n   * @param transaction_payload The payload of the multisig transaction. This can only be EntryFunction for now but\n   * Script might be supported in the future.\n   */\n  constructor(public readonly transaction_payload: EntryFunction) {}\n\n  serialize(serializer: Serializer): void {\n    // We can support multiple types of inner transaction payload in the future.\n    // For now it's only EntryFunction but if we support more types, we need to serialize with the right enum values\n    // here\n    serializer.serializeU32AsUleb128(0);\n    this.transaction_payload.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): MultiSigTransactionPayload {\n    // TODO: Support other types of payload beside EntryFunction.\n    // This is the enum value indicating which type of payload the multisig tx contains.\n    deserializer.deserializeUleb128AsU32();\n    return new MultiSigTransactionPayload(EntryFunction.deserialize(deserializer));\n  }\n}\n\nexport class MultiSig {\n  /**\n   * Contains the payload to run a multisig account transaction.\n   * @param multisig_address The multisig account address the transaction will be executed as.\n   * @param transaction_payload The payload of the multisig transaction. This is optional when executing a multisig\n   *  transaction whose payload is already stored on chain.\n   */\n  constructor(\n    public readonly multisig_address: AccountAddress,\n    public readonly transaction_payload?: MultiSigTransactionPayload,\n  ) {}\n\n  serialize(serializer: Serializer): void {\n    this.multisig_address.serialize(serializer);\n    // Options are encoded with an extra u8 field before the value - 0x0 is none and 0x1 is present.\n    // We use serializeBool below to create this prefix value.\n    if (this.transaction_payload === undefined) {\n      serializer.serializeBool(false);\n    } else {\n      serializer.serializeBool(true);\n      this.transaction_payload.serialize(serializer);\n    }\n  }\n\n  static deserialize(deserializer: Deserializer): MultiSig {\n    const multisig_address = AccountAddress.deserialize(deserializer);\n    const payloadPresent = deserializer.deserializeBool();\n    let transaction_payload;\n    if (payloadPresent) {\n      transaction_payload = MultiSigTransactionPayload.deserialize(deserializer);\n    }\n    return new MultiSig(multisig_address, transaction_payload);\n  }\n}\n\nexport class Module {\n  /**\n   * Contains the bytecode of a Move module that can be published to the Aptos chain.\n   * @param code Move bytecode of a module.\n   */\n  constructor(public readonly code: Bytes) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeBytes(this.code);\n  }\n\n  static deserialize(deserializer: Deserializer): Module {\n    const code = deserializer.deserializeBytes();\n    return new Module(code);\n  }\n}\n\nexport class ModuleId {\n  /**\n   * Full name of a module.\n   * @param address The account address.\n   * @param name The name of the module under the account at \"address\".\n   */\n  constructor(public readonly address: AccountAddress, public readonly name: Identifier) {}\n\n  /**\n   * Converts a string literal to a ModuleId\n   * @param moduleId String literal in format \"AccountAddress::module_name\",\n   *   e.g. \"0x1::coin\"\n   * @returns\n   */\n  static fromStr(moduleId: string): ModuleId {\n    const parts = moduleId.split(\"::\");\n    if (parts.length !== 2) {\n      throw new Error(\"Invalid module id.\");\n    }\n    return new ModuleId(AccountAddress.fromHex(new HexString(parts[0])), new Identifier(parts[1]));\n  }\n\n  serialize(serializer: Serializer): void {\n    this.address.serialize(serializer);\n    this.name.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): ModuleId {\n    const address = AccountAddress.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    return new ModuleId(address, name);\n  }\n}\n\nexport class ChangeSet {\n  serialize(serializer: Serializer): void {\n    throw new Error(\"Not implemented.\");\n  }\n\n  static deserialize(deserializer: Deserializer): ChangeSet {\n    throw new Error(\"Not implemented.\");\n  }\n}\n\nexport class WriteSet {\n  serialize(serializer: Serializer): void {\n    throw new Error(\"Not implmented.\");\n  }\n\n  static deserialize(deserializer: Deserializer): WriteSet {\n    throw new Error(\"Not implmented.\");\n  }\n}\n\nexport class SignedTransaction {\n  /**\n   * A SignedTransaction consists of a raw transaction and an authenticator. The authenticator\n   * contains a client's public key and the signature of the raw transaction.\n   *\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   *\n   * @param raw_txn\n   * @param authenticator Contains a client's public key and the signature of the raw transaction.\n   *   Authenticator has 3 flavors: single signature, multi-signature and multi-agent.\n   *   @see authenticator.ts for details.\n   */\n  constructor(public readonly raw_txn: RawTransaction, public readonly authenticator: TransactionAuthenticator) {}\n\n  serialize(serializer: Serializer): void {\n    this.raw_txn.serialize(serializer);\n    this.authenticator.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): SignedTransaction {\n    const raw_txn = RawTransaction.deserialize(deserializer);\n    const authenticator = TransactionAuthenticator.deserialize(deserializer);\n    return new SignedTransaction(raw_txn, authenticator);\n  }\n}\n\nexport abstract class RawTransactionWithData {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): RawTransactionWithData {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return MultiAgentRawTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for RawTransactionWithData: ${index}`);\n    }\n  }\n}\n\nexport class MultiAgentRawTransaction extends RawTransactionWithData {\n  constructor(\n    public readonly raw_txn: RawTransaction,\n    public readonly secondary_signer_addresses: Seq<AccountAddress>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    // enum variant index\n    serializer.serializeU32AsUleb128(0);\n    this.raw_txn.serialize(serializer);\n    serializeVector<TransactionArgument>(this.secondary_signer_addresses, serializer);\n  }\n\n  static load(deserializer: Deserializer): MultiAgentRawTransaction {\n    const rawTxn = RawTransaction.deserialize(deserializer);\n    const secondarySignerAddresses = deserializeVector(deserializer, AccountAddress);\n\n    return new MultiAgentRawTransaction(rawTxn, secondarySignerAddresses);\n  }\n}\n\nexport abstract class TransactionPayload {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TransactionPayload {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionPayloadScript.load(deserializer);\n      // TODO: change to 1 once ModuleBundle has been removed from rust\n      case 2:\n        return TransactionPayloadEntryFunction.load(deserializer);\n      case 3:\n        return TransactionPayloadMultisig.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n}\n\nexport class TransactionPayloadScript extends TransactionPayload {\n  constructor(public readonly value: Script) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionPayloadScript {\n    const value = Script.deserialize(deserializer);\n    return new TransactionPayloadScript(value);\n  }\n}\n\nexport class TransactionPayloadEntryFunction extends TransactionPayload {\n  constructor(public readonly value: EntryFunction) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionPayloadEntryFunction {\n    const value = EntryFunction.deserialize(deserializer);\n    return new TransactionPayloadEntryFunction(value);\n  }\n}\n\nexport class TransactionPayloadMultisig extends TransactionPayload {\n  constructor(public readonly value: MultiSig) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(3);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionPayloadMultisig {\n    const value = MultiSig.deserialize(deserializer);\n    return new TransactionPayloadMultisig(value);\n  }\n}\n\nexport class ChainId {\n  constructor(public readonly value: Uint8) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU8(this.value);\n  }\n\n  static deserialize(deserializer: Deserializer): ChainId {\n    const value = deserializer.deserializeU8();\n    return new ChainId(value);\n  }\n}\n\nexport abstract class TransactionArgument {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): TransactionArgument {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionArgumentU8.load(deserializer);\n      case 1:\n        return TransactionArgumentU64.load(deserializer);\n      case 2:\n        return TransactionArgumentU128.load(deserializer);\n      case 3:\n        return TransactionArgumentAddress.load(deserializer);\n      case 4:\n        return TransactionArgumentU8Vector.load(deserializer);\n      case 5:\n        return TransactionArgumentBool.load(deserializer);\n      case 6:\n        return TransactionArgumentU16.load(deserializer);\n      case 7:\n        return TransactionArgumentU32.load(deserializer);\n      case 8:\n        return TransactionArgumentU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionArgument: ${index}`);\n    }\n  }\n}\n\nexport class TransactionArgumentU8 extends TransactionArgument {\n  constructor(public readonly value: Uint8) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeU8(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU8 {\n    const value = deserializer.deserializeU8();\n    return new TransactionArgumentU8(value);\n  }\n}\n\nexport class TransactionArgumentU16 extends TransactionArgument {\n  constructor(public readonly value: Uint16) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(6);\n    serializer.serializeU16(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU16 {\n    const value = deserializer.deserializeU16();\n    return new TransactionArgumentU16(value);\n  }\n}\n\nexport class TransactionArgumentU32 extends TransactionArgument {\n  constructor(public readonly value: Uint16) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(7);\n    serializer.serializeU32(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU32 {\n    const value = deserializer.deserializeU32();\n    return new TransactionArgumentU32(value);\n  }\n}\n\nexport class TransactionArgumentU64 extends TransactionArgument {\n  constructor(public readonly value: Uint64) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeU64(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU64 {\n    const value = deserializer.deserializeU64();\n    return new TransactionArgumentU64(value);\n  }\n}\n\nexport class TransactionArgumentU128 extends TransactionArgument {\n  constructor(public readonly value: Uint128) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(2);\n    serializer.serializeU128(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU128 {\n    const value = deserializer.deserializeU128();\n    return new TransactionArgumentU128(value);\n  }\n}\n\nexport class TransactionArgumentU256 extends TransactionArgument {\n  constructor(public readonly value: Uint256) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(8);\n    serializer.serializeU256(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU256 {\n    const value = deserializer.deserializeU256();\n    return new TransactionArgumentU256(value);\n  }\n}\n\nexport class TransactionArgumentAddress extends TransactionArgument {\n  constructor(public readonly value: AccountAddress) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(3);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentAddress {\n    const value = AccountAddress.deserialize(deserializer);\n    return new TransactionArgumentAddress(value);\n  }\n}\n\nexport class TransactionArgumentU8Vector extends TransactionArgument {\n  constructor(public readonly value: Bytes) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(4);\n    serializer.serializeBytes(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentU8Vector {\n    const value = deserializer.deserializeBytes();\n    return new TransactionArgumentU8Vector(value);\n  }\n}\n\nexport class TransactionArgumentBool extends TransactionArgument {\n  constructor(public readonly value: boolean) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(5);\n    serializer.serializeBool(this.value);\n  }\n\n  static load(deserializer: Deserializer): TransactionArgumentBool {\n    const value = deserializer.deserializeBool();\n    return new TransactionArgumentBool(value);\n  }\n}\n\nexport abstract class Transaction {\n  abstract serialize(serializer: Serializer): void;\n\n  abstract hash(): Bytes;\n\n  getHashSalt(): Bytes {\n    const hash = sha3Hash.create();\n    hash.update(\"APTOS::Transaction\");\n    return hash.digest();\n  }\n\n  static deserialize(deserializer: Deserializer): Transaction {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return UserTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for Transaction: ${index}`);\n    }\n  }\n}\n\nexport class UserTransaction extends Transaction {\n  constructor(public readonly value: SignedTransaction) {\n    super();\n  }\n\n  hash(): Bytes {\n    const hash = sha3Hash.create();\n    hash.update(this.getHashSalt());\n    hash.update(bcsToBytes(this));\n    return hash.digest();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n\n  static load(deserializer: Deserializer): UserTransaction {\n    return new UserTransaction(SignedTransaction.deserialize(deserializer));\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Deserializer, Serializer, Bytes, Seq, deserializeVector, serializeVector } from \"../bcs\";\n\nimport { ModuleId } from \"./transaction\";\n\nimport { TypeTag } from \"./type_tag\";\n\nexport class TypeArgumentABI {\n  /**\n   * Constructs a TypeArgumentABI instance.\n   * @param name\n   */\n  constructor(public readonly name: string) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeStr(this.name);\n  }\n\n  static deserialize(deserializer: Deserializer): TypeArgumentABI {\n    const name = deserializer.deserializeStr();\n    return new TypeArgumentABI(name);\n  }\n}\n\nexport class ArgumentABI {\n  /**\n   * Constructs an ArgumentABI instance.\n   * @param name\n   * @param type_tag\n   */\n  constructor(public readonly name: string, public readonly type_tag: TypeTag) {}\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeStr(this.name);\n    this.type_tag.serialize(serializer);\n  }\n\n  static deserialize(deserializer: Deserializer): ArgumentABI {\n    const name = deserializer.deserializeStr();\n    const typeTag = TypeTag.deserialize(deserializer);\n    return new ArgumentABI(name, typeTag);\n  }\n}\n\nexport abstract class ScriptABI {\n  abstract serialize(serializer: Serializer): void;\n\n  static deserialize(deserializer: Deserializer): ScriptABI {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionScriptABI.load(deserializer);\n      case 1:\n        return EntryFunctionABI.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n}\n\nexport class TransactionScriptABI extends ScriptABI {\n  /**\n   * Constructs a TransactionScriptABI instance.\n   * @param name Entry function name\n   * @param doc\n   * @param code\n   * @param ty_args\n   * @param args\n   */\n  constructor(\n    public readonly name: string,\n    public readonly doc: string,\n    public readonly code: Bytes,\n    public readonly ty_args: Seq<TypeArgumentABI>,\n    public readonly args: Seq<ArgumentABI>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeStr(this.name);\n    serializer.serializeStr(this.doc);\n    serializer.serializeBytes(this.code);\n    serializeVector<TypeArgumentABI>(this.ty_args, serializer);\n    serializeVector<ArgumentABI>(this.args, serializer);\n  }\n\n  static load(deserializer: Deserializer): TransactionScriptABI {\n    const name = deserializer.deserializeStr();\n    const doc = deserializer.deserializeStr();\n    const code = deserializer.deserializeBytes();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new TransactionScriptABI(name, doc, code, tyArgs, args);\n  }\n}\n\nexport class EntryFunctionABI extends ScriptABI {\n  /**\n   * Constructs a EntryFunctionABI instance\n   * @param name\n   * @param module_name Fully qualified module id\n   * @param doc\n   * @param ty_args\n   * @param args\n   */\n  constructor(\n    public readonly name: string,\n    public readonly module_name: ModuleId,\n    public readonly doc: string,\n    public readonly ty_args: Seq<TypeArgumentABI>,\n    public readonly args: Seq<ArgumentABI>,\n  ) {\n    super();\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeStr(this.name);\n    this.module_name.serialize(serializer);\n    serializer.serializeStr(this.doc);\n    serializeVector<TypeArgumentABI>(this.ty_args, serializer);\n    serializeVector<ArgumentABI>(this.args, serializer);\n  }\n\n  static load(deserializer: Deserializer): EntryFunctionABI {\n    const name = deserializer.deserializeStr();\n    const moduleName = ModuleId.deserialize(deserializer);\n    const doc = deserializer.deserializeStr();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new EntryFunctionABI(name, moduleName, doc, tyArgs, args);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport { HexString } from \"../utils\";\nimport { Bytes } from \"../bcs\";\nimport { MultiEd25519PublicKey } from \"./multi_ed25519\";\nimport { Ed25519PublicKey } from \"./ed25519\";\n\n/**\n * Each account stores an authentication key. Authentication key enables account owners to rotate\n * their private key(s) associated with the account without changing the address that hosts their account.\n * @see {@link * https://aptos.dev/concepts/accounts | Account Basics}\n *\n * Account addresses can be derived from AuthenticationKey\n */\nexport class AuthenticationKey {\n  static readonly LENGTH: number = 32;\n\n  static readonly MULTI_ED25519_SCHEME: number = 1;\n\n  static readonly ED25519_SCHEME: number = 0;\n\n  static readonly DERIVE_RESOURCE_ACCOUNT_SCHEME: number = 255;\n\n  readonly bytes: Bytes;\n\n  constructor(bytes: Bytes) {\n    if (bytes.length !== AuthenticationKey.LENGTH) {\n      throw new Error(\"Expected a byte array of length 32\");\n    }\n    this.bytes = bytes;\n  }\n\n  /**\n   * Converts a K-of-N MultiEd25519PublicKey to AuthenticationKey with:\n   * `auth_key = sha3-256(p_1 | … | p_n | K | 0x01)`. `K` represents the K-of-N required for\n   * authenticating the transaction. `0x01` is the 1-byte scheme for multisig.\n   */\n  static fromMultiEd25519PublicKey(publicKey: MultiEd25519PublicKey): AuthenticationKey {\n    const pubKeyBytes = publicKey.toBytes();\n\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([AuthenticationKey.MULTI_ED25519_SCHEME], pubKeyBytes.length);\n\n    const hash = sha3Hash.create();\n    hash.update(bytes);\n\n    return new AuthenticationKey(hash.digest());\n  }\n\n  static fromEd25519PublicKey(publicKey: Ed25519PublicKey): AuthenticationKey {\n    const pubKeyBytes = publicKey.value;\n\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([AuthenticationKey.ED25519_SCHEME], pubKeyBytes.length);\n\n    const hash = sha3Hash.create();\n    hash.update(bytes);\n\n    return new AuthenticationKey(hash.digest());\n  }\n\n  /**\n   * Derives an account address from AuthenticationKey. Since current AccountAddress is 32 bytes,\n   * AuthenticationKey bytes are directly translated to AccountAddress.\n   */\n  derivedAddress(): HexString {\n    return HexString.fromUint8Array(this.bytes);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AccountAddress } from \"./account_address\";\nimport { Serializer } from \"../bcs\";\n\nexport class RotationProofChallenge {\n  constructor(\n    public readonly accountAddress: AccountAddress,\n    public readonly moduleName: string,\n    public readonly structName: string,\n    public readonly sequenceNumber: number | bigint,\n    public readonly originator: AccountAddress,\n    public readonly currentAuthKey: AccountAddress,\n    public readonly newPublicKey: Uint8Array,\n  ) {}\n\n  serialize(serializer: Serializer): void {\n    this.accountAddress.serialize(serializer);\n    serializer.serializeStr(this.moduleName);\n    serializer.serializeStr(this.structName);\n    serializer.serializeU64(this.sequenceNumber);\n    this.originator.serialize(serializer);\n    this.currentAuthKey.serialize(serializer);\n    serializer.serializeBytes(this.newPublicKey);\n  }\n}\n","import axios from \"axios\";\n\nimport { AnyNumber } from \"../bcs/types\";\nimport { HexString, MaybeHexString } from \"../utils\";\nimport {\n  GetAccountTokensCountQuery,\n  GetAccountCoinsDataQuery,\n  GetAccountCurrentTokensQuery,\n  GetAccountTransactionsCountQuery,\n  GetAccountTransactionsDataQuery,\n  GetCurrentDelegatorBalancesCountQuery,\n  GetDelegatedStakingActivitiesQuery,\n  GetIndexerLedgerInfoQuery,\n  GetTokenActivitiesCountQuery,\n  GetTokenActivitiesQuery,\n  GetTokenDataQuery,\n  GetTokenOwnersDataQuery,\n  GetTopUserTransactionsQuery,\n  GetUserTransactionsQuery,\n} from \"../indexer/generated/operations\";\nimport {\n  GetAccountTokensCount,\n  GetAccountCoinsData,\n  GetAccountCurrentTokens,\n  GetAccountTransactionsCount,\n  GetAccountTransactionsData,\n  GetCurrentDelegatorBalancesCount,\n  GetDelegatedStakingActivities,\n  GetIndexerLedgerInfo,\n  GetTokenActivities,\n  GetTokenActivitiesCount,\n  GetTokenData,\n  GetTokenOwnersData,\n  GetTopUserTransactions,\n  GetUserTransactions,\n} from \"../indexer/generated/queries\";\n\n/**\n * Controls the number of results that are returned and the starting position of those results.\n * limit specifies the maximum number of items or records to return in a query result.\n * offset parameter specifies the starting position of the query result within the set of data.\n * For example, if you want to retrieve records 11-20,\n * you would set the offset parameter to 10 (i.e., the index of the first record to retrieve is 10)\n * and the limit parameter to 10 (i.e., the number of records to retrieve is 10))\n */\ninterface PaginationArgs {\n  offset?: AnyNumber;\n  limit?: number;\n}\n\ntype GraphqlQuery = {\n  query: string;\n  variables?: {};\n};\n/**\n * Provides methods for retrieving data from Aptos Indexer.\n * For more detailed Queries specification see\n * {@link https://cloud.hasura.io/public/graphiql?endpoint=https://indexer.mainnet.aptoslabs.com/v1/graphql}\n */\nexport class IndexerClient {\n  endpoint: string;\n\n  /**\n   * @param endpoint URL of the Aptos Indexer API endpoint.\n   */\n  constructor(endpoint: string) {\n    this.endpoint = endpoint;\n  }\n\n  /**\n   * Indexer only accepts address in the long format, i.e a 66 chars long -> 0x<64 chars>\n   * This method makes sure address is 66 chars long.\n   * @param address\n   */\n  static validateAddress(address: string): void {\n    if (address.length < 66) {\n      throw new Error(\"Address needs to be 66 chars long.\");\n    }\n  }\n\n  /**\n   * Builds a axios client call to fetch data from Aptos Indexer.\n   *\n   * @param graphqlQuery A GraphQL query to pass in the `data` axios call.\n   */\n  async queryIndexer<T>(graphqlQuery: GraphqlQuery): Promise<T> {\n    const { data } = await axios.post(this.endpoint, graphqlQuery);\n    if (data.errors) {\n      throw new Error(`Indexer data error ${JSON.stringify(data.errors, null, \" \")}`);\n    }\n    return data.data;\n  }\n\n  /**\n   * Queries Indexer Ledger Info\n   *\n   * @returns GetLedgerInfoQuery response type\n   */\n  async getIndexerLedgerInfo(): Promise<GetIndexerLedgerInfoQuery> {\n    const graphqlQuery = {\n      query: GetIndexerLedgerInfo,\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries an Aptos account's NFTs by owner address\n   *\n   * @param ownerAddress Hex-encoded 32 byte Aptos account address\n   * @returns GetAccountCurrentTokensQuery response type\n   */\n  async getAccountNFTs(ownerAddress: MaybeHexString, options?: PaginationArgs): Promise<GetAccountCurrentTokensQuery> {\n    const address = HexString.ensure(ownerAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountCurrentTokens,\n      variables: { address, offset: options?.offset, limit: options?.limit },\n    };\n\n    return this.queryIndexer<GetAccountCurrentTokensQuery>(graphqlQuery);\n  }\n\n  /**\n   * Queries a token activities by token id hash\n   *\n   * @param idHash token id hash\n   * @returns GetTokenActivitiesQuery response type\n   */\n  async getTokenActivities(idHash: string, options?: PaginationArgs): Promise<GetTokenActivitiesQuery> {\n    const graphqlQuery = {\n      query: GetTokenActivities,\n      variables: { idHash, offset: options?.offset, limit: options?.limit },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries an account coin data\n   *\n   * @param ownerAddress Owner address\n   * @returns GetAccountCoinsDataQuery response type\n   */\n  async getAccountCoinsData(ownerAddress: MaybeHexString, options?: PaginationArgs): Promise<GetAccountCoinsDataQuery> {\n    const address = HexString.ensure(ownerAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountCoinsData,\n      variables: { owner_address: address, offset: options?.offset, limit: options?.limit },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Gets the count of tokens owned by an account\n   *\n   * @param ownerAddress Owner address\n   * @returns AccountTokensCountQuery response type\n   */\n  async getAccountTokensCount(ownerAddress: MaybeHexString): Promise<GetAccountTokensCountQuery> {\n    const address = HexString.ensure(ownerAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTokensCount,\n      variables: { owner_address: address },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Gets the count of transactions submitted by an account\n   *\n   * @param address Account address\n   * @returns GetAccountTransactionsCountQuery response type\n   */\n  async getAccountTransactionsCount(accountAddress: MaybeHexString): Promise<GetAccountTransactionsCountQuery> {\n    const address = HexString.ensure(accountAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTransactionsCount,\n      variables: { address },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries an account transactions data\n   *\n   * @param address Account address\n   * @returns GetAccountTransactionsDataQuery response type\n   */\n  async getAccountTransactionsData(\n    accountAddress: MaybeHexString,\n    options?: PaginationArgs,\n  ): Promise<GetAccountTransactionsDataQuery> {\n    const address = HexString.ensure(accountAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTransactionsData,\n      variables: { address, offset: options?.offset, limit: options?.limit },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries delegated staking activities\n   *\n   * @param delegatorAddress Delegator address\n   * @param poolAddress Pool address\n   * @returns GetDelegatedStakingActivitiesQuery response type\n   */\n  async getDelegatedStakingActivities(\n    delegatorAddress: MaybeHexString,\n    poolAddress: MaybeHexString,\n  ): Promise<GetDelegatedStakingActivitiesQuery> {\n    const delegator = HexString.ensure(delegatorAddress).hex();\n    const pool = HexString.ensure(poolAddress).hex();\n    IndexerClient.validateAddress(delegator);\n    IndexerClient.validateAddress(pool);\n    const graphqlQuery = {\n      query: GetDelegatedStakingActivities,\n      variables: {\n        delegatorAddress: delegator,\n        poolAddress: pool,\n      },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Gets the count of token's activities\n   *\n   * @param tokenId Token ID\n   * @returns GetTokenActivitiesCountQuery response type\n   */\n  async getTokenActivitiesCount(tokenId: string): Promise<GetTokenActivitiesCountQuery> {\n    const graphqlQuery = {\n      query: GetTokenActivitiesCount,\n      variables: { token_id: tokenId },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries token data\n   *\n   * @param tokenId Token ID\n   * @returns GetTokenDataQuery response type\n   */\n  async getTokenData(tokenId: string): Promise<GetTokenDataQuery> {\n    const graphqlQuery = {\n      query: GetTokenData,\n      variables: { token_id: tokenId },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries token owners data\n   *\n   * @param tokenId Token ID\n   * @param propertyVersion Property version\n   * @returns GetTokenOwnersDataQuery response type\n   */\n  async getTokenOwnersData(tokenId: string, propertyVersion: number): Promise<GetTokenOwnersDataQuery> {\n    const graphqlQuery = {\n      query: GetTokenOwnersData,\n      variables: { token_id: tokenId, property_version: propertyVersion },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries top user transactions\n   *\n   * @param limit\n   * @returns GetTopUserTransactionsQuery response type\n   */\n  async getTopUserTransactions(limit: number): Promise<GetTopUserTransactionsQuery> {\n    const graphqlQuery = {\n      query: GetTopUserTransactions,\n      variables: { limit },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries top user transactions\n   *\n   * @returns GetUserTransactionsQuery response type\n   */\n  async getUserTransactions(startVersion?: number, options?: PaginationArgs): Promise<GetUserTransactionsQuery> {\n    const graphqlQuery = {\n      query: GetUserTransactions,\n      variables: { start_version: startVersion, offset: options?.offset, limit: options?.limit },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n\n  /**\n   * Queries current delegator balances count\n   *\n   * @returns GetCurrentDelegatorBalancesCountQuery response type\n   */\n  async getCurrentDelegatorBalancesCount(poolAddress: MaybeHexString): Promise<GetCurrentDelegatorBalancesCountQuery> {\n    const address = HexString.ensure(poolAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetCurrentDelegatorBalancesCount,\n      variables: { poolAddress: address },\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n}\n","import * as Types from './operations';\n\nimport { GraphQLClient } from 'graphql-request';\nimport * as Dom from 'graphql-request/dist/types.dom';\nexport const TokenDataFieldsFragmentDoc = `\n    fragment TokenDataFields on current_token_datas {\n  creator_address\n  collection_name\n  description\n  metadata_uri\n  name\n  token_data_id_hash\n  collection_data_id_hash\n}\n    `;\nexport const CollectionDataFieldsFragmentDoc = `\n    fragment CollectionDataFields on current_collection_datas {\n  metadata_uri\n  supply\n  description\n  collection_name\n  collection_data_id_hash\n  table_handle\n  creator_address\n}\n    `;\nexport const GetAccountCoinsData = `\n    query getAccountCoinsData($owner_address: String, $offset: Int, $limit: Int) {\n  current_coin_balances(\n    where: {owner_address: {_eq: $owner_address}}\n    offset: $offset\n    limit: $limit\n  ) {\n    amount\n    coin_type\n    coin_info {\n      name\n      decimals\n      symbol\n    }\n  }\n}\n    `;\nexport const GetAccountCurrentTokens = `\n    query getAccountCurrentTokens($address: String!, $offset: Int, $limit: Int) {\n  current_token_ownerships(\n    where: {owner_address: {_eq: $address}, amount: {_gt: 0}}\n    order_by: [{last_transaction_version: desc}, {creator_address: asc}, {collection_name: asc}, {name: asc}]\n    offset: $offset\n    limit: $limit\n  ) {\n    amount\n    current_token_data {\n      ...TokenDataFields\n    }\n    current_collection_data {\n      ...CollectionDataFields\n    }\n    last_transaction_version\n    property_version\n  }\n}\n    ${TokenDataFieldsFragmentDoc}\n${CollectionDataFieldsFragmentDoc}`;\nexport const GetAccountTokensCount = `\n    query getAccountTokensCount($owner_address: String) {\n  current_token_ownerships_aggregate(\n    where: {owner_address: {_eq: $owner_address}, amount: {_gt: \"0\"}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nexport const GetAccountTransactionsCount = `\n    query getAccountTransactionsCount($address: String) {\n  move_resources_aggregate(\n    where: {address: {_eq: $address}}\n    distinct_on: transaction_version\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nexport const GetAccountTransactionsData = `\n    query getAccountTransactionsData($address: String, $limit: Int, $offset: Int) {\n  move_resources(\n    where: {address: {_eq: $address}}\n    order_by: {transaction_version: desc}\n    distinct_on: transaction_version\n    limit: $limit\n    offset: $offset\n  ) {\n    transaction_version\n  }\n}\n    `;\nexport const GetCurrentDelegatorBalancesCount = `\n    query getCurrentDelegatorBalancesCount($poolAddress: String) {\n  current_delegator_balances_aggregate(\n    where: {pool_type: {_eq: \"active_shares\"}, pool_address: {_eq: $poolAddress}, amount: {_gt: \"0\"}}\n    distinct_on: delegator_address\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nexport const GetDelegatedStakingActivities = `\n    query getDelegatedStakingActivities($delegatorAddress: String, $poolAddress: String) {\n  delegated_staking_activities(\n    where: {delegator_address: {_eq: $delegatorAddress}, pool_address: {_eq: $poolAddress}}\n  ) {\n    amount\n    delegator_address\n    event_index\n    event_type\n    pool_address\n    transaction_version\n  }\n}\n    `;\nexport const GetIndexerLedgerInfo = `\n    query getIndexerLedgerInfo {\n  ledger_infos {\n    chain_id\n  }\n}\n    `;\nexport const GetTokenActivities = `\n    query getTokenActivities($idHash: String!, $offset: Int, $limit: Int) {\n  token_activities(\n    where: {token_data_id_hash: {_eq: $idHash}}\n    order_by: {transaction_version: desc}\n    offset: $offset\n    limit: $limit\n  ) {\n    creator_address\n    collection_name\n    name\n    token_data_id_hash\n    collection_data_id_hash\n    from_address\n    to_address\n    transaction_version\n    transaction_timestamp\n    property_version\n    transfer_type\n    event_sequence_number\n    token_amount\n  }\n}\n    `;\nexport const GetTokenActivitiesCount = `\n    query getTokenActivitiesCount($token_id: String) {\n  token_activities_aggregate(where: {token_data_id_hash: {_eq: $token_id}}) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nexport const GetTokenData = `\n    query getTokenData($token_id: String) {\n  current_token_datas(where: {token_data_id_hash: {_eq: $token_id}}) {\n    token_data_id_hash\n    name\n    collection_name\n    creator_address\n    default_properties\n    largest_property_version\n    maximum\n    metadata_uri\n    payee_address\n    royalty_points_denominator\n    royalty_points_numerator\n    supply\n  }\n}\n    `;\nexport const GetTokenOwnersData = `\n    query getTokenOwnersData($token_id: String, $property_version: numeric) {\n  current_token_ownerships(\n    where: {token_data_id_hash: {_eq: $token_id}, property_version: {_eq: $property_version}}\n  ) {\n    owner_address\n  }\n}\n    `;\nexport const GetTopUserTransactions = `\n    query getTopUserTransactions($limit: Int) {\n  user_transactions(limit: $limit, order_by: {version: desc}) {\n    version\n  }\n}\n    `;\nexport const GetUserTransactions = `\n    query getUserTransactions($limit: Int, $start_version: bigint, $offset: Int) {\n  user_transactions(\n    limit: $limit\n    order_by: {version: desc}\n    where: {version: {_lte: $start_version}}\n    offset: $offset\n  ) {\n    version\n  }\n}\n    `;\n\nexport type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;\n\n\nconst defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();\n\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    getAccountCoinsData(variables?: Types.GetAccountCoinsDataQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetAccountCoinsDataQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetAccountCoinsDataQuery>(GetAccountCoinsData, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getAccountCoinsData', 'query');\n    },\n    getAccountCurrentTokens(variables: Types.GetAccountCurrentTokensQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetAccountCurrentTokensQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetAccountCurrentTokensQuery>(GetAccountCurrentTokens, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getAccountCurrentTokens', 'query');\n    },\n    getAccountTokensCount(variables?: Types.GetAccountTokensCountQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetAccountTokensCountQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetAccountTokensCountQuery>(GetAccountTokensCount, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getAccountTokensCount', 'query');\n    },\n    getAccountTransactionsCount(variables?: Types.GetAccountTransactionsCountQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetAccountTransactionsCountQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetAccountTransactionsCountQuery>(GetAccountTransactionsCount, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getAccountTransactionsCount', 'query');\n    },\n    getAccountTransactionsData(variables?: Types.GetAccountTransactionsDataQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetAccountTransactionsDataQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetAccountTransactionsDataQuery>(GetAccountTransactionsData, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getAccountTransactionsData', 'query');\n    },\n    getCurrentDelegatorBalancesCount(variables?: Types.GetCurrentDelegatorBalancesCountQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetCurrentDelegatorBalancesCountQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetCurrentDelegatorBalancesCountQuery>(GetCurrentDelegatorBalancesCount, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getCurrentDelegatorBalancesCount', 'query');\n    },\n    getDelegatedStakingActivities(variables?: Types.GetDelegatedStakingActivitiesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetDelegatedStakingActivitiesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetDelegatedStakingActivitiesQuery>(GetDelegatedStakingActivities, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getDelegatedStakingActivities', 'query');\n    },\n    getIndexerLedgerInfo(variables?: Types.GetIndexerLedgerInfoQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetIndexerLedgerInfoQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetIndexerLedgerInfoQuery>(GetIndexerLedgerInfo, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getIndexerLedgerInfo', 'query');\n    },\n    getTokenActivities(variables: Types.GetTokenActivitiesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetTokenActivitiesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetTokenActivitiesQuery>(GetTokenActivities, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTokenActivities', 'query');\n    },\n    getTokenActivitiesCount(variables?: Types.GetTokenActivitiesCountQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetTokenActivitiesCountQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetTokenActivitiesCountQuery>(GetTokenActivitiesCount, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTokenActivitiesCount', 'query');\n    },\n    getTokenData(variables?: Types.GetTokenDataQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetTokenDataQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetTokenDataQuery>(GetTokenData, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTokenData', 'query');\n    },\n    getTokenOwnersData(variables?: Types.GetTokenOwnersDataQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetTokenOwnersDataQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetTokenOwnersDataQuery>(GetTokenOwnersData, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTokenOwnersData', 'query');\n    },\n    getTopUserTransactions(variables?: Types.GetTopUserTransactionsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetTopUserTransactionsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetTopUserTransactionsQuery>(GetTopUserTransactions, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTopUserTransactions', 'query');\n    },\n    getUserTransactions(variables?: Types.GetUserTransactionsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<Types.GetUserTransactionsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<Types.GetUserTransactionsQuery>(GetUserTransactions, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getUserTransactions', 'query');\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport { AptosGeneratedClient } from './AptosGeneratedClient';\n\nexport { ApiError } from './core/ApiError';\nexport { BaseHttpRequest } from './core/BaseHttpRequest';\nexport { CancelablePromise, CancelError } from './core/CancelablePromise';\nexport { OpenAPI } from './core/OpenAPI';\nexport type { OpenAPIConfig } from './core/OpenAPI';\n\nexport type { AccountData } from './models/AccountData';\nexport type { AccountSignature } from './models/AccountSignature';\nexport type { AccountSignature_Ed25519Signature } from './models/AccountSignature_Ed25519Signature';\nexport type { AccountSignature_MultiEd25519Signature } from './models/AccountSignature_MultiEd25519Signature';\nexport type { Address } from './models/Address';\nexport type { AptosError } from './models/AptosError';\nexport { AptosErrorCode } from './models/AptosErrorCode';\nexport type { Block } from './models/Block';\nexport type { BlockMetadataTransaction } from './models/BlockMetadataTransaction';\nexport type { DecodedTableData } from './models/DecodedTableData';\nexport type { DeletedTableData } from './models/DeletedTableData';\nexport type { DeleteModule } from './models/DeleteModule';\nexport type { DeleteResource } from './models/DeleteResource';\nexport type { DeleteTableItem } from './models/DeleteTableItem';\nexport type { DirectWriteSet } from './models/DirectWriteSet';\nexport type { Ed25519Signature } from './models/Ed25519Signature';\nexport type { EncodeSubmissionRequest } from './models/EncodeSubmissionRequest';\nexport type { EntryFunctionId } from './models/EntryFunctionId';\nexport type { EntryFunctionPayload } from './models/EntryFunctionPayload';\nexport type { Event } from './models/Event';\nexport type { EventGuid } from './models/EventGuid';\nexport type { GasEstimation } from './models/GasEstimation';\nexport type { GenesisPayload } from './models/GenesisPayload';\nexport type { GenesisPayload_WriteSetPayload } from './models/GenesisPayload_WriteSetPayload';\nexport type { GenesisTransaction } from './models/GenesisTransaction';\nexport type { HashValue } from './models/HashValue';\nexport type { HealthCheckSuccess } from './models/HealthCheckSuccess';\nexport type { HexEncodedBytes } from './models/HexEncodedBytes';\nexport type { IdentifierWrapper } from './models/IdentifierWrapper';\nexport type { IndexResponse } from './models/IndexResponse';\nexport type { ModuleBundlePayload } from './models/ModuleBundlePayload';\nexport type { MoveAbility } from './models/MoveAbility';\nexport type { MoveFunction } from './models/MoveFunction';\nexport type { MoveFunctionGenericTypeParam } from './models/MoveFunctionGenericTypeParam';\nexport { MoveFunctionVisibility } from './models/MoveFunctionVisibility';\nexport type { MoveModule } from './models/MoveModule';\nexport type { MoveModuleBytecode } from './models/MoveModuleBytecode';\nexport type { MoveModuleId } from './models/MoveModuleId';\nexport type { MoveResource } from './models/MoveResource';\nexport type { MoveScriptBytecode } from './models/MoveScriptBytecode';\nexport type { MoveStruct } from './models/MoveStruct';\nexport type { MoveStructField } from './models/MoveStructField';\nexport type { MoveStructGenericTypeParam } from './models/MoveStructGenericTypeParam';\nexport type { MoveStructTag } from './models/MoveStructTag';\nexport type { MoveStructValue } from './models/MoveStructValue';\nexport type { MoveType } from './models/MoveType';\nexport type { MoveValue } from './models/MoveValue';\nexport type { MultiAgentSignature } from './models/MultiAgentSignature';\nexport type { MultiEd25519Signature } from './models/MultiEd25519Signature';\nexport type { MultisigPayload } from './models/MultisigPayload';\nexport type { MultisigTransactionPayload } from './models/MultisigTransactionPayload';\nexport type { PendingTransaction } from './models/PendingTransaction';\nexport type { RawTableItemRequest } from './models/RawTableItemRequest';\nexport { RoleType } from './models/RoleType';\nexport type { ScriptPayload } from './models/ScriptPayload';\nexport type { ScriptWriteSet } from './models/ScriptWriteSet';\nexport type { StateCheckpointTransaction } from './models/StateCheckpointTransaction';\nexport type { StateKeyWrapper } from './models/StateKeyWrapper';\nexport type { SubmitTransactionRequest } from './models/SubmitTransactionRequest';\nexport type { TableItemRequest } from './models/TableItemRequest';\nexport type { Transaction } from './models/Transaction';\nexport type { Transaction_BlockMetadataTransaction } from './models/Transaction_BlockMetadataTransaction';\nexport type { Transaction_GenesisTransaction } from './models/Transaction_GenesisTransaction';\nexport type { Transaction_PendingTransaction } from './models/Transaction_PendingTransaction';\nexport type { Transaction_StateCheckpointTransaction } from './models/Transaction_StateCheckpointTransaction';\nexport type { Transaction_UserTransaction } from './models/Transaction_UserTransaction';\nexport type { TransactionPayload } from './models/TransactionPayload';\nexport type { TransactionPayload_EntryFunctionPayload } from './models/TransactionPayload_EntryFunctionPayload';\nexport type { TransactionPayload_ModuleBundlePayload } from './models/TransactionPayload_ModuleBundlePayload';\nexport type { TransactionPayload_MultisigPayload } from './models/TransactionPayload_MultisigPayload';\nexport type { TransactionPayload_ScriptPayload } from './models/TransactionPayload_ScriptPayload';\nexport type { TransactionsBatchSingleSubmissionFailure } from './models/TransactionsBatchSingleSubmissionFailure';\nexport type { TransactionsBatchSubmissionResult } from './models/TransactionsBatchSubmissionResult';\nexport type { TransactionSignature } from './models/TransactionSignature';\nexport type { TransactionSignature_Ed25519Signature } from './models/TransactionSignature_Ed25519Signature';\nexport type { TransactionSignature_MultiAgentSignature } from './models/TransactionSignature_MultiAgentSignature';\nexport type { TransactionSignature_MultiEd25519Signature } from './models/TransactionSignature_MultiEd25519Signature';\nexport type { U128 } from './models/U128';\nexport type { U256 } from './models/U256';\nexport type { U64 } from './models/U64';\nexport type { UserTransaction } from './models/UserTransaction';\nexport type { VersionedEvent } from './models/VersionedEvent';\nexport type { ViewRequest } from './models/ViewRequest';\nexport type { WriteModule } from './models/WriteModule';\nexport type { WriteResource } from './models/WriteResource';\nexport type { WriteSet } from './models/WriteSet';\nexport type { WriteSet_DirectWriteSet } from './models/WriteSet_DirectWriteSet';\nexport type { WriteSet_ScriptWriteSet } from './models/WriteSet_ScriptWriteSet';\nexport type { WriteSetChange } from './models/WriteSetChange';\nexport type { WriteSetChange_DeleteModule } from './models/WriteSetChange_DeleteModule';\nexport type { WriteSetChange_DeleteResource } from './models/WriteSetChange_DeleteResource';\nexport type { WriteSetChange_DeleteTableItem } from './models/WriteSetChange_DeleteTableItem';\nexport type { WriteSetChange_WriteModule } from './models/WriteSetChange_WriteModule';\nexport type { WriteSetChange_WriteResource } from './models/WriteSetChange_WriteResource';\nexport type { WriteSetChange_WriteTableItem } from './models/WriteSetChange_WriteTableItem';\nexport type { WriteSetPayload } from './models/WriteSetPayload';\nexport type { WriteTableItem } from './models/WriteTableItem';\n\nexport { $AccountData } from './schemas/$AccountData';\nexport { $AccountSignature } from './schemas/$AccountSignature';\nexport { $AccountSignature_Ed25519Signature } from './schemas/$AccountSignature_Ed25519Signature';\nexport { $AccountSignature_MultiEd25519Signature } from './schemas/$AccountSignature_MultiEd25519Signature';\nexport { $Address } from './schemas/$Address';\nexport { $AptosError } from './schemas/$AptosError';\nexport { $AptosErrorCode } from './schemas/$AptosErrorCode';\nexport { $Block } from './schemas/$Block';\nexport { $BlockMetadataTransaction } from './schemas/$BlockMetadataTransaction';\nexport { $DecodedTableData } from './schemas/$DecodedTableData';\nexport { $DeletedTableData } from './schemas/$DeletedTableData';\nexport { $DeleteModule } from './schemas/$DeleteModule';\nexport { $DeleteResource } from './schemas/$DeleteResource';\nexport { $DeleteTableItem } from './schemas/$DeleteTableItem';\nexport { $DirectWriteSet } from './schemas/$DirectWriteSet';\nexport { $Ed25519Signature } from './schemas/$Ed25519Signature';\nexport { $EncodeSubmissionRequest } from './schemas/$EncodeSubmissionRequest';\nexport { $EntryFunctionId } from './schemas/$EntryFunctionId';\nexport { $EntryFunctionPayload } from './schemas/$EntryFunctionPayload';\nexport { $Event } from './schemas/$Event';\nexport { $EventGuid } from './schemas/$EventGuid';\nexport { $GasEstimation } from './schemas/$GasEstimation';\nexport { $GenesisPayload } from './schemas/$GenesisPayload';\nexport { $GenesisPayload_WriteSetPayload } from './schemas/$GenesisPayload_WriteSetPayload';\nexport { $GenesisTransaction } from './schemas/$GenesisTransaction';\nexport { $HashValue } from './schemas/$HashValue';\nexport { $HealthCheckSuccess } from './schemas/$HealthCheckSuccess';\nexport { $HexEncodedBytes } from './schemas/$HexEncodedBytes';\nexport { $IdentifierWrapper } from './schemas/$IdentifierWrapper';\nexport { $IndexResponse } from './schemas/$IndexResponse';\nexport { $ModuleBundlePayload } from './schemas/$ModuleBundlePayload';\nexport { $MoveAbility } from './schemas/$MoveAbility';\nexport { $MoveFunction } from './schemas/$MoveFunction';\nexport { $MoveFunctionGenericTypeParam } from './schemas/$MoveFunctionGenericTypeParam';\nexport { $MoveFunctionVisibility } from './schemas/$MoveFunctionVisibility';\nexport { $MoveModule } from './schemas/$MoveModule';\nexport { $MoveModuleBytecode } from './schemas/$MoveModuleBytecode';\nexport { $MoveModuleId } from './schemas/$MoveModuleId';\nexport { $MoveResource } from './schemas/$MoveResource';\nexport { $MoveScriptBytecode } from './schemas/$MoveScriptBytecode';\nexport { $MoveStruct } from './schemas/$MoveStruct';\nexport { $MoveStructField } from './schemas/$MoveStructField';\nexport { $MoveStructGenericTypeParam } from './schemas/$MoveStructGenericTypeParam';\nexport { $MoveStructTag } from './schemas/$MoveStructTag';\nexport { $MoveStructValue } from './schemas/$MoveStructValue';\nexport { $MoveType } from './schemas/$MoveType';\nexport { $MoveValue } from './schemas/$MoveValue';\nexport { $MultiAgentSignature } from './schemas/$MultiAgentSignature';\nexport { $MultiEd25519Signature } from './schemas/$MultiEd25519Signature';\nexport { $MultisigPayload } from './schemas/$MultisigPayload';\nexport { $MultisigTransactionPayload } from './schemas/$MultisigTransactionPayload';\nexport { $PendingTransaction } from './schemas/$PendingTransaction';\nexport { $RawTableItemRequest } from './schemas/$RawTableItemRequest';\nexport { $RoleType } from './schemas/$RoleType';\nexport { $ScriptPayload } from './schemas/$ScriptPayload';\nexport { $ScriptWriteSet } from './schemas/$ScriptWriteSet';\nexport { $StateCheckpointTransaction } from './schemas/$StateCheckpointTransaction';\nexport { $StateKeyWrapper } from './schemas/$StateKeyWrapper';\nexport { $SubmitTransactionRequest } from './schemas/$SubmitTransactionRequest';\nexport { $TableItemRequest } from './schemas/$TableItemRequest';\nexport { $Transaction } from './schemas/$Transaction';\nexport { $Transaction_BlockMetadataTransaction } from './schemas/$Transaction_BlockMetadataTransaction';\nexport { $Transaction_GenesisTransaction } from './schemas/$Transaction_GenesisTransaction';\nexport { $Transaction_PendingTransaction } from './schemas/$Transaction_PendingTransaction';\nexport { $Transaction_StateCheckpointTransaction } from './schemas/$Transaction_StateCheckpointTransaction';\nexport { $Transaction_UserTransaction } from './schemas/$Transaction_UserTransaction';\nexport { $TransactionPayload } from './schemas/$TransactionPayload';\nexport { $TransactionPayload_EntryFunctionPayload } from './schemas/$TransactionPayload_EntryFunctionPayload';\nexport { $TransactionPayload_ModuleBundlePayload } from './schemas/$TransactionPayload_ModuleBundlePayload';\nexport { $TransactionPayload_MultisigPayload } from './schemas/$TransactionPayload_MultisigPayload';\nexport { $TransactionPayload_ScriptPayload } from './schemas/$TransactionPayload_ScriptPayload';\nexport { $TransactionsBatchSingleSubmissionFailure } from './schemas/$TransactionsBatchSingleSubmissionFailure';\nexport { $TransactionsBatchSubmissionResult } from './schemas/$TransactionsBatchSubmissionResult';\nexport { $TransactionSignature } from './schemas/$TransactionSignature';\nexport { $TransactionSignature_Ed25519Signature } from './schemas/$TransactionSignature_Ed25519Signature';\nexport { $TransactionSignature_MultiAgentSignature } from './schemas/$TransactionSignature_MultiAgentSignature';\nexport { $TransactionSignature_MultiEd25519Signature } from './schemas/$TransactionSignature_MultiEd25519Signature';\nexport { $U128 } from './schemas/$U128';\nexport { $U256 } from './schemas/$U256';\nexport { $U64 } from './schemas/$U64';\nexport { $UserTransaction } from './schemas/$UserTransaction';\nexport { $VersionedEvent } from './schemas/$VersionedEvent';\nexport { $ViewRequest } from './schemas/$ViewRequest';\nexport { $WriteModule } from './schemas/$WriteModule';\nexport { $WriteResource } from './schemas/$WriteResource';\nexport { $WriteSet } from './schemas/$WriteSet';\nexport { $WriteSet_DirectWriteSet } from './schemas/$WriteSet_DirectWriteSet';\nexport { $WriteSet_ScriptWriteSet } from './schemas/$WriteSet_ScriptWriteSet';\nexport { $WriteSetChange } from './schemas/$WriteSetChange';\nexport { $WriteSetChange_DeleteModule } from './schemas/$WriteSetChange_DeleteModule';\nexport { $WriteSetChange_DeleteResource } from './schemas/$WriteSetChange_DeleteResource';\nexport { $WriteSetChange_DeleteTableItem } from './schemas/$WriteSetChange_DeleteTableItem';\nexport { $WriteSetChange_WriteModule } from './schemas/$WriteSetChange_WriteModule';\nexport { $WriteSetChange_WriteResource } from './schemas/$WriteSetChange_WriteResource';\nexport { $WriteSetChange_WriteTableItem } from './schemas/$WriteSetChange_WriteTableItem';\nexport { $WriteSetPayload } from './schemas/$WriteSetPayload';\nexport { $WriteTableItem } from './schemas/$WriteTableItem';\n\nexport { AccountsService } from './services/AccountsService';\nexport { BlocksService } from './services/BlocksService';\nexport { EventsService } from './services/EventsService';\nexport { GeneralService } from './services/GeneralService';\nexport { TablesService } from './services/TablesService';\nexport { TransactionsService } from './services/TransactionsService';\nexport { ViewService } from './services/ViewService';\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport abstract class BaseHttpRequest {\n\n    constructor(public readonly config: OpenAPIConfig) {}\n\n    public abstract request<T>(options: ApiRequestOptions): CancelablePromise<T>;\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport axios from 'axios';\nimport type { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport FormData from 'form-data';\n\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\ninterface Cookie {\n  name: string;\n  value: string;\n  expires?: Date;\n  path?: string;\n  sameSite?: \"Lax\" | \"None\" | \"Strict\";\n  secure?: boolean;\n}\n\nclass CookieJar {\n  constructor(private jar = new Map<string, Cookie[]>()) {}\n\n  setCookie(url: URL, cookieStr: string) {\n    const key = url.origin.toLowerCase();\n    if (!this.jar.has(key)) {\n      this.jar.set(key, []);\n    }\n\n    const cookie = CookieJar.parse(cookieStr);\n    this.jar.set(key, [...(this.jar.get(key)?.filter((c) => c.name !== cookie.name) || []), cookie]);\n  }\n\n  getCookies(url: URL): Cookie[] {\n    const key = url.origin.toLowerCase();\n    if (!this.jar.get(key)) {\n      return [];\n    }\n\n    // Filter out expired cookies\n    return this.jar.get(key)?.filter((cookie) => !cookie.expires || cookie.expires > new Date()) || [];\n  }\n\n  static parse(str: string): Cookie {\n    if (typeof str !== \"string\") {\n      throw new Error(\"argument str must be a string\");\n    }\n\n    const parts = str.split(\";\").map((part) => part.trim());\n\n    let cookie: Cookie;\n\n    if (parts.length > 0) {\n      const [name, value] = parts[0].split(\"=\");\n      if (!name || !value) {\n        throw new Error(\"Invalid cookie\");\n      }\n\n      cookie = {\n        name,\n        value,\n      };\n    } else {\n      throw new Error(\"Invalid cookie\");\n    }\n\n    parts.slice(1).forEach((part) => {\n      const [name, value] = part.split(\"=\");\n      if (!name.trim()) {\n        throw new Error(\"Invalid cookie\");\n      }\n\n      const nameLow = name.toLowerCase();\n      // eslint-disable-next-line quotes\n      const val = value?.charAt(0) === \"'\" || value?.charAt(0) === '\"' ? value?.slice(1, -1) : value;\n      if (nameLow === \"expires\") {\n        cookie.expires = new Date(val);\n      }\n      if (nameLow === \"path\") {\n        cookie.path = val;\n      }\n      if (nameLow === \"samesite\") {\n        if (val !== \"Lax\" && val !== \"None\" && val !== \"Strict\") {\n          throw new Error(\"Invalid cookie SameSite value\");\n        }\n        cookie.sameSite = val;\n      }\n      if (nameLow === \"secure\") {\n        cookie.secure = true;\n      }\n    });\n\n    return cookie;\n  }\n}\n\nconst jar = new CookieJar();\n\naxios.interceptors.response.use((response) => {\n  if (Array.isArray(response.headers[\"set-cookie\"])) {\n    response.headers[\"set-cookie\"].forEach((c) => {\n      jar.setCookie(new URL(response.config.url!), c);\n    });\n  }\n  return response;\n});\n\naxios.interceptors.request.use(function (config) {\n  const cookies = jar.getCookies(new URL(config.url!));\n\n  if (cookies?.length > 0 && config.headers) {\n    config.headers.cookie = cookies.map((cookie) => `${cookie.name}=${cookie.value}`).join(\"; \");\n  }\n  return config;\n});\n\nconst isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nconst isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nconst isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nconst isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nconst isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nconst isSuccess = (status: number): boolean => {\n    return status >= 200 && status < 300;\n};\n\nconst base64 = (str: string): string => { return btoa(str); };\n\nconst getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nconst getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nconst resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nconst getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions, formData?: FormData): Promise<Record<string, string>> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n    const formHeaders = typeof formData?.getHeaders === 'function' && formData?.getHeaders() || {}\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n        ...formHeaders,\n    })\n    .filter(([_, value]) => isDefined(value))\n    .reduce((headers, [key, value]) => ({\n        ...headers,\n        [key]: String(value),\n    }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return headers;\n};\n\nconst getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body) {\n        return options.body;\n    }\n    return undefined;\n};\n\nconst sendRequest = async <T>(\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Record<string, string>,\n    onCancel: OnCancel\n): Promise<AxiosResponse<T>> => {\n    const source = axios.CancelToken.source();\n\n    const requestConfig: AxiosRequestConfig = {\n        url,\n        headers,\n        data: body ?? formData,\n        method: options.method,\n        withCredentials: config.WITH_CREDENTIALS,\n        cancelToken: source.token,\n    };\n\n    const isBCS = Object.keys(config.HEADERS || {})\n    .filter((k) => k.toLowerCase() === \"accept\")\n    .map((k) => (config.HEADERS as Record<string, string>)[k])\n    .includes(\"application/x-bcs\");\n  if (isBCS) {\n    requestConfig.responseType = \"arraybuffer\";\n  }\n\n    onCancel(() => source.cancel('The user aborted a request.'));\n\n    try {\n        return await axios.request(requestConfig);\n    } catch (error) {\n        const axiosError = error as AxiosError<T>;\n        if (axiosError.response) {\n            return axiosError.response;\n        }\n        throw error;\n    }\n};\n\nconst getResponseHeader = (response: AxiosResponse<any>, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers[responseHeader];\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nconst getResponseBody = (response: AxiosResponse<any>): any => {\n    if (response.status !== 204) {\n        return response.data;\n    }\n    return undefined;\n};\n\nconst catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        429: 'Too Many Requests',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        throw new ApiError(options, result, 'Generic Error');\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options, formData);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest<T>(config, options, url, body, formData, headers, onCancel);\n                const responseBody = getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: isSuccess(response.status),\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                // Attach the response headers to the output. This is a hack to fix\n                // https://github.com/ferdikoomen/openapi-typescript-codegen/issues/1295\n                const out = result.body;\n                try {\n                    out[\"__headers\"] = response.headers;\n                } catch (_) {}\n\n                resolve(out);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    readonly [Symbol.toStringTag]!: string;\n\n    private _isResolved: boolean;\n    private _isRejected: boolean;\n    private _isCancelled: boolean;\n    private readonly _cancelHandlers: (() => void)[];\n    private readonly _promise: Promise<T>;\n    private _resolve?: (value: T | PromiseLike<T>) => void;\n    private _reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this._isResolved = false;\n        this._isRejected = false;\n        this._isCancelled = false;\n        this._cancelHandlers = [];\n        this._promise = new Promise<T>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isResolved = true;\n                this._resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isRejected = true;\n                this._reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this._isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this._isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this._isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this._promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this._promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this._promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n            return;\n        }\n        this._isCancelled = true;\n        if (this._cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this._cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this._cancelHandlers.length = 0;\n        this._reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this._isCancelled;\n    }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport { BaseHttpRequest } from './BaseHttpRequest';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\nimport { request as __request } from './request';\n\nexport class AxiosHttpRequest extends BaseHttpRequest {\n\n    constructor(config: OpenAPIConfig) {\n        super(config);\n    }\n\n    /**\n     * Request method\n     * @param options The request options from the service\n     * @returns CancelablePromise<T>\n     * @throws ApiError\n     */\n    public request<T>(options: ApiRequestOptions): CancelablePromise<T> {\n        return __request(this.config, options);\n    }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AccountData } from '../models/AccountData';\nimport type { Address } from '../models/Address';\nimport type { IdentifierWrapper } from '../models/IdentifierWrapper';\nimport type { MoveModuleBytecode } from '../models/MoveModuleBytecode';\nimport type { MoveResource } from '../models/MoveResource';\nimport type { MoveStructTag } from '../models/MoveStructTag';\nimport type { StateKeyWrapper } from '../models/StateKeyWrapper';\nimport type { U64 } from '../models/U64';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class AccountsService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get account\n     * Return the authentication key and the sequence number for an account\n     * address. Optionally, a ledger version can be specified. If the ledger\n     * version is not specified in the request, the latest ledger version is used.\n     * @param address Address of account with or without a `0x` prefix\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns AccountData\n     * @throws ApiError\n     */\n    public getAccount(\n        address: Address,\n        ledgerVersion?: U64,\n    ): CancelablePromise<AccountData> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}',\n            path: {\n                'address': address,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n        });\n    }\n\n    /**\n     * Get account resources\n     * Retrieves all account resources for a given account and a specific ledger version.  If the\n     * ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @param start Cursor specifying where to start for pagination\n     *\n     * This cursor cannot be derived manually client-side. Instead, you must\n     * call this endpoint once without this query parameter specified, and\n     * then use the cursor returned in the X-Aptos-Cursor header in the\n     * response.\n     * @param limit Max number of account resources to retrieve\n     *\n     * If not provided, defaults to default page size.\n     * @returns MoveResource\n     * @throws ApiError\n     */\n    public getAccountResources(\n        address: Address,\n        ledgerVersion?: U64,\n        start?: StateKeyWrapper,\n        limit?: number,\n    ): CancelablePromise<Array<MoveResource>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/resources',\n            path: {\n                'address': address,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Get account modules\n     * Retrieves all account modules' bytecode for a given account at a specific ledger version.\n     * If the ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @param start Cursor specifying where to start for pagination\n     *\n     * This cursor cannot be derived manually client-side. Instead, you must\n     * call this endpoint once without this query parameter specified, and\n     * then use the cursor returned in the X-Aptos-Cursor header in the\n     * response.\n     * @param limit Max number of account modules to retrieve\n     *\n     * If not provided, defaults to default page size.\n     * @returns MoveModuleBytecode\n     * @throws ApiError\n     */\n    public getAccountModules(\n        address: Address,\n        ledgerVersion?: U64,\n        start?: StateKeyWrapper,\n        limit?: number,\n    ): CancelablePromise<Array<MoveModuleBytecode>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/modules',\n            path: {\n                'address': address,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Get account resource\n     * Retrieves an individual resource from a given account and at a specific ledger version. If the\n     * ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param resourceType Name of struct to retrieve e.g. `0x1::account::Account`\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveResource\n     * @throws ApiError\n     */\n    public getAccountResource(\n        address: Address,\n        resourceType: MoveStructTag,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveResource> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/resource/{resource_type}',\n            path: {\n                'address': address,\n                'resource_type': resourceType,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n        });\n    }\n\n    /**\n     * Get account module\n     * Retrieves an individual module from a given account and at a specific ledger version. If the\n     * ledger version is not specified in the request, the latest ledger version is used.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param address Address of account with or without a `0x` prefix\n     * @param moduleName Name of module to retrieve e.g. `coin`\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveModuleBytecode\n     * @throws ApiError\n     */\n    public getAccountModule(\n        address: Address,\n        moduleName: IdentifierWrapper,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveModuleBytecode> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/module/{module_name}',\n            path: {\n                'address': address,\n                'module_name': moduleName,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Block } from '../models/Block';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class BlocksService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get blocks by height\n     * This endpoint allows you to get the transactions in a block\n     * and the corresponding block information.\n     *\n     * Transactions are limited by max default transactions size.  If not all transactions\n     * are present, the user will need to query for the rest of the transactions via the\n     * get transactions API.\n     *\n     * If the block is pruned, it will return a 410\n     * @param blockHeight Block height to lookup.  Starts at 0\n     * @param withTransactions If set to true, include all transactions in the block\n     *\n     * If not provided, no transactions will be retrieved\n     * @returns Block\n     * @throws ApiError\n     */\n    public getBlockByHeight(\n        blockHeight: number,\n        withTransactions?: boolean,\n    ): CancelablePromise<Block> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/blocks/by_height/{block_height}',\n            path: {\n                'block_height': blockHeight,\n            },\n            query: {\n                'with_transactions': withTransactions,\n            },\n        });\n    }\n\n    /**\n     * Get blocks by version\n     * This endpoint allows you to get the transactions in a block\n     * and the corresponding block information given a version in the block.\n     *\n     * Transactions are limited by max default transactions size.  If not all transactions\n     * are present, the user will need to query for the rest of the transactions via the\n     * get transactions API.\n     *\n     * If the block has been pruned, it will return a 410\n     * @param version Ledger version to lookup block information for.\n     * @param withTransactions If set to true, include all transactions in the block\n     *\n     * If not provided, no transactions will be retrieved\n     * @returns Block\n     * @throws ApiError\n     */\n    public getBlockByVersion(\n        version: number,\n        withTransactions?: boolean,\n    ): CancelablePromise<Block> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/blocks/by_version/{version}',\n            path: {\n                'version': version,\n            },\n            query: {\n                'with_transactions': withTransactions,\n            },\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Address } from '../models/Address';\nimport type { IdentifierWrapper } from '../models/IdentifierWrapper';\nimport type { MoveStructTag } from '../models/MoveStructTag';\nimport type { U64 } from '../models/U64';\nimport type { VersionedEvent } from '../models/VersionedEvent';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class EventsService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get events by creation number\n     * Event types are globally identifiable by an account `address` and\n     * monotonically increasing `creation_number`, one per event type emitted\n     * to the given account. This API returns events corresponding to that\n     * that event type.\n     * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix, for\n     * which events are queried. This refers to the account that events were\n     * emitted to, not the account hosting the move module that emits that\n     * event type.\n     * @param creationNumber Creation number corresponding to the event stream originating\n     * from the given account.\n     * @param start Starting sequence number of events.\n     *\n     * If unspecified, by default will retrieve the most recent events\n     * @param limit Max number of events to retrieve.\n     *\n     * If unspecified, defaults to default page size\n     * @returns VersionedEvent\n     * @throws ApiError\n     */\n    public getEventsByCreationNumber(\n        address: Address,\n        creationNumber: U64,\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<VersionedEvent>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/events/{creation_number}',\n            path: {\n                'address': address,\n                'creation_number': creationNumber,\n            },\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Get events by event handle\n     * This API uses the given account `address`, `eventHandle`, and `fieldName`\n     * to build a key that can globally identify an event types. It then uses this\n     * key to return events emitted to the given account matching that event type.\n     * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix, for\n     * which events are queried. This refers to the account that events were\n     * emitted to, not the account hosting the move module that emits that\n     * event type.\n     * @param eventHandle Name of struct to lookup event handle e.g. `0x1::account::Account`\n     * @param fieldName Name of field to lookup event handle e.g. `withdraw_events`\n     * @param start Starting sequence number of events.\n     *\n     * If unspecified, by default will retrieve the most recent\n     * @param limit Max number of events to retrieve.\n     *\n     * If unspecified, defaults to default page size\n     * @returns VersionedEvent\n     * @throws ApiError\n     */\n    public getEventsByEventHandle(\n        address: Address,\n        eventHandle: MoveStructTag,\n        fieldName: IdentifierWrapper,\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<VersionedEvent>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/events/{event_handle}/{field_name}',\n            path: {\n                'address': address,\n                'event_handle': eventHandle,\n                'field_name': fieldName,\n            },\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { HealthCheckSuccess } from '../models/HealthCheckSuccess';\nimport type { IndexResponse } from '../models/IndexResponse';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class GeneralService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Show OpenAPI explorer\n     * Provides a UI that you can use to explore the API. You can also\n     * retrieve the API directly at `/spec.yaml` and `/spec.json`.\n     * @returns string\n     * @throws ApiError\n     */\n    public spec(): CancelablePromise<string> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/spec',\n        });\n    }\n\n    /**\n     * Check basic node health\n     * By default this endpoint just checks that it can get the latest ledger\n     * info and then returns 200.\n     *\n     * If the duration_secs param is provided, this endpoint will return a\n     * 200 if the following condition is true:\n     *\n     * `server_latest_ledger_info_timestamp >= server_current_time_timestamp - duration_secs`\n     * @param durationSecs Threshold in seconds that the server can be behind to be considered healthy\n     *\n     * If not provided, the healthcheck will always succeed\n     * @returns HealthCheckSuccess\n     * @throws ApiError\n     */\n    public healthy(\n        durationSecs?: number,\n    ): CancelablePromise<HealthCheckSuccess> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/-/healthy',\n            query: {\n                'duration_secs': durationSecs,\n            },\n        });\n    }\n\n    /**\n     * Get ledger info\n     * Get the latest ledger information, including data such as chain ID,\n     * role type, ledger versions, epoch, etc.\n     * @returns IndexResponse\n     * @throws ApiError\n     */\n    public getLedgerInfo(): CancelablePromise<IndexResponse> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Address } from '../models/Address';\nimport type { MoveValue } from '../models/MoveValue';\nimport type { RawTableItemRequest } from '../models/RawTableItemRequest';\nimport type { TableItemRequest } from '../models/TableItemRequest';\nimport type { U64 } from '../models/U64';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class TablesService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get table item\n     * Get a table item at a specific ledger version from the table identified by {table_handle}\n     * in the path and the \"key\" (TableItemRequest) provided in the request body.\n     *\n     * This is a POST endpoint because the \"key\" for requesting a specific\n     * table item (TableItemRequest) could be quite complex, as each of its\n     * fields could themselves be composed of other structs. This makes it\n     * impractical to express using query params, meaning GET isn't an option.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param tableHandle Table handle hex encoded 32-byte string\n     * @param requestBody\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveValue\n     * @throws ApiError\n     */\n    public getTableItem(\n        tableHandle: Address,\n        requestBody: TableItemRequest,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveValue> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/tables/{table_handle}/item',\n            path: {\n                'table_handle': tableHandle,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Get raw table item\n     * Get a table item at a specific ledger version from the table identified by {table_handle}\n     * in the path and the \"key\" (RawTableItemRequest) provided in the request body.\n     *\n     * The `get_raw_table_item` requires only a serialized key comparing to the full move type information\n     * comparing to the `get_table_item` api, and can only return the query in the bcs format.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param tableHandle Table handle hex encoded 32-byte string\n     * @param requestBody\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveValue\n     * @throws ApiError\n     */\n    public getRawTableItem(\n        tableHandle: Address,\n        requestBody: RawTableItemRequest,\n        ledgerVersion?: U64,\n    ): CancelablePromise<MoveValue> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/tables/{table_handle}/raw_item',\n            path: {\n                'table_handle': tableHandle,\n            },\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Address } from '../models/Address';\nimport type { EncodeSubmissionRequest } from '../models/EncodeSubmissionRequest';\nimport type { GasEstimation } from '../models/GasEstimation';\nimport type { HashValue } from '../models/HashValue';\nimport type { HexEncodedBytes } from '../models/HexEncodedBytes';\nimport type { PendingTransaction } from '../models/PendingTransaction';\nimport type { SubmitTransactionRequest } from '../models/SubmitTransactionRequest';\nimport type { Transaction } from '../models/Transaction';\nimport type { TransactionsBatchSubmissionResult } from '../models/TransactionsBatchSubmissionResult';\nimport type { U64 } from '../models/U64';\nimport type { UserTransaction } from '../models/UserTransaction';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class TransactionsService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Get transactions\n     * Retrieve on-chain committed transactions. The page size and start ledger version\n     * can be provided to get a specific sequence of transactions.\n     *\n     * If the version has been pruned, then a 410 will be returned.\n     *\n     * To retrieve a pending transaction, use /transactions/by_hash.\n     * @param start Ledger version to start list of transactions\n     *\n     * If not provided, defaults to showing the latest transactions\n     * @param limit Max number of transactions to retrieve.\n     *\n     * If not provided, defaults to default page size\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getTransactions(\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<Transaction>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/transactions',\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Submit transaction\n     * This endpoint accepts transaction submissions in two formats.\n     *\n     * To submit a transaction as JSON, you must submit a SubmitTransactionRequest.\n     * To build this request, do the following:\n     *\n     * 1. Encode the transaction as BCS. If you are using a language that has\n     * native BCS support, make sure of that library. If not, you may take\n     * advantage of /transactions/encode_submission. When using this\n     * endpoint, make sure you trust the node you're talking to, as it is\n     * possible they could manipulate your request.\n     * 2. Sign the encoded transaction and use it to create a TransactionSignature.\n     * 3. Submit the request. Make sure to use the \"application/json\" Content-Type.\n     *\n     * To submit a transaction as BCS, you must submit a SignedTransaction\n     * encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n     * Make sure to use the `application/x.aptos.signed_transaction+bcs` Content-Type.\n     * @param requestBody\n     * @returns PendingTransaction\n     * @throws ApiError\n     */\n    public submitTransaction(\n        requestBody: SubmitTransactionRequest,\n    ): CancelablePromise<PendingTransaction> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Get transaction by hash\n     * Look up a transaction by its hash. This is the same hash that is returned\n     * by the API when submitting a transaction (see PendingTransaction).\n     *\n     * When given a transaction hash, the server first looks for the transaction\n     * in storage (on-chain, committed). If no on-chain transaction is found, it\n     * looks the transaction up by hash in the mempool (pending, not yet committed).\n     *\n     * To create a transaction hash by yourself, do the following:\n     * 1. Hash message bytes: \"RawTransaction\" bytes + BCS bytes of [Transaction](https://aptos-labs.github.io/aptos-core/aptos_types/transaction/enum.Transaction.html).\n     * 2. Apply hash algorithm `SHA3-256` to the hash message bytes.\n     * 3. Hex-encode the hash bytes with `0x` prefix.\n     * @param txnHash Hash of transaction to retrieve\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getTransactionByHash(\n        txnHash: HashValue,\n    ): CancelablePromise<Transaction> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/transactions/by_hash/{txn_hash}',\n            path: {\n                'txn_hash': txnHash,\n            },\n        });\n    }\n\n    /**\n     * Get transaction by version\n     * Retrieves a transaction by a given version. If the version has been\n     * pruned, a 410 will be returned.\n     * @param txnVersion Version of transaction to retrieve\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getTransactionByVersion(\n        txnVersion: U64,\n    ): CancelablePromise<Transaction> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/transactions/by_version/{txn_version}',\n            path: {\n                'txn_version': txnVersion,\n            },\n        });\n    }\n\n    /**\n     * Get account transactions\n     * Retrieves on-chain committed transactions from an account. If the start\n     * version is too far in the past, a 410 will be returned.\n     *\n     * If no start version is given, it will start at version 0.\n     *\n     * To retrieve a pending transaction, use /transactions/by_hash.\n     * @param address Address of account with or without a `0x` prefix\n     * @param start Account sequence number to start list of transactions\n     *\n     * If not provided, defaults to showing the latest transactions\n     * @param limit Max number of transactions to retrieve.\n     *\n     * If not provided, defaults to default page size\n     * @returns Transaction\n     * @throws ApiError\n     */\n    public getAccountTransactions(\n        address: Address,\n        start?: U64,\n        limit?: number,\n    ): CancelablePromise<Array<Transaction>> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/accounts/{address}/transactions',\n            path: {\n                'address': address,\n            },\n            query: {\n                'start': start,\n                'limit': limit,\n            },\n        });\n    }\n\n    /**\n     * Submit batch transactions\n     * This allows you to submit multiple transactions.  The response has three outcomes:\n     *\n     * 1. All transactions succeed, and it will return a 202\n     * 2. Some transactions succeed, and it will return the failed transactions and a 206\n     * 3. No transactions succeed, and it will also return the failed transactions and a 206\n     *\n     * To submit a transaction as JSON, you must submit a SubmitTransactionRequest.\n     * To build this request, do the following:\n     *\n     * 1. Encode the transaction as BCS. If you are using a language that has\n     * native BCS support, make sure to use that library. If not, you may take\n     * advantage of /transactions/encode_submission. When using this\n     * endpoint, make sure you trust the node you're talking to, as it is\n     * possible they could manipulate your request.\n     * 2. Sign the encoded transaction and use it to create a TransactionSignature.\n     * 3. Submit the request. Make sure to use the \"application/json\" Content-Type.\n     *\n     * To submit a transaction as BCS, you must submit a SignedTransaction\n     * encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n     * Make sure to use the `application/x.aptos.signed_transaction+bcs` Content-Type.\n     * @param requestBody\n     * @returns TransactionsBatchSubmissionResult\n     * @throws ApiError\n     */\n    public submitBatchTransactions(\n        requestBody: Array<SubmitTransactionRequest>,\n    ): CancelablePromise<TransactionsBatchSubmissionResult> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions/batch',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Simulate transaction\n     * The output of the transaction will have the exact transaction outputs and events that running\n     * an actual signed transaction would have.  However, it will not have the associated state\n     * hashes, as they are not updated in storage.  This can be used to estimate the maximum gas\n     * units for a submitted transaction.\n     *\n     * To use this, you must:\n     * - Create a SignedTransaction with a zero-padded signature.\n     * - Submit a SubmitTransactionRequest containing a UserTransactionRequest containing that signature.\n     *\n     * To use this endpoint with BCS, you must submit a SignedTransaction\n     * encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n     * @param requestBody\n     * @param estimateMaxGasAmount If set to true, the max gas value in the transaction will be ignored\n     * and the maximum possible gas will be used\n     * @param estimateGasUnitPrice If set to true, the gas unit price in the transaction will be ignored\n     * and the estimated value will be used\n     * @param estimatePrioritizedGasUnitPrice If set to true, the transaction will use a higher price than the original\n     * estimate.\n     * @returns UserTransaction\n     * @throws ApiError\n     */\n    public simulateTransaction(\n        requestBody: SubmitTransactionRequest,\n        estimateMaxGasAmount?: boolean,\n        estimateGasUnitPrice?: boolean,\n        estimatePrioritizedGasUnitPrice?: boolean,\n    ): CancelablePromise<Array<UserTransaction>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions/simulate',\n            query: {\n                'estimate_max_gas_amount': estimateMaxGasAmount,\n                'estimate_gas_unit_price': estimateGasUnitPrice,\n                'estimate_prioritized_gas_unit_price': estimatePrioritizedGasUnitPrice,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Encode submission\n     * This endpoint accepts an EncodeSubmissionRequest, which internally is a\n     * UserTransactionRequestInner (and optionally secondary signers) encoded\n     * as JSON, validates the request format, and then returns that request\n     * encoded in BCS. The client can then use this to create a transaction\n     * signature to be used in a SubmitTransactionRequest, which it then\n     * passes to the /transactions POST endpoint.\n     *\n     * To be clear, this endpoint makes it possible to submit transaction\n     * requests to the API from languages that do not have library support for\n     * BCS. If you are using an SDK that has BCS support, such as the official\n     * Rust, TypeScript, or Python SDKs, you do not need to use this endpoint.\n     *\n     * To sign a message using the response from this endpoint:\n     * - Decode the hex encoded string in the response to bytes.\n     * - Sign the bytes to create the signature.\n     * - Use that as the signature field in something like Ed25519Signature, which you then use to build a TransactionSignature.\n     * @param requestBody\n     * @returns HexEncodedBytes\n     * @throws ApiError\n     */\n    public encodeSubmission(\n        requestBody: EncodeSubmissionRequest,\n    ): CancelablePromise<HexEncodedBytes> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/transactions/encode_submission',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Estimate gas price\n     * Currently, the gas estimation is handled by taking the median of the last 100,000 transactions\n     * If a user wants to prioritize their transaction and is willing to pay, they can pay more\n     * than the gas price.  If they're willing to wait longer, they can pay less.  Note that the\n     * gas price moves with the fee market, and should only increase when demand outweighs supply.\n     *\n     * If there have been no transactions in the last 100,000 transactions, the price will be 1.\n     * @returns GasEstimation\n     * @throws ApiError\n     */\n    public estimateGasPrice(): CancelablePromise<GasEstimation> {\n        return this.httpRequest.request({\n            method: 'GET',\n            url: '/estimate_gas_price',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { MoveValue } from '../models/MoveValue';\nimport type { U64 } from '../models/U64';\nimport type { ViewRequest } from '../models/ViewRequest';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class ViewService {\n\n    constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n    /**\n     * Execute view function of a module\n     * Execute the Move function with the given parameters and return its execution result.\n     *\n     * The Aptos nodes prune account state history, via a configurable time window.\n     * If the requested ledger version has been pruned, the server responds with a 410.\n     * @param requestBody\n     * @param ledgerVersion Ledger version to get state of account\n     *\n     * If not provided, it will be the latest version\n     * @returns MoveValue\n     * @throws ApiError\n     */\n    public view(\n        requestBody: ViewRequest,\n        ledgerVersion?: U64,\n    ): CancelablePromise<Array<MoveValue>> {\n        return this.httpRequest.request({\n            method: 'POST',\n            url: '/view',\n            query: {\n                'ledger_version': ledgerVersion,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseHttpRequest } from './core/BaseHttpRequest';\nimport type { OpenAPIConfig } from './core/OpenAPI';\nimport { AxiosHttpRequest } from './core/AxiosHttpRequest';\n\nimport { AccountsService } from './services/AccountsService';\nimport { BlocksService } from './services/BlocksService';\nimport { EventsService } from './services/EventsService';\nimport { GeneralService } from './services/GeneralService';\nimport { TablesService } from './services/TablesService';\nimport { TransactionsService } from './services/TransactionsService';\nimport { ViewService } from './services/ViewService';\n\ntype HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;\n\nexport class AptosGeneratedClient {\n\n    public readonly accounts: AccountsService;\n    public readonly blocks: BlocksService;\n    public readonly events: EventsService;\n    public readonly general: GeneralService;\n    public readonly tables: TablesService;\n    public readonly transactions: TransactionsService;\n    public readonly view: ViewService;\n\n    public readonly request: BaseHttpRequest;\n\n    constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {\n        this.request = new HttpRequest({\n            BASE: config?.BASE ?? '/v1',\n            VERSION: config?.VERSION ?? '1.2.0',\n            WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n            CREDENTIALS: config?.CREDENTIALS ?? 'include',\n            TOKEN: config?.TOKEN,\n            USERNAME: config?.USERNAME,\n            PASSWORD: config?.PASSWORD,\n            HEADERS: config?.HEADERS,\n            ENCODE_PATH: config?.ENCODE_PATH,\n        });\n\n        this.accounts = new AccountsService(this.request);\n        this.blocks = new BlocksService(this.request);\n        this.events = new EventsService(this.request);\n        this.general = new GeneralService(this.request);\n        this.tables = new TablesService(this.request);\n        this.transactions = new TransactionsService(this.request);\n        this.view = new ViewService(this.request);\n    }\n}\n\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string>;\n    USERNAME?: string | Resolver<string>;\n    PASSWORD?: string | Resolver<string>;\n    HEADERS?: Headers | Resolver<Headers>;\n    ENCODE_PATH?: (path: string) => string;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '/v1',\n    VERSION: '1.2.0',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\n/**\n * These codes provide more granular error information beyond just the HTTP\n * status code of the response.\n */\nexport enum AptosErrorCode {\n    ACCOUNT_NOT_FOUND = 'account_not_found',\n    RESOURCE_NOT_FOUND = 'resource_not_found',\n    MODULE_NOT_FOUND = 'module_not_found',\n    STRUCT_FIELD_NOT_FOUND = 'struct_field_not_found',\n    VERSION_NOT_FOUND = 'version_not_found',\n    TRANSACTION_NOT_FOUND = 'transaction_not_found',\n    TABLE_ITEM_NOT_FOUND = 'table_item_not_found',\n    BLOCK_NOT_FOUND = 'block_not_found',\n    VERSION_PRUNED = 'version_pruned',\n    BLOCK_PRUNED = 'block_pruned',\n    INVALID_INPUT = 'invalid_input',\n    INVALID_TRANSACTION_UPDATE = 'invalid_transaction_update',\n    SEQUENCE_NUMBER_TOO_OLD = 'sequence_number_too_old',\n    VM_ERROR = 'vm_error',\n    HEALTH_CHECK_FAILED = 'health_check_failed',\n    MEMPOOL_IS_FULL = 'mempool_is_full',\n    INTERNAL_ERROR = 'internal_error',\n    WEB_FRAMEWORK_ERROR = 'web_framework_error',\n    BCS_NOT_SUPPORTED = 'bcs_not_supported',\n    API_DISABLED = 'api_disabled',\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\n/**\n * Move function visibility\n */\nexport enum MoveFunctionVisibility {\n    PRIVATE = 'private',\n    PUBLIC = 'public',\n    FRIEND = 'friend',\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\nexport enum RoleType {\n    VALIDATOR = 'validator',\n    FULL_NODE = 'full_node',\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountData = {\n    description: `Account data\n\n    A simplified version of the onchain Account resource`,\n    properties: {\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        authentication_key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountSignature = {\n    type: 'one-of',\n    description: `Account signature scheme\n\n    The account signature scheme allows you to have two types of accounts:\n\n    1. A single Ed25519 key account, one private key\n    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.`,\n    contains: [{\n        type: 'AccountSignature_Ed25519Signature',\n    }, {\n        type: 'AccountSignature_MultiEd25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountSignature_Ed25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'Ed25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AccountSignature_MultiEd25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'MultiEd25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Address = {\n    type: 'string',\n    description: `A hex encoded 32 byte Aptos account address.\n\n    This is represented in a string as a 64 character hex string, sometimes\n    shortened by stripping leading 0s, and adding a 0x.\n\n    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.\n    `,\n    format: 'hex',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AptosError = {\n    description: `This is the generic struct we use for all API errors, it contains a string\n    message and an Aptos API specific error code.`,\n    properties: {\n        message: {\n            type: 'string',\n            description: `A message describing the error`,\n            isRequired: true,\n        },\n        error_code: {\n            type: 'AptosErrorCode',\n            isRequired: true,\n        },\n        vm_error_code: {\n            type: 'number',\n            description: `A code providing VM error details when submitting transactions to the VM`,\n            format: 'uint64',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $AptosErrorCode = {\n    type: 'Enum',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Block = {\n    description: `A Block with or without transactions\n\n    This contains the information about a transactions along with\n    associated transactions if requested`,\n    properties: {\n        block_height: {\n            type: 'U64',\n            isRequired: true,\n        },\n        block_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        block_timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n        first_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        last_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        transactions: {\n            type: 'array',\n            contains: {\n                type: 'Transaction',\n            },\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $BlockMetadataTransaction = {\n    description: `A block metadata transaction\n\n    This signifies the beginning of a block, and contains information\n    about the specific block`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        id: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        epoch: {\n            type: 'U64',\n            isRequired: true,\n        },\n        round: {\n            type: 'U64',\n            isRequired: true,\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n        previous_block_votes_bitvec: {\n            type: 'array',\n            contains: {\n                type: 'number',\n                format: 'uint8',\n            },\n            isRequired: true,\n        },\n        proposer: {\n            type: 'Address',\n            isRequired: true,\n        },\n        failed_proposer_indices: {\n            type: 'array',\n            contains: {\n                type: 'number',\n                format: 'uint32',\n            },\n            isRequired: true,\n        },\n        timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DecodedTableData = {\n    description: `Decoded table data`,\n    properties: {\n        key: {\n            description: `Key of table in JSON`,\n            properties: {\n            },\n            isRequired: true,\n        },\n        key_type: {\n            type: 'string',\n            description: `Type of key`,\n            isRequired: true,\n        },\n        value: {\n            description: `Value of table in JSON`,\n            properties: {\n            },\n            isRequired: true,\n        },\n        value_type: {\n            type: 'string',\n            description: `Type of value`,\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeletedTableData = {\n    description: `Deleted table data`,\n    properties: {\n        key: {\n            description: `Deleted key`,\n            properties: {\n            },\n            isRequired: true,\n        },\n        key_type: {\n            type: 'string',\n            description: `Deleted key type`,\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeleteModule = {\n    description: `Delete a module`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        module: {\n            type: 'MoveModuleId',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeleteResource = {\n    description: `Delete a resource`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        resource: {\n            type: 'MoveStructTag',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DeleteTableItem = {\n    description: `Delete a table item`,\n    properties: {\n        state_key_hash: {\n            type: 'string',\n            isRequired: true,\n        },\n        handle: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        data: {\n            type: 'DeletedTableData',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $DirectWriteSet = {\n    properties: {\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Ed25519Signature = {\n    description: `A single Ed25519 signature`,\n    properties: {\n        public_key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        signature: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EncodeSubmissionRequest = {\n    description: `Request to encode a submission`,\n    properties: {\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        secondary_signers: {\n            type: 'array',\n            contains: {\n                type: 'Address',\n            },\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EntryFunctionId = {\n    type: 'string',\n    description: `Entry function id is string representation of a entry function defined on-chain.\n\n    Format: \\`{address}::{module name}::{function name}\\`\n\n    Both \\`module name\\` and \\`function name\\` are case-sensitive.\n    `,\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EntryFunctionPayload = {\n    description: `Payload which runs a single entry function`,\n    properties: {\n        function: {\n            type: 'EntryFunctionId',\n            isRequired: true,\n        },\n        type_arguments: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        arguments: {\n            type: 'array',\n            contains: {\n                properties: {\n                },\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Event = {\n    description: `An event from a transaction`,\n    properties: {\n        guid: {\n            type: 'EventGuid',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        data: {\n            description: `The JSON representation of the event`,\n            properties: {\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $EventGuid = {\n    properties: {\n        creation_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        account_address: {\n            type: 'Address',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GasEstimation = {\n    description: `Struct holding the outputs of the estimate gas API`,\n    properties: {\n        deprioritized_gas_estimate: {\n            type: 'number',\n            description: `The deprioritized estimate for the gas unit price`,\n            format: 'uint64',\n        },\n        gas_estimate: {\n            type: 'number',\n            description: `The current estimate for the gas unit price`,\n            isRequired: true,\n            format: 'uint64',\n        },\n        prioritized_gas_estimate: {\n            type: 'number',\n            description: `The prioritized estimate for the gas unit price`,\n            format: 'uint64',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GenesisPayload = {\n    type: 'one-of',\n    description: `The writeset payload of the Genesis transaction`,\n    contains: [{\n        type: 'GenesisPayload_WriteSetPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GenesisPayload_WriteSetPayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteSetPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $GenesisTransaction = {\n    description: `The genesis transaction\n\n    This only occurs at the genesis transaction (version 0)`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        payload: {\n            type: 'GenesisPayload',\n            isRequired: true,\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $HashValue = {\n    type: 'string',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $HealthCheckSuccess = {\n    description: `Representation of a successful healthcheck`,\n    properties: {\n        message: {\n            type: 'string',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $HexEncodedBytes = {\n    type: 'string',\n    description: `All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with \\`0x\\` and fulfilled with\n    two hex digits per byte.\n\n    Unlike the \\`Address\\` type, HexEncodedBytes will not trim any zeros.\n    `,\n    format: 'hex',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $IdentifierWrapper = {\n    type: 'string',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $IndexResponse = {\n    description: `The struct holding all data returned to the client by the\n    index endpoint (i.e., GET \"/\").  Only for responding in JSON`,\n    properties: {\n        chain_id: {\n            type: 'number',\n            description: `Chain ID of the current chain`,\n            isRequired: true,\n            format: 'uint8',\n        },\n        epoch: {\n            type: 'U64',\n            isRequired: true,\n        },\n        ledger_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        oldest_ledger_version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        ledger_timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n        node_role: {\n            type: 'RoleType',\n            isRequired: true,\n        },\n        oldest_block_height: {\n            type: 'U64',\n            isRequired: true,\n        },\n        block_height: {\n            type: 'U64',\n            isRequired: true,\n        },\n        git_hash: {\n            type: 'string',\n            description: `Git hash of the build of the API endpoint.  Can be used to determine the exact\n            software version used by the API endpoint.`,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ModuleBundlePayload = {\n    properties: {\n        modules: {\n            type: 'array',\n            contains: {\n                type: 'MoveModuleBytecode',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveAbility = {\n    type: 'string',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveFunction = {\n    description: `Move function`,\n    properties: {\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        visibility: {\n            type: 'MoveFunctionVisibility',\n            isRequired: true,\n        },\n        is_entry: {\n            type: 'boolean',\n            description: `Whether the function can be called as an entry function directly in a transaction`,\n            isRequired: true,\n        },\n        is_view: {\n            type: 'boolean',\n            description: `Whether the function is a view function or not`,\n            isRequired: true,\n        },\n        generic_type_params: {\n            type: 'array',\n            contains: {\n                type: 'MoveFunctionGenericTypeParam',\n            },\n            isRequired: true,\n        },\n        params: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        return: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveFunctionGenericTypeParam = {\n    description: `Move function generic type param`,\n    properties: {\n        constraints: {\n            type: 'array',\n            contains: {\n                type: 'MoveAbility',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveFunctionVisibility = {\n    type: 'Enum',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveModule = {\n    description: `A Move module`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        friends: {\n            type: 'array',\n            contains: {\n                type: 'MoveModuleId',\n            },\n            isRequired: true,\n        },\n        exposed_functions: {\n            type: 'array',\n            contains: {\n                type: 'MoveFunction',\n            },\n            isRequired: true,\n        },\n        structs: {\n            type: 'array',\n            contains: {\n                type: 'MoveStruct',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveModuleBytecode = {\n    description: `Move module bytecode along with it's ABI`,\n    properties: {\n        bytecode: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        abi: {\n            type: 'MoveModule',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveModuleId = {\n    type: 'string',\n    description: `Move module id is a string representation of Move module.\n\n    Format: \\`{address}::{module name}\\`\n\n    \\`address\\` should be hex-encoded 32 byte account address that is prefixed with \\`0x\\`.\n\n    Module name is case-sensitive.\n    `,\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveResource = {\n    description: `A parsed Move resource`,\n    properties: {\n        type: {\n            type: 'MoveStructTag',\n            isRequired: true,\n        },\n        data: {\n            type: 'MoveStructValue',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveScriptBytecode = {\n    description: `Move script bytecode`,\n    properties: {\n        bytecode: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        abi: {\n            type: 'MoveFunction',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStruct = {\n    description: `A move struct`,\n    properties: {\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        is_native: {\n            type: 'boolean',\n            description: `Whether the struct is a native struct of Move`,\n            isRequired: true,\n        },\n        abilities: {\n            type: 'array',\n            contains: {\n                type: 'MoveAbility',\n            },\n            isRequired: true,\n        },\n        generic_type_params: {\n            type: 'array',\n            contains: {\n                type: 'MoveStructGenericTypeParam',\n            },\n            isRequired: true,\n        },\n        fields: {\n            type: 'array',\n            contains: {\n                type: 'MoveStructField',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructField = {\n    description: `Move struct field`,\n    properties: {\n        name: {\n            type: 'IdentifierWrapper',\n            isRequired: true,\n        },\n        type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructGenericTypeParam = {\n    description: `Move generic type param`,\n    properties: {\n        constraints: {\n            type: 'array',\n            contains: {\n                type: 'MoveAbility',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructTag = {\n    type: 'string',\n    description: `String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n    It is a combination of:\n    1. \\`move_module_address\\`, \\`module_name\\` and \\`struct_name\\`, all joined by \\`::\\`\n    2. \\`struct generic type parameters\\` joined by \\`, \\`\n\n    Examples:\n     * \\`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\\`\n     * \\`0x1::account::Account\\`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n    See [doc](https://aptos.dev/concepts/accounts) for more details.\n    `,\n    pattern: '^0x[0-9a-zA-Z:_<>]+$',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveStructValue = {\n    description: `This is a JSON representation of some data within an account resource. More specifically,\n    it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n    fields within the given resource.\n\n    To clarify, you might query for 0x1::account::Account and see the example data.\n\n    Move \\`bool\\` type value is serialized into \\`boolean\\`.\n\n    Move \\`u8\\`, \\`u16\\` and \\`u32\\` type value is serialized into \\`integer\\`.\n\n    Move \\`u64\\`, \\`u128\\` and \\`u256\\` type value is serialized into \\`string\\`.\n\n    Move \\`address\\` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n    For example:\n    - \\`0x1\\`\n    - \\`0x1668f6be25668c1a17cd8caf6b8d2f25\\`\n\n    Move \\`vector\\` type value is serialized into \\`array\\`, except \\`vector<u8>\\` which is serialized into a\n    HexEncodedBytes string with \\`0x\\` prefix.\n    For example:\n    - \\`vector<u64>{255, 255}\\` => \\`[\"255\", \"255\"]\\`\n    - \\`vector<u8>{255, 255}\\` => \\`0xffff\\`\n\n    Move \\`struct\\` type value is serialized into \\`object\\` that looks like this (except some Move stdlib types, see the following section):\n    \\`\\`\\`json\n    {\n        field1_name: field1_value,\n        field2_name: field2_value,\n        ......\n    }\n    \\`\\`\\`\n\n    For example:\n    \\`{ \"created\": \"0xa550c18\", \"role_id\": \"0\" }\\`\n\n     **Special serialization for Move stdlib types**:\n    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n    is serialized into \\`string\\`. For example, struct value \\`0x1::string::String{bytes: b\"Hello World!\"}\\`\n    is serialized as \\`\"Hello World!\"\\` in JSON.\n    `,\n    properties: {\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveType = {\n    type: 'string',\n    description: `String representation of an on-chain Move type tag that is exposed in transaction payload.\n    Values:\n    - bool\n    - u8\n    - u16\n    - u32\n    - u64\n    - u128\n    - u256\n    - address\n    - signer\n    - vector: \\`vector<{non-reference MoveTypeId}>\\`\n    - struct: \\`{address}::{module_name}::{struct_name}::<{generic types}>\\`\n\n    Vector type value examples:\n    - \\`vector<u8>\\`\n    - \\`vector<vector<u64>>\\`\n    - \\`vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>\\`\n\n    Struct type value examples:\n    - \\`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\n    - \\`0x1::account::Account\\`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n    `,\n    pattern: '^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MoveValue = {\n    type: 'any-of',\n    description: `An enum of the possible Move value types`,\n    contains: [{\n        type: 'number',\n        format: 'uint8',\n    }, {\n        type: 'number',\n        format: 'uint16',\n    }, {\n        type: 'number',\n        format: 'uint32',\n    }, {\n        type: 'U64',\n    }, {\n        type: 'U128',\n    }, {\n        type: 'U256',\n    }, {\n        type: 'boolean',\n    }, {\n        type: 'Address',\n    }, {\n        type: 'array',\n        contains: {\n            type: 'MoveValue',\n        },\n    }, {\n        type: 'HexEncodedBytes',\n    }, {\n        type: 'MoveStructValue',\n    }, {\n        type: 'string',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MultiAgentSignature = {\n    description: `Multi agent signature for multi agent transactions\n\n    This allows you to have transactions across multiple accounts`,\n    properties: {\n        sender: {\n            type: 'AccountSignature',\n            isRequired: true,\n        },\n        secondary_signer_addresses: {\n            type: 'array',\n            contains: {\n                type: 'Address',\n            },\n            isRequired: true,\n        },\n        secondary_signers: {\n            type: 'array',\n            contains: {\n                type: 'AccountSignature',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MultiEd25519Signature = {\n    description: `A Ed25519 multi-sig signature\n\n    This allows k-of-n signing for a transaction`,\n    properties: {\n        public_keys: {\n            type: 'array',\n            contains: {\n                type: 'HexEncodedBytes',\n            },\n            isRequired: true,\n        },\n        signatures: {\n            type: 'array',\n            contains: {\n                type: 'HexEncodedBytes',\n            },\n            isRequired: true,\n        },\n        threshold: {\n            type: 'number',\n            description: `The number of signatures required for a successful transaction`,\n            isRequired: true,\n            format: 'uint8',\n        },\n        bitmap: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MultisigPayload = {\n    description: `A multisig transaction that allows an owner of a multisig account to execute a pre-approved\n    transaction as the multisig account.`,\n    properties: {\n        multisig_address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        transaction_payload: {\n            type: 'MultisigTransactionPayload',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $MultisigTransactionPayload = {\n    type: 'any-of',\n    contains: [{\n        type: 'EntryFunctionPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $PendingTransaction = {\n    description: `A transaction waiting in mempool`,\n    properties: {\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        signature: {\n            type: 'TransactionSignature',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $RawTableItemRequest = {\n    description: `Table Item request for the GetTableItemRaw API`,\n    properties: {\n        key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $RoleType = {\n    type: 'Enum',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ScriptPayload = {\n    description: `Payload which runs a script that can run multiple functions`,\n    properties: {\n        code: {\n            type: 'MoveScriptBytecode',\n            isRequired: true,\n        },\n        type_arguments: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        arguments: {\n            type: 'array',\n            contains: {\n                properties: {\n                },\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ScriptWriteSet = {\n    properties: {\n        execute_as: {\n            type: 'Address',\n            isRequired: true,\n        },\n        script: {\n            type: 'ScriptPayload',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $StateCheckpointTransaction = {\n    description: `A state checkpoint transaction`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $StateKeyWrapper = {\n    type: 'string',\n    description: `Representation of a StateKey as a hex string. This is used for cursor based pagination.\n    `,\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $SubmitTransactionRequest = {\n    description: `A request to submit a transaction\n\n    This requires a transaction and a signature of it`,\n    properties: {\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        signature: {\n            type: 'TransactionSignature',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TableItemRequest = {\n    description: `Table Item request for the GetTableItem API`,\n    properties: {\n        key_type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        value_type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        key: {\n            description: `The value of the table item's key`,\n            properties: {\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction = {\n    type: 'one-of',\n    description: `Enum of the different types of transactions in Aptos`,\n    contains: [{\n        type: 'Transaction_PendingTransaction',\n    }, {\n        type: 'Transaction_UserTransaction',\n    }, {\n        type: 'Transaction_GenesisTransaction',\n    }, {\n        type: 'Transaction_BlockMetadataTransaction',\n    }, {\n        type: 'Transaction_StateCheckpointTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_BlockMetadataTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'BlockMetadataTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_GenesisTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'GenesisTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_PendingTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'PendingTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_StateCheckpointTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'StateCheckpointTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $Transaction_UserTransaction = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'UserTransaction',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload = {\n    type: 'one-of',\n    description: `An enum of the possible transaction payloads`,\n    contains: [{\n        type: 'TransactionPayload_EntryFunctionPayload',\n    }, {\n        type: 'TransactionPayload_ScriptPayload',\n    }, {\n        type: 'TransactionPayload_ModuleBundlePayload',\n    }, {\n        type: 'TransactionPayload_MultisigPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload_EntryFunctionPayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'EntryFunctionPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload_ModuleBundlePayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'ModuleBundlePayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload_MultisigPayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'MultisigPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionPayload_ScriptPayload = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'ScriptPayload',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionsBatchSingleSubmissionFailure = {\n    description: `Information telling which batch submission transactions failed`,\n    properties: {\n        error: {\n            type: 'AptosError',\n            isRequired: true,\n        },\n        transaction_index: {\n            type: 'number',\n            description: `The index of which transaction failed, same as submission order`,\n            isRequired: true,\n            format: 'uint64',\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionsBatchSubmissionResult = {\n    description: `Batch transaction submission result\n\n    Tells which transactions failed`,\n    properties: {\n        transaction_failures: {\n            type: 'array',\n            contains: {\n                type: 'TransactionsBatchSingleSubmissionFailure',\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature = {\n    type: 'one-of',\n    description: `An enum representing the different transaction signatures available`,\n    contains: [{\n        type: 'TransactionSignature_Ed25519Signature',\n    }, {\n        type: 'TransactionSignature_MultiEd25519Signature',\n    }, {\n        type: 'TransactionSignature_MultiAgentSignature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature_Ed25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'Ed25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature_MultiAgentSignature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'MultiAgentSignature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $TransactionSignature_MultiEd25519Signature = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'MultiEd25519Signature',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $U128 = {\n    type: 'string',\n    description: `A string containing a 128-bit unsigned integer.\n\n    We represent u128 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u128s in JSON natively.\n    `,\n    format: 'uint128',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $U256 = {\n    type: 'string',\n    description: `A string containing a 256-bit unsigned integer.\n\n    We represent u256 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u256s in JSON natively.\n    `,\n    format: 'uint256',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $U64 = {\n    type: 'string',\n    description: `A string containing a 64-bit unsigned integer.\n\n    We represent u64 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    `,\n    format: 'uint64',\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $UserTransaction = {\n    description: `A transaction submitted by a user to change the state of the blockchain`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_change_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        event_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        state_checkpoint_hash: {\n            type: 'HashValue',\n        },\n        gas_used: {\n            type: 'U64',\n            isRequired: true,\n        },\n        success: {\n            type: 'boolean',\n            description: `Whether the transaction was successful`,\n            isRequired: true,\n        },\n        vm_status: {\n            type: 'string',\n            description: `The VM status of the transaction, can tell useful information in a failure`,\n            isRequired: true,\n        },\n        accumulator_root_hash: {\n            type: 'HashValue',\n            isRequired: true,\n        },\n        changes: {\n            type: 'array',\n            contains: {\n                type: 'WriteSetChange',\n            },\n            isRequired: true,\n        },\n        sender: {\n            type: 'Address',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        max_gas_amount: {\n            type: 'U64',\n            isRequired: true,\n        },\n        gas_unit_price: {\n            type: 'U64',\n            isRequired: true,\n        },\n        expiration_timestamp_secs: {\n            type: 'U64',\n            isRequired: true,\n        },\n        payload: {\n            type: 'TransactionPayload',\n            isRequired: true,\n        },\n        signature: {\n            type: 'TransactionSignature',\n        },\n        events: {\n            type: 'array',\n            contains: {\n                type: 'Event',\n            },\n            isRequired: true,\n        },\n        timestamp: {\n            type: 'U64',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $VersionedEvent = {\n    description: `An event from a transaction with a version`,\n    properties: {\n        version: {\n            type: 'U64',\n            isRequired: true,\n        },\n        guid: {\n            type: 'EventGuid',\n            isRequired: true,\n        },\n        sequence_number: {\n            type: 'U64',\n            isRequired: true,\n        },\n        type: {\n            type: 'MoveType',\n            isRequired: true,\n        },\n        data: {\n            description: `The JSON representation of the event`,\n            properties: {\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $ViewRequest = {\n    description: `View request for the Move View Function API`,\n    properties: {\n        function: {\n            type: 'EntryFunctionId',\n            isRequired: true,\n        },\n        type_arguments: {\n            type: 'array',\n            contains: {\n                type: 'MoveType',\n            },\n            isRequired: true,\n        },\n        arguments: {\n            type: 'array',\n            contains: {\n                properties: {\n                },\n            },\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteModule = {\n    description: `Write a new module or update an existing one`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        data: {\n            type: 'MoveModuleBytecode',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteResource = {\n    description: `Write a resource or update an existing one`,\n    properties: {\n        address: {\n            type: 'Address',\n            isRequired: true,\n        },\n        state_key_hash: {\n            type: 'string',\n            description: `State key hash`,\n            isRequired: true,\n        },\n        data: {\n            type: 'MoveResource',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSet = {\n    type: 'one-of',\n    description: `The associated writeset with a payload`,\n    contains: [{\n        type: 'WriteSet_ScriptWriteSet',\n    }, {\n        type: 'WriteSet_DirectWriteSet',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSet_DirectWriteSet = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DirectWriteSet',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSet_ScriptWriteSet = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'ScriptWriteSet',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange = {\n    type: 'one-of',\n    description: `A final state change of a transaction on a resource or module`,\n    contains: [{\n        type: 'WriteSetChange_DeleteModule',\n    }, {\n        type: 'WriteSetChange_DeleteResource',\n    }, {\n        type: 'WriteSetChange_DeleteTableItem',\n    }, {\n        type: 'WriteSetChange_WriteModule',\n    }, {\n        type: 'WriteSetChange_WriteResource',\n    }, {\n        type: 'WriteSetChange_WriteTableItem',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_DeleteModule = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DeleteModule',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_DeleteResource = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DeleteResource',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_DeleteTableItem = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'DeleteTableItem',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_WriteModule = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteModule',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_WriteResource = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteResource',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetChange_WriteTableItem = {\n    type: 'all-of',\n    contains: [{\n        properties: {\n            type: {\n                type: 'string',\n                isRequired: true,\n            },\n        },\n    }, {\n        type: 'WriteTableItem',\n    }],\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteSetPayload = {\n    description: `A writeset payload, used only for genesis`,\n    properties: {\n        write_set: {\n            type: 'WriteSet',\n            isRequired: true,\n        },\n    },\n} as const;\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport const $WriteTableItem = {\n    description: `Change set to write a table item`,\n    properties: {\n        state_key_hash: {\n            type: 'string',\n            isRequired: true,\n        },\n        handle: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        key: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        value: {\n            type: 'HexEncodedBytes',\n            isRequired: true,\n        },\n        data: {\n            type: 'DecodedTableData',\n        },\n    },\n} as const;\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { HexString } from \"../utils\";\nimport {\n  TypeTag,\n  TypeTagBool,\n  TypeTagU8,\n  TypeTagU16,\n  TypeTagU32,\n  TypeTagU64,\n  TypeTagU128,\n  TypeTagU256,\n  TypeTagAddress,\n  AccountAddress,\n  TypeTagVector,\n  TypeTagStruct,\n  TransactionArgument,\n  TransactionArgumentBool,\n  TransactionArgumentU16,\n  TransactionArgumentU32,\n  TransactionArgumentU64,\n  TransactionArgumentU128,\n  TransactionArgumentU256,\n  TransactionArgumentAddress,\n  TransactionArgumentU8,\n  TransactionArgumentU8Vector,\n} from \"../aptos_types\";\nimport { Serializer } from \"../bcs\";\n\nfunction assertType(val: any, types: string[] | string, message?: string) {\n  if (!types?.includes(typeof val)) {\n    throw new Error(\n      message || `Invalid arg: ${val} type should be ${types instanceof Array ? types.join(\" or \") : types}`,\n    );\n  }\n}\n\nexport function ensureBoolean(val: boolean | string): boolean {\n  assertType(val, [\"boolean\", \"string\"]);\n  if (typeof val === \"boolean\") {\n    return val;\n  }\n\n  if (val === \"true\") {\n    return true;\n  }\n  if (val === \"false\") {\n    return false;\n  }\n\n  throw new Error(\"Invalid boolean string.\");\n}\n\nexport function ensureNumber(val: number | string): number {\n  assertType(val, [\"number\", \"string\"]);\n  if (typeof val === \"number\") {\n    return val;\n  }\n\n  const res = Number.parseInt(val, 10);\n  if (Number.isNaN(res)) {\n    throw new Error(\"Invalid number string.\");\n  }\n\n  return res;\n}\n\nexport function ensureBigInt(val: number | bigint | string): bigint {\n  assertType(val, [\"number\", \"bigint\", \"string\"]);\n  return BigInt(val);\n}\n\nexport function serializeArg(argVal: any, argType: TypeTag, serializer: Serializer) {\n  if (argType instanceof TypeTagBool) {\n    serializer.serializeBool(ensureBoolean(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU8) {\n    serializer.serializeU8(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU16) {\n    serializer.serializeU16(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU32) {\n    serializer.serializeU32(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU64) {\n    serializer.serializeU64(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU128) {\n    serializer.serializeU128(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU256) {\n    serializer.serializeU256(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagAddress) {\n    let addr: AccountAddress;\n    if (typeof argVal === \"string\" || argVal instanceof HexString) {\n      addr = AccountAddress.fromHex(argVal);\n    } else if (argVal instanceof AccountAddress) {\n      addr = argVal;\n    } else {\n      throw new Error(\"Invalid account address.\");\n    }\n    addr.serialize(serializer);\n    return;\n  }\n  if (argType instanceof TypeTagVector) {\n    // We are serializing a vector<u8>\n    if (argType.value instanceof TypeTagU8) {\n      if (argVal instanceof Uint8Array) {\n        serializer.serializeBytes(argVal);\n        return;\n      }\n\n      if (typeof argVal === \"string\") {\n        serializer.serializeStr(argVal);\n        return;\n      }\n    }\n\n    if (!Array.isArray(argVal)) {\n      throw new Error(\"Invalid vector args.\");\n    }\n\n    serializer.serializeU32AsUleb128(argVal.length);\n\n    argVal.forEach((arg) => serializeArg(arg, argType.value, serializer));\n    return;\n  }\n\n  if (argType instanceof TypeTagStruct) {\n    const { address, module_name: moduleName, name } = (argType as TypeTagStruct).value;\n    if (\n      `${HexString.fromUint8Array(address.address).toShortString()}::${moduleName.value}::${name.value}` !==\n      \"0x1::string::String\"\n    ) {\n      throw new Error(\"The only supported struct arg is of type 0x1::string::String\");\n    }\n    assertType(argVal, [\"string\"]);\n\n    serializer.serializeStr(argVal);\n    return;\n  }\n  throw new Error(\"Unsupported arg type.\");\n}\n\nexport function argToTransactionArgument(argVal: any, argType: TypeTag): TransactionArgument {\n  if (argType instanceof TypeTagBool) {\n    return new TransactionArgumentBool(ensureBoolean(argVal));\n  }\n  if (argType instanceof TypeTagU8) {\n    return new TransactionArgumentU8(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU16) {\n    return new TransactionArgumentU16(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU32) {\n    return new TransactionArgumentU32(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU64) {\n    return new TransactionArgumentU64(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU128) {\n    return new TransactionArgumentU128(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU256) {\n    return new TransactionArgumentU256(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagAddress) {\n    let addr: AccountAddress;\n    if (typeof argVal === \"string\" || argVal instanceof HexString) {\n      addr = AccountAddress.fromHex(argVal);\n    } else if (argVal instanceof AccountAddress) {\n      addr = argVal;\n    } else {\n      throw new Error(\"Invalid account address.\");\n    }\n    return new TransactionArgumentAddress(addr);\n  }\n  if (argType instanceof TypeTagVector && argType.value instanceof TypeTagU8) {\n    if (!(argVal instanceof Uint8Array)) {\n      throw new Error(`${argVal} should be an instance of Uint8Array`);\n    }\n    return new TransactionArgumentU8Vector(argVal);\n  }\n\n  throw new Error(\"Unknown type for TransactionArgument.\");\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { sha3_256 as sha3Hash } from \"@noble/hashes/sha3\";\nimport {\n  Ed25519PublicKey,\n  Ed25519Signature,\n  MultiEd25519PublicKey,\n  MultiEd25519Signature,\n  RawTransaction,\n  SignedTransaction,\n  TransactionAuthenticatorEd25519,\n  TransactionAuthenticatorMultiEd25519,\n  SigningMessage,\n  MultiAgentRawTransaction,\n  AccountAddress,\n  EntryFunction,\n  Identifier,\n  ChainId,\n  Script,\n  TransactionPayload,\n  TransactionArgument,\n  TransactionPayloadEntryFunction,\n  TransactionPayloadScript,\n  ModuleId,\n  TypeTagParser,\n} from \"../aptos_types\";\nimport { bcsToBytes, Bytes, Deserializer, Serializer, Uint64, Uint8 } from \"../bcs\";\nimport { ArgumentABI, EntryFunctionABI, ScriptABI, TransactionScriptABI, TypeArgumentABI } from \"../aptos_types/abi\";\nimport { argToTransactionArgument, serializeArg } from \"./builder_utils\";\nimport * as Gen from \"../generated/index\";\nimport {\n  DEFAULT_TXN_EXP_SEC_FROM_NOW,\n  DEFAULT_MAX_GAS_AMOUNT,\n  HexString,\n  MaybeHexString,\n  MemoizeExpiring,\n} from \"../utils\";\n\nexport { TypeTagParser } from \"../aptos_types\";\n\nconst RAW_TRANSACTION_SALT = \"APTOS::RawTransaction\";\nconst RAW_TRANSACTION_WITH_DATA_SALT = \"APTOS::RawTransactionWithData\";\n\ntype AnyRawTransaction = RawTransaction | MultiAgentRawTransaction;\n\n/**\n * Function that takes in a Signing Message (serialized raw transaction)\n *  and returns a signature\n */\nexport type SigningFn = (txn: SigningMessage) => Ed25519Signature | MultiEd25519Signature;\n\nexport class TransactionBuilder<F extends SigningFn> {\n  protected readonly signingFunction: F;\n\n  constructor(signingFunction: F, public readonly rawTxnBuilder?: TransactionBuilderABI) {\n    this.signingFunction = signingFunction;\n  }\n\n  /**\n   * Builds a RawTransaction. Relays the call to TransactionBuilderABI.build\n   * @param func\n   * @param ty_tags\n   * @param args\n   */\n  build(func: string, ty_tags: string[], args: any[]): RawTransaction {\n    if (!this.rawTxnBuilder) {\n      throw new Error(\"this.rawTxnBuilder doesn't exist.\");\n    }\n\n    return this.rawTxnBuilder.build(func, ty_tags, args);\n  }\n\n  /** Generates a Signing Message out of a raw transaction. */\n  static getSigningMessage(rawTxn: AnyRawTransaction): SigningMessage {\n    const hash = sha3Hash.create();\n    if (rawTxn instanceof RawTransaction) {\n      hash.update(RAW_TRANSACTION_SALT);\n    } else if (rawTxn instanceof MultiAgentRawTransaction) {\n      hash.update(RAW_TRANSACTION_WITH_DATA_SALT);\n    } else {\n      throw new Error(\"Unknown transaction type.\");\n    }\n\n    const prefix = hash.digest();\n\n    const body = bcsToBytes(rawTxn);\n\n    const mergedArray = new Uint8Array(prefix.length + body.length);\n    mergedArray.set(prefix);\n    mergedArray.set(body, prefix.length);\n\n    return mergedArray;\n  }\n}\n\n/**\n * Provides signing method for signing a raw transaction with single public key.\n */\nexport class TransactionBuilderEd25519 extends TransactionBuilder<SigningFn> {\n  private readonly publicKey: Uint8Array;\n\n  constructor(signingFunction: SigningFn, publicKey: Uint8Array, rawTxnBuilder?: TransactionBuilderABI) {\n    super(signingFunction, rawTxnBuilder);\n    this.publicKey = publicKey;\n  }\n\n  rawToSigned(rawTxn: RawTransaction): SignedTransaction {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n\n    const authenticator = new TransactionAuthenticatorEd25519(\n      new Ed25519PublicKey(this.publicKey),\n      signature as Ed25519Signature,\n    );\n\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n\n  /** Signs a raw transaction and returns a bcs serialized transaction. */\n  sign(rawTxn: RawTransaction): Bytes {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n}\n\n/**\n * Provides signing method for signing a raw transaction with multisig public key.\n */\nexport class TransactionBuilderMultiEd25519 extends TransactionBuilder<SigningFn> {\n  private readonly publicKey: MultiEd25519PublicKey;\n\n  constructor(signingFunction: SigningFn, publicKey: MultiEd25519PublicKey) {\n    super(signingFunction);\n    this.publicKey = publicKey;\n  }\n\n  rawToSigned(rawTxn: RawTransaction): SignedTransaction {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n\n    const authenticator = new TransactionAuthenticatorMultiEd25519(this.publicKey, signature as MultiEd25519Signature);\n\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n\n  /** Signs a raw transaction and returns a bcs serialized transaction. */\n  sign(rawTxn: RawTransaction): Bytes {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n}\n\n/**\n * Config for creating raw transactions.\n */\ninterface ABIBuilderConfig {\n  sender: MaybeHexString | AccountAddress;\n  sequenceNumber: Uint64 | string;\n  gasUnitPrice: Uint64 | string;\n  maxGasAmount?: Uint64 | string;\n  expSecFromNow?: number | string;\n  chainId: Uint8 | string;\n}\n\n/**\n * Builds raw transactions based on ABI\n */\nexport class TransactionBuilderABI {\n  private readonly abiMap: Map<string, ScriptABI>;\n\n  private readonly builderConfig: Partial<ABIBuilderConfig>;\n\n  /**\n   * Constructs a TransactionBuilderABI instance\n   * @param abis List of binary ABIs.\n   * @param builderConfig Configs for creating a raw transaction.\n   */\n  constructor(abis: Bytes[], builderConfig?: ABIBuilderConfig) {\n    this.abiMap = new Map<string, ScriptABI>();\n\n    abis.forEach((abi) => {\n      const deserializer = new Deserializer(abi);\n      const scriptABI = ScriptABI.deserialize(deserializer);\n      let k: string;\n      if (scriptABI instanceof EntryFunctionABI) {\n        const funcABI = scriptABI as EntryFunctionABI;\n        const { address: addr, name: moduleName } = funcABI.module_name;\n        k = `${HexString.fromUint8Array(addr.address).toShortString()}::${moduleName.value}::${funcABI.name}`;\n      } else {\n        const funcABI = scriptABI as TransactionScriptABI;\n        k = funcABI.name;\n      }\n\n      if (this.abiMap.has(k)) {\n        throw new Error(\"Found conflicting ABI interfaces\");\n      }\n\n      this.abiMap.set(k, scriptABI);\n    });\n\n    this.builderConfig = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      expSecFromNow: DEFAULT_TXN_EXP_SEC_FROM_NOW,\n      ...builderConfig,\n    };\n  }\n\n  private static toBCSArgs(abiArgs: any[], args: any[]): Bytes[] {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n\n    return args.map((arg, i) => {\n      const serializer = new Serializer();\n      serializeArg(arg, abiArgs[i].type_tag, serializer);\n      return serializer.getBytes();\n    });\n  }\n\n  private static toTransactionArguments(abiArgs: any[], args: any[]): TransactionArgument[] {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n\n    return args.map((arg, i) => argToTransactionArgument(arg, abiArgs[i].type_tag));\n  }\n\n  setSequenceNumber(seqNumber: Uint64 | string) {\n    this.builderConfig.sequenceNumber = BigInt(seqNumber);\n  }\n\n  /**\n   * Builds a TransactionPayload. For dApps, chain ID and account sequence numbers are only known to the wallet.\n   * Instead of building a RawTransaction (requires chainID and sequenceNumber), dApps can build a TransactionPayload\n   * and pass the payload to the wallet for signing and sending.\n   * @param func Fully qualified func names, e.g. 0x1::Coin::transfer\n   * @param ty_tags TypeTag strings\n   * @param args Function arguments\n   * @returns TransactionPayload\n   */\n  buildTransactionPayload(func: string, ty_tags: string[], args: any[]): TransactionPayload {\n    const typeTags = ty_tags.map((ty_arg) => new TypeTagParser(ty_arg).parseTypeTag());\n\n    let payload: TransactionPayload;\n\n    if (!this.abiMap.has(func)) {\n      throw new Error(`Cannot find function: ${func}`);\n    }\n\n    const scriptABI = this.abiMap.get(func);\n\n    if (scriptABI instanceof EntryFunctionABI) {\n      const funcABI = scriptABI as EntryFunctionABI;\n      const bcsArgs = TransactionBuilderABI.toBCSArgs(funcABI.args, args);\n      payload = new TransactionPayloadEntryFunction(\n        new EntryFunction(funcABI.module_name, new Identifier(funcABI.name), typeTags, bcsArgs),\n      );\n    } else if (scriptABI instanceof TransactionScriptABI) {\n      const funcABI = scriptABI as TransactionScriptABI;\n      const scriptArgs = TransactionBuilderABI.toTransactionArguments(funcABI.args, args);\n\n      payload = new TransactionPayloadScript(new Script(funcABI.code, typeTags, scriptArgs));\n    } else {\n      /* istanbul ignore next */\n      throw new Error(\"Unknown ABI format.\");\n    }\n\n    return payload;\n  }\n\n  /**\n   * Builds a RawTransaction\n   * @param func Fully qualified func names, e.g. 0x1::Coin::transfer\n   * @param ty_tags TypeTag strings.\n   * @example Below are valid value examples\n   * ```\n   * // Structs are in format `AccountAddress::ModuleName::StructName`\n   * 0x1::aptos_coin::AptosCoin\n   * // Vectors are in format `vector<other_tag_string>`\n   * vector<0x1::aptos_coin::AptosCoin>\n   * bool\n   * u8\n   * u16\n   * u32\n   * u64\n   * u128\n   * u256\n   * address\n   * ```\n   * @param args Function arguments\n   * @returns RawTransaction\n   */\n  build(func: string, ty_tags: string[], args: any[]): RawTransaction {\n    const { sender, sequenceNumber, gasUnitPrice, maxGasAmount, expSecFromNow, chainId } = this.builderConfig;\n\n    if (!gasUnitPrice) {\n      throw new Error(\"No gasUnitPrice provided.\");\n    }\n\n    const senderAccount = sender instanceof AccountAddress ? sender : AccountAddress.fromHex(sender!);\n    const expTimestampSec = BigInt(Math.floor(Date.now() / 1000) + Number(expSecFromNow));\n    const payload = this.buildTransactionPayload(func, ty_tags, args);\n\n    if (payload) {\n      return new RawTransaction(\n        senderAccount,\n        BigInt(sequenceNumber!),\n        payload,\n        BigInt(maxGasAmount!),\n        BigInt(gasUnitPrice!),\n        expTimestampSec,\n        new ChainId(Number(chainId)),\n      );\n    }\n\n    throw new Error(\"Invalid ABI.\");\n  }\n}\n\nexport type RemoteABIBuilderConfig = Partial<Omit<ABIBuilderConfig, \"sender\">> & {\n  sender: MaybeHexString | AccountAddress;\n};\n\ninterface AptosClientInterface {\n  getAccountModules: (accountAddress: MaybeHexString) => Promise<Gen.MoveModuleBytecode[]>;\n  getAccount: (accountAddress: MaybeHexString) => Promise<Gen.AccountData>;\n  getChainId: () => Promise<number>;\n  estimateGasPrice: () => Promise<Gen.GasEstimation>;\n}\n\n/**\n * This transaction builder downloads JSON ABIs from the fullnodes.\n * It then translates the JSON ABIs to the format that is accepted by TransactionBuilderABI\n */\nexport class TransactionBuilderRemoteABI {\n  // We don't want the builder to depend on the actual AptosClient. There might be circular dependencies.\n  constructor(\n    private readonly aptosClient: AptosClientInterface,\n    private readonly builderConfig: RemoteABIBuilderConfig,\n  ) {}\n\n  // Cache for 10 minutes\n  @MemoizeExpiring(10 * 60 * 1000)\n  async fetchABI(addr: string) {\n    const modules = await this.aptosClient.getAccountModules(addr);\n    const abis = modules\n      .map((module) => module.abi)\n      .flatMap((abi) =>\n        abi!.exposed_functions\n          .filter((ef) => ef.is_entry)\n          .map(\n            (ef) =>\n              ({\n                fullName: `${abi!.address}::${abi!.name}::${ef.name}`,\n                ...ef,\n              } as Gen.MoveFunction & { fullName: string }),\n          ),\n      );\n\n    const abiMap = new Map<string, Gen.MoveFunction & { fullName: string }>();\n    abis.forEach((abi) => {\n      abiMap.set(abi.fullName, abi);\n    });\n\n    return abiMap;\n  }\n\n  /**\n   * Builds a raw transaction. Only support script function a.k.a entry function payloads\n   *\n   * @param func fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer\n   * @param ty_tags\n   * @param args\n   * @returns RawTransaction\n   */\n  async build(func: Gen.EntryFunctionId, ty_tags: Gen.MoveType[], args: any[]): Promise<RawTransaction> {\n    /* eslint no-param-reassign: [\"off\"] */\n    const normlize = (s: string) => s.replace(/^0[xX]0*/g, \"0x\");\n    func = normlize(func);\n    const funcNameParts = func.split(\"::\");\n    if (funcNameParts.length !== 3) {\n      throw new Error(\n        // eslint-disable-next-line max-len\n        \"'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer\",\n      );\n    }\n\n    const [addr, module] = func.split(\"::\");\n\n    // Downloads the JSON abi\n    const abiMap = await this.fetchABI(addr);\n    if (!abiMap.has(func)) {\n      throw new Error(`${func} doesn't exist.`);\n    }\n\n    const funcAbi = abiMap.get(func);\n\n    // Remove all `signer` and `&signer` from argument list because the Move VM injects those arguments. Clients do not\n    // need to care about those args. `signer` and `&signer` are required be in the front of the argument list. But we\n    // just loop through all arguments and filter out `signer` and `&signer`.\n    const abiArgs = funcAbi!.params.filter((param) => param !== \"signer\" && param !== \"&signer\");\n\n    // Convert abi string arguments to TypeArgumentABI\n    const typeArgABIs = abiArgs.map(\n      (abiArg, i) => new ArgumentABI(`var${i}`, new TypeTagParser(abiArg, ty_tags).parseTypeTag()),\n    );\n\n    const entryFunctionABI = new EntryFunctionABI(\n      funcAbi!.name,\n      ModuleId.fromStr(`${addr}::${module}`),\n      \"\", // Doc string\n      funcAbi!.generic_type_params.map((_, i) => new TypeArgumentABI(`${i}`)),\n      typeArgABIs,\n    );\n\n    const { sender, ...rest } = this.builderConfig;\n\n    const senderAddress = sender instanceof AccountAddress ? HexString.fromUint8Array(sender.address) : sender;\n\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasUnitPrice }] = await Promise.all([\n      rest?.sequenceNumber\n        ? Promise.resolve({ sequence_number: rest?.sequenceNumber })\n        : this.aptosClient.getAccount(senderAddress),\n      rest?.chainId ? Promise.resolve(rest?.chainId) : this.aptosClient.getChainId(),\n      rest?.gasUnitPrice ? Promise.resolve({ gas_estimate: rest?.gasUnitPrice }) : this.aptosClient.estimateGasPrice(),\n    ]);\n\n    const builderABI = new TransactionBuilderABI([bcsToBytes(entryFunctionABI)], {\n      sender,\n      sequenceNumber,\n      chainId,\n      gasUnitPrice: BigInt(gasUnitPrice),\n      ...rest,\n    });\n\n    return builderABI.build(func, ty_tags, args);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  clear,\n  DEFAULT_TXN_EXP_SEC_FROM_NOW,\n  DEFAULT_MAX_GAS_AMOUNT,\n  DEFAULT_TXN_TIMEOUT_SEC,\n  fixNodeUrl,\n  HexString,\n  paginateWithCursor,\n  MaybeHexString,\n  Memoize,\n  sleep,\n  APTOS_COIN,\n} from \"../utils\";\nimport { AptosAccount } from \"../account/aptos_account\";\nimport * as Gen from \"../generated/index\";\nimport {\n  TxnBuilderTypes,\n  TransactionBuilderEd25519,\n  TransactionBuilderRemoteABI,\n  RemoteABIBuilderConfig,\n  TransactionBuilderMultiEd25519,\n} from \"../transaction_builder\";\nimport {\n  bcsSerializeBytes,\n  bcsSerializeU8,\n  bcsToBytes,\n  Bytes,\n  Seq,\n  Serializer,\n  serializeVector,\n  Uint64,\n  AnyNumber,\n} from \"../bcs\";\nimport { Ed25519PublicKey, MultiEd25519PublicKey } from \"../aptos_types\";\n\nexport interface OptionalTransactionArgs {\n  maxGasAmount?: Uint64;\n  gasUnitPrice?: Uint64;\n  expireTimestamp?: Uint64;\n}\n\ninterface PaginationArgs {\n  start?: AnyNumber;\n  limit?: number;\n}\n\n/**\n * Provides methods for retrieving data from Aptos node.\n * For more detailed API specification see {@link https://fullnode.devnet.aptoslabs.com/v1/spec}\n */\nexport class AptosClient {\n  client: Gen.AptosGeneratedClient;\n\n  readonly nodeUrl: string;\n\n  /**\n   * Build a client configured to connect to an Aptos node at the given URL.\n   *\n   * Note: If you forget to append `/v1` to the URL, the client constructor\n   * will automatically append it. If you don't want this URL processing to\n   * take place, set doNotFixNodeUrl to true.\n   *\n   * @param nodeUrl URL of the Aptos Node API endpoint.\n   * @param config Additional configuration options for the generated Axios client.\n   */\n  constructor(nodeUrl: string, config?: Partial<Gen.OpenAPIConfig>, doNotFixNodeUrl: boolean = false) {\n    if (!nodeUrl) {\n      throw new Error(\"Node URL cannot be empty.\");\n    }\n    const conf = config === undefined || config === null ? {} : { ...config };\n\n    if (doNotFixNodeUrl) {\n      this.nodeUrl = nodeUrl;\n    } else {\n      this.nodeUrl = fixNodeUrl(nodeUrl);\n    }\n    conf.BASE = this.nodeUrl;\n\n    // Do not carry cookies when `WITH_CREDENTIALS` is explicitly set to `false`. By default, cookies will be sent\n    if (config?.WITH_CREDENTIALS === false) {\n      conf.WITH_CREDENTIALS = false;\n    } else {\n      conf.WITH_CREDENTIALS = true;\n    }\n    this.client = new Gen.AptosGeneratedClient(conf);\n  }\n\n  /**\n   * Queries an Aptos account by address\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @returns Core account resource, used for identifying account and transaction execution\n   * @example An example of the returned account\n   * ```\n   * {\n   *    sequence_number: \"1\",\n   *    authentication_key: \"0x5307b5f4bc67829097a8ba9b43dba3b88261eeccd1f709d9bde240fc100fbb69\"\n   * }\n   * ```\n   */\n  @parseApiError\n  async getAccount(accountAddress: MaybeHexString): Promise<Gen.AccountData> {\n    return this.client.accounts.getAccount(HexString.ensure(accountAddress).hex());\n  }\n\n  /**\n   * Queries transactions sent by given account\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param query Optional pagination object\n   * @param query.start The sequence number of the start transaction of the page. Default is 0.\n   * @param query.limit The max number of transactions should be returned for the page. Default is 25.\n   * @returns An array of on-chain transactions, sent by account\n   */\n  @parseApiError\n  async getAccountTransactions(accountAddress: MaybeHexString, query?: PaginationArgs): Promise<Gen.Transaction[]> {\n    return this.client.transactions.getAccountTransactions(\n      HexString.ensure(accountAddress).hex(),\n      query?.start?.toString(),\n      query?.limit,\n    );\n  }\n\n  /**\n   * Queries modules associated with given account\n   *\n   * Note: In order to get all account modules, this function may call the API\n   * multiple times as it paginates.\n   *\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account modules array for a specific ledger version.\n   * Module is represented by MoveModule interface. It contains module `bytecode` and `abi`,\n   * which is JSON representation of a module\n   */\n  @parseApiError\n  async getAccountModules(\n    accountAddress: MaybeHexString,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveModuleBytecode[]> {\n    // Note: This function does not expose a `limit` parameter because it might\n    // be ambiguous how this is being used. Is it being passed to getAccountModules\n    // to limit the number of items per response, or does it limit the total output\n    // of this function? We avoid this confusion by not exposing the parameter at all.\n    const f = this.client.accounts.getAccountModules.bind({ httpRequest: this.client.request });\n    const out = await paginateWithCursor(f, accountAddress, 1000, query);\n    return out;\n  }\n\n  /**\n   * Queries module associated with given account by module name\n   *\n   * Note: In order to get all account resources, this function may call the API\n   * multiple times as it paginates.\n   *\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param moduleName The name of the module\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Specified module.\n   * Module is represented by MoveModule interface. It contains module `bytecode` and `abi`,\n   * which JSON representation of a module\n   */\n  @parseApiError\n  async getAccountModule(\n    accountAddress: MaybeHexString,\n    moduleName: string,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveModuleBytecode> {\n    return this.client.accounts.getAccountModule(\n      HexString.ensure(accountAddress).hex(),\n      moduleName,\n      query?.ledgerVersion?.toString(),\n    );\n  }\n\n  /**\n   * Queries all resources associated with given account\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account resources for a specific ledger version\n   */\n  @parseApiError\n  async getAccountResources(\n    accountAddress: MaybeHexString,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveResource[]> {\n    const f = this.client.accounts.getAccountResources.bind({ httpRequest: this.client.request });\n    const out = await paginateWithCursor(f, accountAddress, 9999, query);\n    return out;\n  }\n\n  /**\n   * Queries resource associated with given account by resource type\n   * @param accountAddress Hex-encoded 32 byte Aptos account address\n   * @param resourceType String representation of an on-chain Move struct type\n   * @param query.ledgerVersion Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account resource of specified type and ledger version\n   * @example An example of an account resource\n   * ```\n   * {\n   *    type: \"0x1::aptos_coin::AptosCoin\",\n   *    data: { value: 6 }\n   * }\n   * ```\n   */\n  @parseApiError\n  async getAccountResource(\n    accountAddress: MaybeHexString,\n    resourceType: Gen.MoveStructTag,\n    query?: { ledgerVersion?: AnyNumber },\n  ): Promise<Gen.MoveResource> {\n    return this.client.accounts.getAccountResource(\n      HexString.ensure(accountAddress).hex(),\n      resourceType,\n      query?.ledgerVersion?.toString(),\n    );\n  }\n\n  /** Generates a signed transaction that can be submitted to the chain for execution. */\n  static generateBCSTransaction(accountFrom: AptosAccount, rawTxn: TxnBuilderTypes.RawTransaction): Uint8Array {\n    const txnBuilder = new TransactionBuilderEd25519((signingMessage: TxnBuilderTypes.SigningMessage) => {\n      // @ts-ignore\n      const sigHexStr = accountFrom.signBuffer(signingMessage);\n      return new TxnBuilderTypes.Ed25519Signature(sigHexStr.toUint8Array());\n    }, accountFrom.pubKey().toUint8Array());\n\n    return txnBuilder.sign(rawTxn);\n  }\n\n  /**\n   * Note: Unless you have a specific reason for using this, it'll probably be simpler\n   * to use `simulateTransaction`.\n   *\n   * Generates a BCS transaction that can be submitted to the chain for simulation.\n   *\n   * @param accountFrom The account that will be used to send the transaction\n   * for simulation.\n   * @param rawTxn The raw transaction to be simulated, likely created by calling\n   * the `generateTransaction` function.\n   * @returns The BCS encoded signed transaction, which you should then pass into\n   * the `submitBCSSimulation` function.\n   */\n  static generateBCSSimulation(accountFrom: AptosAccount, rawTxn: TxnBuilderTypes.RawTransaction): Uint8Array {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const txnBuilder = new TransactionBuilderEd25519((_signingMessage: TxnBuilderTypes.SigningMessage) => {\n      // @ts-ignore\n      const invalidSigBytes = new Uint8Array(64);\n      return new TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n    }, accountFrom.pubKey().toUint8Array());\n\n    return txnBuilder.sign(rawTxn);\n  }\n\n  /** Generates an entry function transaction request that can be submitted to produce a raw transaction that\n   * can be signed, which upon being signed can be submitted to the blockchain\n   * This function fetches the remote ABI and uses it to serialized the data, therefore\n   * users don't need to handle serialization by themselves.\n   * @param sender Hex-encoded 32 byte Aptos account address of transaction sender\n   * @param payload Entry function transaction payload type\n   * @param options Options allow to overwrite default transaction options.\n   * @returns A raw transaction object\n   */\n  async generateTransaction(\n    sender: MaybeHexString,\n    payload: Gen.EntryFunctionPayload,\n    options?: Partial<Gen.SubmitTransactionRequest>,\n  ): Promise<TxnBuilderTypes.RawTransaction> {\n    const config: RemoteABIBuilderConfig = { sender };\n    if (options?.sequence_number) {\n      config.sequenceNumber = options.sequence_number;\n    }\n\n    if (options?.gas_unit_price) {\n      config.gasUnitPrice = options.gas_unit_price;\n    }\n\n    if (options?.max_gas_amount) {\n      config.maxGasAmount = options.max_gas_amount;\n    }\n\n    if (options?.expiration_timestamp_secs) {\n      const timestamp = Number.parseInt(options.expiration_timestamp_secs, 10);\n      config.expSecFromNow = timestamp - Math.floor(Date.now() / 1000);\n    }\n\n    const builder = new TransactionBuilderRemoteABI(this, config);\n    return builder.build(payload.function, payload.type_arguments, payload.arguments);\n  }\n\n  /** Converts a transaction request produced by `generateTransaction` into a properly\n   * signed transaction, which can then be submitted to the blockchain\n   * @param accountFrom AptosAccount of transaction sender\n   * @param rawTransaction A raw transaction generated by `generateTransaction` method\n   * @returns A transaction, signed with sender account\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async signTransaction(\n    accountFrom: AptosAccount,\n    rawTransaction: TxnBuilderTypes.RawTransaction,\n  ): Promise<Uint8Array> {\n    return Promise.resolve(AptosClient.generateBCSTransaction(accountFrom, rawTransaction));\n  }\n\n  /**\n   * Event types are globally identifiable by an account `address` and\n   * monotonically increasing `creation_number`, one per event type emitted\n   * to the given account. This API returns events corresponding to that\n   * that event type.\n   * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix,\n   * for which events are queried. This refers to the account that events were emitted\n   * to, not the account hosting the move module that emits that event type.\n   * @param creationNumber Creation number corresponding to the event type.\n   * @returns Array of events assotiated with the given account and creation number.\n   */\n  @parseApiError\n  async getEventsByCreationNumber(\n    address: MaybeHexString,\n    creationNumber: AnyNumber | string,\n    query?: PaginationArgs,\n  ): Promise<Gen.Event[]> {\n    return this.client.events.getEventsByCreationNumber(\n      HexString.ensure(address).hex(),\n      creationNumber.toString(),\n      query?.start?.toString(),\n      query?.limit,\n    );\n  }\n\n  /**\n   * This API uses the given account `address`, `eventHandle`, and `fieldName`\n   * to build a key that can globally identify an event types. It then uses this\n   * key to return events emitted to the given account matching that event type.\n   * @param address Hex-encoded 32 byte Aptos account, with or without a `0x` prefix,\n   * for which events are queried. This refers to the account that events were emitted\n   * to, not the account hosting the move module that emits that event type.\n   * @param eventHandleStruct String representation of an on-chain Move struct type.\n   * (e.g. `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`)\n   * @param fieldName The field name of the EventHandle in the struct\n   * @param query Optional query object\n   * @param query.start The start sequence number in the EVENT STREAM, defaulting to the latest event.\n   * The events are returned in the reverse order of sequence number\n   * @param query.limit The number of events to be returned. The default is 25.\n   * @returns Array of events\n   */\n  @parseApiError\n  async getEventsByEventHandle(\n    address: MaybeHexString,\n    eventHandleStruct: Gen.MoveStructTag,\n    fieldName: string,\n    query?: PaginationArgs,\n  ): Promise<Gen.Event[]> {\n    return this.client.events.getEventsByEventHandle(\n      HexString.ensure(address).hex(),\n      eventHandleStruct,\n      fieldName,\n      query?.start?.toString(),\n      query?.limit,\n    );\n  }\n\n  /**\n   * Submits a signed transaction to the transaction endpoint.\n   * @param signedTxn A transaction, signed by `signTransaction` method\n   * @returns Transaction that is accepted and submitted to mempool\n   */\n  async submitTransaction(signedTxn: Uint8Array): Promise<Gen.PendingTransaction> {\n    return this.submitSignedBCSTransaction(signedTxn);\n  }\n\n  /**\n   * Generates and submits a transaction to the transaction simulation\n   * endpoint. For this we generate a transaction with a fake signature.\n   *\n   * @param accountOrPubkey The sender or sender's public key. When private key is available, `AptosAccount` instance\n   * can be used to send the transaction for simulation. If private key is not available, sender's public key can be\n   * used to send the transaction for simulation.\n   * @param rawTransaction The raw transaction to be simulated, likely created\n   * by calling the `generateTransaction` function.\n   * @param query.estimateGasUnitPrice If set to true, the gas unit price in the\n   * transaction will be ignored and the estimated value will be used.\n   * @param query.estimateMaxGasAmount If set to true, the max gas value in the\n   * transaction will be ignored and the maximum possible gas will be used.\n   * @param query.estimatePrioritizedGasUnitPrice If set to true, the transaction will use a higher price than the\n   * original estimate.\n   * @returns The BCS encoded signed transaction, which you should then provide\n   *\n   */\n  async simulateTransaction(\n    accountOrPubkey: AptosAccount | Ed25519PublicKey | MultiEd25519PublicKey,\n    rawTransaction: TxnBuilderTypes.RawTransaction,\n    query?: {\n      estimateGasUnitPrice?: boolean;\n      estimateMaxGasAmount?: boolean;\n      estimatePrioritizedGasUnitPrice: boolean;\n    },\n  ): Promise<Gen.UserTransaction[]> {\n    let signedTxn: Uint8Array;\n\n    if (accountOrPubkey instanceof AptosAccount) {\n      signedTxn = AptosClient.generateBCSSimulation(accountOrPubkey, rawTransaction);\n    } else if (accountOrPubkey instanceof MultiEd25519PublicKey) {\n      const txnBuilder = new TransactionBuilderMultiEd25519(() => {\n        const { threshold } = accountOrPubkey;\n        const bits: Seq<number> = [];\n        const signatures: TxnBuilderTypes.Ed25519Signature[] = [];\n        for (let i = 0; i < threshold; i += 1) {\n          bits.push(i);\n          signatures.push(new TxnBuilderTypes.Ed25519Signature(new Uint8Array(64)));\n        }\n        const bitmap = TxnBuilderTypes.MultiEd25519Signature.createBitmap(bits);\n        return new TxnBuilderTypes.MultiEd25519Signature(signatures, bitmap);\n      }, accountOrPubkey);\n\n      signedTxn = txnBuilder.sign(rawTransaction);\n    } else {\n      const txnBuilder = new TransactionBuilderEd25519(() => {\n        const invalidSigBytes = new Uint8Array(64);\n        return new TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n      }, accountOrPubkey.toBytes());\n\n      signedTxn = txnBuilder.sign(rawTransaction);\n    }\n    return this.submitBCSSimulation(signedTxn, query);\n  }\n\n  /**\n   * Submits a signed transaction to the endpoint that takes BCS payload\n   *\n   * @param signedTxn A BCS transaction representation\n   * @returns Transaction that is accepted and submitted to mempool\n   */\n  @parseApiError\n  async submitSignedBCSTransaction(signedTxn: Uint8Array): Promise<Gen.PendingTransaction> {\n    // Need to construct a customized post request for transactions in BCS payload\n    return this.client.request.request<Gen.PendingTransaction>({\n      url: \"/transactions\",\n      method: \"POST\",\n      body: signedTxn,\n      mediaType: \"application/x.aptos.signed_transaction+bcs\",\n    });\n  }\n\n  /**\n   * Submits the BCS serialization of a signed transaction to the simulation endpoint.\n   *\n   * @param bcsBody The output of `generateBCSSimulation`.\n   * @param query?.estimateGasUnitPrice If set to true, the gas unit price in the\n   * transaction will be ignored and the estimated value will be used.\n   * @param query?.estimateMaxGasAmount If set to true, the max gas value in the\n   * transaction will be ignored and the maximum possible gas will be used.\n   * @param query?.estimatePrioritizedGasUnitPrice If set to true, the transaction will use a higher price than the\n   * original estimate.\n   * @returns Simulation result in the form of UserTransaction.\n   */\n  @parseApiError\n  async submitBCSSimulation(\n    bcsBody: Uint8Array,\n    query?: {\n      estimateGasUnitPrice?: boolean;\n      estimateMaxGasAmount?: boolean;\n      estimatePrioritizedGasUnitPrice?: boolean;\n    },\n  ): Promise<Gen.UserTransaction[]> {\n    // Need to construct a customized post request for transactions in BCS payload.\n    const queryParams = {\n      estimate_gas_unit_price: query?.estimateGasUnitPrice ?? false,\n      estimate_max_gas_amount: query?.estimateMaxGasAmount ?? false,\n      estimate_prioritized_gas_unit_price: query?.estimatePrioritizedGasUnitPrice ?? false,\n    };\n    return this.client.request.request<Gen.UserTransaction[]>({\n      url: \"/transactions/simulate\",\n      query: queryParams,\n      method: \"POST\",\n      body: bcsBody,\n      mediaType: \"application/x.aptos.signed_transaction+bcs\",\n    });\n  }\n\n  /**\n   * Queries on-chain transactions. This function will not return pending\n   * transactions. For that, use `getTransactionsByHash`.\n   *\n   * @param query Optional pagination object\n   * @param query.start The start transaction version of the page. Default is the latest ledger version\n   * @param query.limit The max number of transactions should be returned for the page. Default is 25\n   * @returns Array of on-chain transactions\n   */\n  @parseApiError\n  async getTransactions(query?: PaginationArgs): Promise<Gen.Transaction[]> {\n    return this.client.transactions.getTransactions(query?.start?.toString(), query?.limit);\n  }\n\n  /**\n   * @param txnHash - Transaction hash should be hex-encoded bytes string with 0x prefix.\n   * @returns Transaction from mempool (pending) or on-chain (committed) transaction\n   */\n  @parseApiError\n  async getTransactionByHash(txnHash: string): Promise<Gen.Transaction> {\n    return this.client.transactions.getTransactionByHash(txnHash);\n  }\n\n  /**\n   * @param txnVersion - Transaction version is an uint64 number.\n   * @returns On-chain transaction. Only on-chain transactions have versions, so this\n   * function cannot be used to query pending transactions.\n   */\n  @parseApiError\n  async getTransactionByVersion(txnVersion: AnyNumber): Promise<Gen.Transaction> {\n    return this.client.transactions.getTransactionByVersion(txnVersion.toString());\n  }\n\n  /**\n   * Defines if specified transaction is currently in pending state\n   * @param txnHash A hash of transaction\n   *\n   * To create a transaction hash:\n   *\n   * 1. Create hash message bytes: \"Aptos::Transaction\" bytes + BCS bytes of Transaction.\n   * 2. Apply hash algorithm SHA3-256 to the hash message bytes.\n   * 3. Hex-encode the hash bytes with 0x prefix.\n   *\n   * @returns `true` if transaction is in pending state and `false` otherwise\n   */\n  async transactionPending(txnHash: string): Promise<boolean> {\n    try {\n      const response = await this.client.transactions.getTransactionByHash(txnHash);\n      return response.type === \"pending_transaction\";\n    } catch (e: any) {\n      if (e?.status === 404) {\n        return true;\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * Wait for a transaction to move past pending state.\n   *\n   * There are 4 possible outcomes:\n   * 1. Transaction is processed and successfully committed to the blockchain.\n   * 2. Transaction is rejected for some reason, and is therefore not committed\n   *    to the blockchain.\n   * 3. Transaction is committed but execution failed, meaning no changes were\n   *    written to the blockchain state.\n   * 4. Transaction is not processed within the specified timeout.\n   *\n   * In case 1, this function resolves with the transaction response returned\n   * by the API.\n   *\n   * In case 2, the function will throw an ApiError, likely with an HTTP status\n   * code indicating some problem with the request (e.g. 400).\n   *\n   * In case 3, if `checkSuccess` is false (the default), this function returns\n   * the transaction response just like in case 1, in which the `success` field\n   * will be false. If `checkSuccess` is true, it will instead throw a\n   * FailedTransactionError.\n   *\n   * In case 4, this function throws a WaitForTransactionError.\n   *\n   * @param txnHash The hash of a transaction previously submitted to the blockchain.\n   * @param extraArgs.timeoutSecs Timeout in seconds. Defaults to 20 seconds.\n   * @param extraArgs.checkSuccess See above. Defaults to false.\n   * @returns See above.\n   *\n   * @example\n   * ```\n   * const rawTransaction = await this.generateRawTransaction(sender.address(), payload, extraArgs);\n   * const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTransaction);\n   * const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n   * const transasction = await this.aptosClient.waitForTransactionWithResult(pendingTransaction.hash);\n   * ```\n   */\n  async waitForTransactionWithResult(\n    txnHash: string,\n    extraArgs?: { timeoutSecs?: number; checkSuccess?: boolean },\n  ): Promise<Gen.Transaction> {\n    const timeoutSecs = extraArgs?.timeoutSecs ?? DEFAULT_TXN_TIMEOUT_SEC;\n    const checkSuccess = extraArgs?.checkSuccess ?? false;\n\n    let isPending = true;\n    let count = 0;\n    let lastTxn: Gen.Transaction | undefined;\n    while (isPending) {\n      if (count >= timeoutSecs) {\n        break;\n      }\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        lastTxn = await this.client.transactions.getTransactionByHash(txnHash);\n        isPending = lastTxn.type === \"pending_transaction\";\n        if (!isPending) {\n          break;\n        }\n      } catch (e) {\n        // In short, this means we will retry if it was an ApiError and the code was 404 or 5xx.\n        const isApiError = e instanceof Gen.ApiError;\n        const isRequestError = isApiError && e.status !== 404 && e.status >= 400 && e.status < 500;\n        if (!isApiError || isRequestError) {\n          throw e;\n        }\n      }\n      // eslint-disable-next-line no-await-in-loop\n      await sleep(1000);\n      count += 1;\n    }\n\n    // There is a chance that lastTxn is still undefined. Let's throw some error here\n    if (lastTxn === undefined) {\n      throw new Error(`Waiting for transaction ${txnHash} failed`);\n    }\n\n    if (isPending) {\n      throw new WaitForTransactionError(\n        `Waiting for transaction ${txnHash} timed out after ${timeoutSecs} seconds`,\n        lastTxn,\n      );\n    }\n    if (!checkSuccess) {\n      return lastTxn;\n    }\n    if (!(lastTxn as any)?.success) {\n      throw new FailedTransactionError(\n        `Transaction ${txnHash} committed to the blockchain but execution failed`,\n        lastTxn,\n      );\n    }\n    return lastTxn;\n  }\n\n  /**\n   * This function works the same as `waitForTransactionWithResult` except it\n   * doesn't return the transaction in those cases, it returns nothing. For\n   * more information, see the documentation for `waitForTransactionWithResult`.\n   */\n  async waitForTransaction(\n    txnHash: string,\n    extraArgs?: { timeoutSecs?: number; checkSuccess?: boolean },\n  ): Promise<void> {\n    await this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n\n  /**\n   * Queries the latest ledger information\n   * @returns Latest ledger information\n   * @example Example of returned data\n   * ```\n   * {\n   *   chain_id: 15,\n   *   epoch: 6,\n   *   ledgerVersion: \"2235883\",\n   *   ledger_timestamp:\"1654580922321826\"\n   * }\n   * ```\n   */\n  @parseApiError\n  async getLedgerInfo(): Promise<Gen.IndexResponse> {\n    return this.client.general.getLedgerInfo();\n  }\n\n  /**\n   * @returns Current chain id\n   */\n  @Memoize()\n  async getChainId(): Promise<number> {\n    const result = await this.getLedgerInfo();\n    return result.chain_id;\n  }\n\n  /**\n   * Gets a table item for a table identified by the handle and the key for the item.\n   * Key and value types need to be passed in to help with key serialization and value deserialization.\n   * @param handle A pointer to where that table is stored\n   * @param data Object, that describes table item\n   * @param data.key_type Move type of table key (e.g. `vector<u8>`)\n   * @param data.value_type Move type of table value (e.g. `u64`)\n   * @param data.key Value of table key\n   * @returns Table item value rendered in JSON\n   */\n  @parseApiError\n  async getTableItem(handle: string, data: Gen.TableItemRequest, query?: { ledgerVersion?: AnyNumber }): Promise<any> {\n    const tableItem = await this.client.tables.getTableItem(handle, data, query?.ledgerVersion?.toString());\n    return tableItem;\n  }\n\n  /**\n   * Generates a raw transaction out of a transaction payload\n   * @param accountFrom\n   * @param payload\n   * @param extraArgs\n   * @returns A raw transaction object\n   */\n  async generateRawTransaction(\n    accountFrom: HexString,\n    payload: TxnBuilderTypes.TransactionPayload,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<TxnBuilderTypes.RawTransaction> {\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasEstimate }] = await Promise.all([\n      this.getAccount(accountFrom),\n      this.getChainId(),\n      extraArgs?.gasUnitPrice ? Promise.resolve({ gas_estimate: extraArgs.gasUnitPrice }) : this.estimateGasPrice(),\n    ]);\n\n    const { maxGasAmount, gasUnitPrice, expireTimestamp } = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      gasUnitPrice: BigInt(gasEstimate),\n      expireTimestamp: BigInt(Math.floor(Date.now() / 1000) + DEFAULT_TXN_EXP_SEC_FROM_NOW),\n      ...extraArgs,\n    };\n\n    return new TxnBuilderTypes.RawTransaction(\n      TxnBuilderTypes.AccountAddress.fromHex(accountFrom),\n      BigInt(sequenceNumber),\n      payload,\n      maxGasAmount,\n      gasUnitPrice,\n      expireTimestamp,\n      new TxnBuilderTypes.ChainId(chainId),\n    );\n  }\n\n  /**\n   * Helper for generating, signing, and submitting a transaction.\n   *\n   * @param sender AptosAccount of transaction sender.\n   * @param payload Transaction payload.\n   * @param extraArgs Extra args for building the transaction payload.\n   * @returns The transaction response from the API.\n   */\n  async generateSignSubmitTransaction(\n    sender: AptosAccount,\n    payload: TxnBuilderTypes.TransactionPayload,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // :!:>generateSignSubmitTransactionInner\n    const rawTransaction = await this.generateRawTransaction(sender.address(), payload, extraArgs);\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTransaction);\n    const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n    // <:!:generateSignSubmitTransactionInner\n  }\n\n  /**\n   * Publishes a move package. `packageMetadata` and `modules` can be generated with command\n   * `aptos move compile --save-metadata [ --included-artifacts=<...> ]`.\n   * @param sender\n   * @param packageMetadata package metadata bytes\n   * @param modules bytecodes of modules\n   * @param extraArgs\n   * @returns Transaction hash\n   */\n  async publishPackage(\n    sender: AptosAccount,\n    packageMetadata: Bytes,\n    modules: Seq<TxnBuilderTypes.Module>,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const codeSerializer = new Serializer();\n    serializeVector(modules, codeSerializer);\n\n    const payload = new TxnBuilderTypes.TransactionPayloadEntryFunction(\n      TxnBuilderTypes.EntryFunction.natural(\n        \"0x1::code\",\n        \"publish_package_txn\",\n        [],\n        [bcsSerializeBytes(packageMetadata), codeSerializer.getBytes()],\n      ),\n    );\n\n    return this.generateSignSubmitTransaction(sender, payload, extraArgs);\n  }\n\n  /**\n   * Helper for generating, submitting, and waiting for a transaction, and then\n   * checking whether it was committed successfully. Under the hood this is just\n   * `generateSignSubmitTransaction` and then `waitForTransactionWithResult`, see\n   * those for information about the return / error semantics of this function.\n   */\n  async generateSignSubmitWaitForTransaction(\n    sender: AptosAccount,\n    payload: TxnBuilderTypes.TransactionPayload,\n    extraArgs?: OptionalTransactionArgs & {\n      checkSuccess?: boolean;\n      timeoutSecs?: number;\n    },\n  ): Promise<Gen.Transaction> {\n    const txnHash = await this.generateSignSubmitTransaction(sender, payload, extraArgs);\n    return this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n\n  @parseApiError\n  @Memoize({\n    ttlMs: 5 * 60 * 1000, // cache result for 5min\n    tags: [\"gas_estimates\"],\n  })\n  async estimateGasPrice(): Promise<Gen.GasEstimation> {\n    return this.client.transactions.estimateGasPrice();\n  }\n\n  @parseApiError\n  async estimateMaxGasAmount(forAccount: MaybeHexString): Promise<Uint64> {\n    // Only Aptos utility coin is accepted as gas\n    const typeTag = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n\n    const [{ gas_estimate: gasUnitPrice }, resources] = await Promise.all([\n      this.estimateGasPrice(),\n      this.getAccountResources(forAccount),\n    ]);\n\n    const accountResource = resources.find((r) => r.type === typeTag);\n    const balance = BigInt((accountResource!.data as any).coin.value);\n    return balance / BigInt(gasUnitPrice);\n  }\n\n  /**\n   * Rotate an account's auth key. After rotation, only the new private key can be used to sign txns for\n   * the account.\n   * WARNING: You must create a new instance of AptosAccount after using this function.\n   * @param forAccount Account of which the auth key will be rotated\n   * @param toPrivateKeyBytes New private key\n   * @param extraArgs Extra args for building the transaction payload.\n   * @returns PendingTransaction\n   */\n  async rotateAuthKeyEd25519(\n    forAccount: AptosAccount,\n    toPrivateKeyBytes: Uint8Array,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<Gen.PendingTransaction> {\n    const { sequence_number: sequenceNumber, authentication_key: authKey } = await this.getAccount(\n      forAccount.address(),\n    );\n\n    const helperAccount = new AptosAccount(toPrivateKeyBytes);\n\n    const challenge = new TxnBuilderTypes.RotationProofChallenge(\n      TxnBuilderTypes.AccountAddress.CORE_CODE_ADDRESS,\n      \"account\",\n      \"RotationProofChallenge\",\n      BigInt(sequenceNumber),\n      TxnBuilderTypes.AccountAddress.fromHex(forAccount.address()),\n      new TxnBuilderTypes.AccountAddress(new HexString(authKey).toUint8Array()),\n      helperAccount.pubKey().toUint8Array(),\n    );\n\n    const challengeHex = HexString.fromUint8Array(bcsToBytes(challenge));\n\n    const proofSignedByCurrentPrivateKey = forAccount.signHexString(challengeHex);\n\n    const proofSignedByNewPrivateKey = helperAccount.signHexString(challengeHex);\n\n    const payload = new TxnBuilderTypes.TransactionPayloadEntryFunction(\n      TxnBuilderTypes.EntryFunction.natural(\n        \"0x1::account\",\n        \"rotate_authentication_key\",\n        [],\n        [\n          bcsSerializeU8(0), // ed25519 scheme\n          bcsSerializeBytes(forAccount.pubKey().toUint8Array()),\n          bcsSerializeU8(0), // ed25519 scheme\n          bcsSerializeBytes(helperAccount.pubKey().toUint8Array()),\n          bcsSerializeBytes(proofSignedByCurrentPrivateKey.toUint8Array()),\n          bcsSerializeBytes(proofSignedByNewPrivateKey.toUint8Array()),\n        ],\n      ),\n    );\n\n    const rawTransaction = await this.generateRawTransaction(forAccount.address(), payload, extraArgs);\n    const bcsTxn = AptosClient.generateBCSTransaction(forAccount, rawTransaction);\n    return this.submitSignedBCSTransaction(bcsTxn);\n  }\n\n  /**\n   * Lookup the original address by the current derived address\n   * @param addressOrAuthKey\n   * @returns original address\n   */\n  async lookupOriginalAddress(addressOrAuthKey: MaybeHexString): Promise<HexString> {\n    const resource = await this.getAccountResource(\"0x1\", \"0x1::account::OriginatingAddress\");\n\n    const {\n      address_map: { handle },\n    } = resource.data as any;\n\n    const origAddress = await this.getTableItem(handle, {\n      key_type: \"address\",\n      value_type: \"address\",\n      key: HexString.ensure(addressOrAuthKey).hex(),\n    });\n\n    return new HexString(origAddress);\n  }\n\n  /**\n   * Get block by height\n   *\n   * @param blockHeight Block height to lookup.  Starts at 0\n   * @param withTransactions If set to true, include all transactions in the block\n   *\n   * @returns Block\n   */\n  @parseApiError\n  async getBlockByHeight(blockHeight: number, withTransactions?: boolean): Promise<Gen.Block> {\n    return this.client.blocks.getBlockByHeight(blockHeight, withTransactions);\n  }\n\n  /**\n   * Get block by block transaction version\n   *\n   * @param version Ledger version to lookup block information for\n   * @param withTransactions If set to true, include all transactions in the block\n   *\n   * @returns Block\n   */\n  @parseApiError\n  async getBlockByVersion(version: number, withTransactions?: boolean): Promise<Gen.Block> {\n    return this.client.blocks.getBlockByVersion(version, withTransactions);\n  }\n\n  /**\n   * Call for a move view function\n   *\n   * @param payload Transaction payload\n   * @param version (optional) Ledger version to lookup block information for\n   *\n   * @returns MoveValue[]\n   */\n  @parseApiError\n  async view(payload: Gen.ViewRequest, ledger_version?: string): Promise<Gen.MoveValue[]> {\n    return this.client.view.view(payload, ledger_version);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  clearCache(tags: string[]) {\n    clear(tags);\n  }\n}\n\nexport class ApiError extends Error {\n  constructor(\n    public readonly status: number,\n    public readonly message: string,\n    public readonly errorCode?: string,\n    public readonly vmErrorCode?: string,\n  ) {\n    super(message);\n  }\n}\n\n/**\n * This error is used by `waitForTransactionWithResult` when waiting for a\n * transaction times out.\n */\nexport class WaitForTransactionError extends Error {\n  public readonly lastSubmittedTransaction: Gen.Transaction | undefined;\n\n  constructor(message: string, lastSubmittedTransaction: Gen.Transaction | undefined) {\n    super(message);\n    this.lastSubmittedTransaction = lastSubmittedTransaction;\n  }\n}\n\n/**\n * This error is used by `waitForTransactionWithResult` if `checkSuccess` is true.\n * See that function for more information.\n */\nexport class FailedTransactionError extends Error {\n  public readonly transaction: Gen.Transaction;\n\n  constructor(message: string, transaction: Gen.Transaction) {\n    super(message);\n    this.transaction = transaction;\n  }\n}\n\n/**\n * Creates a decorator to parse Gen.ApiError and return a wrapped error that is more developer friendly\n */\nfunction parseApiError(target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n  const childFunction = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = async function wrapper(...args: any[]) {\n    try {\n      // We need to explicitly await here so that the function is called and\n      // potentially throws an error. If we just return without awaiting, the\n      // promise is returned directly and the catch block cannot trigger.\n      const res = await childFunction.apply(this, [...args]);\n      return res;\n    } catch (e) {\n      if (e instanceof Gen.ApiError) {\n        throw new ApiError(\n          e.status,\n          JSON.stringify({ message: e.message, ...e.body }),\n          e.body?.error_code,\n          e.body?.vm_error_code,\n        );\n      }\n      throw e;\n    }\n  };\n  return descriptor;\n}\n","import { AptosClient } from \"./aptos_client\";\nimport { IndexerClient } from \"./indexer\";\n\nimport * as Gen from \"../generated/index\";\nimport { CustomEndpoints, Network, NetworkToIndexerAPI, NetworkToNodeAPI } from \"../utils\";\n\ntype NetworkWithCustom = Network | \"CUSTOM\";\n/**\n * Builds a Provider class with an aptos client configured to connect to an Aptos node\n * and indexer client configured to connect to Aptos Indexer.\n *\n * It creates AptosClient and IndexerClient instances based on the network or custom endpoints provided.\n *\n * This class holds both AptosClient and IndexerClient classes's methods and properties so we\n * can instantiate the Provider class and use it to query full node and/or Indexer.\n *\n * @example An example of how to use this class\n * ```\n * const provider = new Provider(Network.DEVNET)\n * const account = await provider.getAccount(\"0x123\");\n * const accountNFTs = await provider.getAccountNFTs(\"0x123\");\n * ```\n *\n * @param network enum of type Network - MAINNET | TESTNET | DEVENET or custom endpoints of type CustomEndpoints\n * @param config AptosClient config arg - additional configuration options for the generated Axios client.\n */\nexport class Provider {\n  aptosClient: AptosClient;\n\n  indexerClient: IndexerClient;\n\n  network: NetworkWithCustom;\n\n  constructor(\n    network: Network | CustomEndpoints,\n    config?: Partial<Gen.OpenAPIConfig>,\n    doNotFixNodeUrl: boolean = false,\n  ) {\n    let fullNodeUrl = null;\n    let indexerUrl = null;\n\n    if (typeof network === \"object\" && isCustomEndpoints(network)) {\n      fullNodeUrl = network.fullnodeUrl;\n      indexerUrl = network.indexerUrl;\n      this.network = \"CUSTOM\";\n    } else {\n      fullNodeUrl = NetworkToNodeAPI[network];\n      indexerUrl = NetworkToIndexerAPI[network];\n      this.network = network;\n    }\n\n    if (!fullNodeUrl || !indexerUrl) {\n      throw new Error(\"network is not provided\");\n    }\n\n    this.aptosClient = new AptosClient(fullNodeUrl, config, doNotFixNodeUrl);\n    this.indexerClient = new IndexerClient(indexerUrl);\n  }\n}\n\nexport interface Provider extends AptosClient, IndexerClient {}\n\n/**\nIn TypeScript, we can’t inherit or extend from more than one class,\nMixins helps us to get around that by creating a partial classes \nthat we can combine to form a single class that contains all the methods and properties from the partial classes.\n{@link https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern}\n\nHere, we combine AptosClient and IndexerClient classes into one Provider class that holds all \nmethods and properties from both classes.\n*/\nfunction applyMixin(targetClass: any, baseClass: any, baseClassProp: string) {\n  Object.getOwnPropertyNames(baseClass.prototype).forEach((propertyName) => {\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(baseClass.prototype, propertyName);\n    if (!propertyDescriptor) return;\n    // eslint-disable-next-line func-names\n    propertyDescriptor.value = function (...args: any) {\n      return (this as any)[baseClassProp][propertyName](...args);\n    };\n    Object.defineProperty(targetClass.prototype, propertyName, propertyDescriptor);\n  });\n}\n\napplyMixin(Provider, AptosClient, \"aptosClient\");\napplyMixin(Provider, IndexerClient, \"indexerClient\");\n\n// use exhaustive type predicates\nfunction isCustomEndpoints(network: CustomEndpoints): network is CustomEndpoints {\n  return (\n    network.fullnodeUrl !== undefined &&\n    typeof network.fullnodeUrl === \"string\" &&\n    network.indexerUrl !== undefined &&\n    typeof network.indexerUrl === \"string\"\n  );\n}\n","import { Bytes, Deserializer, Serializer } from \"../bcs\";\nimport { serializeArg } from \"../transaction_builder/builder_utils\";\nimport {\n  stringStructTag,\n  TypeTag,\n  TypeTagAddress,\n  TypeTagBool,\n  TypeTagParser,\n  TypeTagStruct,\n  TypeTagU128,\n  TypeTagU64,\n  TypeTagU8,\n} from \"../aptos_types\";\nimport { HexString } from \"./hex_string\";\n\nexport class PropertyValue {\n  type: string;\n\n  value: any;\n\n  constructor(type: string, value: string) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class PropertyMap {\n  data: { [key: string]: PropertyValue };\n\n  constructor() {\n    this.data = {};\n  }\n\n  setProperty(key: string, value: PropertyValue) {\n    this.data[key] = value;\n  }\n}\n\nexport function getPropertyType(typ: string): TypeTag {\n  let typeTag: TypeTag;\n  if (typ === \"string\" || typ === \"String\") {\n    typeTag = new TypeTagStruct(stringStructTag);\n  } else {\n    typeTag = new TypeTagParser(typ).parseTypeTag();\n  }\n  return typeTag;\n}\n\nexport function getPropertyValueRaw(values: Array<string>, types: Array<string>): Array<Bytes> {\n  if (values.length !== types.length) {\n    throw new Error(\"Length of property values and types not match\");\n  }\n\n  const results = new Array<Bytes>();\n  types.forEach((typ, index) => {\n    try {\n      const typeTag = getPropertyType(typ);\n      const serializer = new Serializer();\n      serializeArg(values[index], typeTag, serializer);\n      results.push(serializer.getBytes());\n    } catch (error) {\n      // if not support type, just use the raw string bytes\n      results.push(new TextEncoder().encode(values[index]));\n    }\n  });\n  return results;\n}\n\nexport function getSinglePropertyValueRaw(value: string, type: string): Uint8Array {\n  if (!value || !type) {\n    throw new Error(\"value or type can not be empty\");\n  }\n\n  try {\n    const typeTag = getPropertyType(type);\n    const serializer = new Serializer();\n    serializeArg(value, typeTag, serializer);\n    return serializer.getBytes();\n  } catch (error) {\n    // if not support type, just use the raw string bytes\n    return new TextEncoder().encode(value);\n  }\n}\n\nexport function deserializePropertyMap(rawPropertyMap: any): PropertyMap {\n  const entries = rawPropertyMap.map.data;\n  const pm = new PropertyMap();\n  entries.forEach((prop: any) => {\n    const { key } = prop;\n    const val: string = prop.value.value;\n    const typ: string = prop.value.type;\n    const typeTag = getPropertyType(typ);\n    const newValue = deserializeValueBasedOnTypeTag(typeTag, val);\n    const pv = new PropertyValue(typ, newValue);\n    pm.setProperty(key, pv);\n  });\n  return pm;\n}\n\nexport function deserializeValueBasedOnTypeTag(tag: TypeTag, val: string): string {\n  const de = new Deserializer(new HexString(val).toUint8Array());\n  let res: string = \"\";\n  if (tag instanceof TypeTagU8) {\n    res = de.deserializeU8().toString();\n  } else if (tag instanceof TypeTagU64) {\n    res = de.deserializeU64().toString();\n  } else if (tag instanceof TypeTagU128) {\n    res = de.deserializeU128().toString();\n  } else if (tag instanceof TypeTagBool) {\n    res = de.deserializeBool() ? \"true\" : \"false\";\n  } else if (tag instanceof TypeTagAddress) {\n    res = HexString.fromUint8Array(de.deserializeFixedBytes(32)).hex();\n  } else if (tag instanceof TypeTagStruct && (tag as TypeTagStruct).isStringTypeTag()) {\n    res = de.deserializeStr();\n  } else {\n    res = val;\n  }\n  return res;\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { deserializePropertyMap, PropertyMap, PropertyValue } from \"../utils/property_map_serde\";\n\nexport { PropertyMap, PropertyValue };\nexport class TokenData {\n  /** Unique name within this creator's account for this Token's collection */\n  collection: string;\n\n  /** Description of Token */\n  description: string;\n\n  /** Name of Token */\n  name: string;\n\n  /** Optional maximum number of this Token */\n  maximum?: number;\n\n  /** Total number of this type of Token */\n  supply: number;\n\n  /** URL for additional information / media */\n  uri: string;\n\n  /** default properties of token data */\n  default_properties: PropertyMap;\n\n  /** mutability config of tokendata fields */\n  mutability_config: boolean[];\n\n  constructor(\n    collection: string,\n    description: string,\n    name: string,\n    maximum: number,\n    supply: number,\n    uri: string,\n    default_properties: any,\n    mutability_config: boolean[],\n  ) {\n    this.collection = collection;\n    this.description = description;\n    this.name = name;\n    this.maximum = maximum;\n    this.supply = supply;\n    this.uri = uri;\n    this.default_properties = deserializePropertyMap(default_properties);\n    this.mutability_config = mutability_config;\n  }\n}\n\nexport interface TokenDataId {\n  /** Token creator address */\n  creator: string;\n\n  /** Unique name within this creator's account for this Token's collection */\n  collection: string;\n\n  /** Name of Token */\n  name: string;\n}\n\nexport interface TokenId {\n  token_data_id: TokenDataId;\n\n  /** version number of the property map */\n  property_version: string;\n}\n\n/** server will return string for u64 */\ntype U64 = string;\n\nexport class Token {\n  id: TokenId;\n\n  /** server will return string for u64 */\n  amount: U64;\n\n  /** the property map of the token */\n  token_properties: PropertyMap;\n\n  constructor(id: TokenId, amount: U64, token_properties: any) {\n    this.id = id;\n    this.amount = amount;\n    this.token_properties = deserializePropertyMap(token_properties);\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable max-len */\n\nimport { AptosAccount } from \"../account/aptos_account\";\nimport { AptosClient, OptionalTransactionArgs } from \"../providers/aptos_client\";\nimport * as TokenTypes from \"../aptos_types/token_types\";\nimport * as Gen from \"../generated/index\";\nimport { HexString, MaybeHexString } from \"../utils\";\nimport { TransactionBuilder, TransactionBuilderRemoteABI, TxnBuilderTypes } from \"../transaction_builder\";\nimport { MAX_U64_BIG_INT } from \"../bcs/consts\";\nimport { AnyNumber, bcsToBytes, Bytes } from \"../bcs\";\nimport { getPropertyValueRaw, PropertyMap } from \"../utils/property_map_serde\";\nimport { Token, TokenData } from \"../aptos_types/token_types\";\n\n/**\n * Class for creating, minting and managing minting NFT collections and tokens\n */\nexport class TokenClient {\n  aptosClient: AptosClient;\n\n  /**\n   * Creates new TokenClient instance\n   *\n   * @param aptosClient AptosClient instance\n   */\n  constructor(aptosClient: AptosClient) {\n    this.aptosClient = aptosClient;\n  }\n\n  /**\n   * Creates a new NFT collection within the specified account\n   *\n   * @param account AptosAccount where collection will be created\n   * @param name Collection name\n   * @param description Collection description\n   * @param uri URL to additional info about collection\n   * @param maxAmount Maximum number of `token_data` allowed within this collection\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createCollection\n  async createCollection(\n    account: AptosAccount,\n    name: string,\n    description: string,\n    uri: string,\n    maxAmount: AnyNumber = MAX_U64_BIG_INT,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // <:!:createCollection\n\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_collection_script\",\n      [],\n      [name, description, uri, maxAmount, [false, false, false]],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Creates a new NFT within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collectionName Name of collection, that token belongs to\n   * @param name Token name\n   * @param description Token description\n   * @param supply Token supply\n   * @param uri URL to additional info about token\n   * @param max The maxium of tokens can be minted from this token\n   * @param royalty_payee_address the address to receive the royalty, the address can be a shared account address.\n   * @param royalty_points_denominator the denominator for calculating royalty\n   * @param royalty_points_numerator the numerator for calculating royalty\n   * @param property_keys the property keys for storing on-chain properties\n   * @param property_values the property values to be stored on-chain\n   * @param property_types the type of property values\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createToken\n  async createToken(\n    account: AptosAccount,\n    collectionName: string,\n    name: string,\n    description: string,\n    supply: number,\n    uri: string,\n    max: AnyNumber = MAX_U64_BIG_INT,\n    royalty_payee_address: MaybeHexString = account.address(),\n    royalty_points_denominator: number = 0,\n    royalty_points_numerator: number = 0,\n    property_keys: Array<string> = [],\n    property_values: Array<string> = [],\n    property_types: Array<string> = [],\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // <:!:createToken\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n\n    const rawTxn = await builder.build(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        [false, false, false, false, false],\n        property_keys,\n        getPropertyValueRaw(property_values, property_types),\n        property_types,\n      ],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Creates a new NFT within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collectionName Name of collection, that token belongs to\n   * @param name Token name\n   * @param description Token description\n   * @param supply Token supply\n   * @param uri URL to additional info about token\n   * @param max The maxium of tokens can be minted from this token\n   * @param royalty_payee_address the address to receive the royalty, the address can be a shared account address.\n   * @param royalty_points_denominator the denominator for calculating royalty\n   * @param royalty_points_numerator the numerator for calculating royalty\n   * @param property_keys the property keys for storing on-chain properties\n   * @param property_values the property values to be stored on-chain\n   * @param property_types the type of property values\n   * @param mutability_config configs which field is mutable\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>createToken\n  async createTokenWithMutabilityConfig(\n    account: AptosAccount,\n    collectionName: string,\n    name: string,\n    description: string,\n    supply: AnyNumber,\n    uri: string,\n    max: AnyNumber = MAX_U64_BIG_INT,\n    royalty_payee_address: MaybeHexString = account.address(),\n    royalty_points_denominator: AnyNumber = 0,\n    royalty_points_numerator: AnyNumber = 0,\n    property_keys: Array<string> = [],\n    property_values: Array<Bytes> = [],\n    property_types: Array<string> = [],\n    mutability_config: Array<boolean> = [false, false, false, false, false],\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    // <:!:createToken\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        mutability_config,\n        property_keys,\n        property_values,\n        property_types,\n      ],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Transfers specified amount of tokens from account to receiver\n   *\n   * @param account AptosAccount where token from which tokens will be transfered\n   * @param receiver  Hex-encoded 32 byte Aptos account address to which tokens will be transfered\n   * @param creator Hex-encoded 32 byte Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async offerToken(\n    account: AptosAccount,\n    receiver: MaybeHexString,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    amount: number,\n    property_version: number = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version, amount],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Claims a token on specified account\n   *\n   * @param account AptosAccount which will claim token\n   * @param sender Hex-encoded 32 byte Aptos account address which holds a token\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async claimToken(\n    account: AptosAccount,\n    sender: MaybeHexString,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    property_version: number = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::claim_script\",\n      [],\n      [sender, creator, collectionName, name, property_version],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Removes a token from pending claims list\n   *\n   * @param account AptosAccount which will remove token from pending list\n   * @param receiver Hex-encoded 32 byte Aptos account address which had to claim token\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection where token is strored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async cancelTokenOffer(\n    account: AptosAccount,\n    receiver: MaybeHexString,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    property_version: number = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::cancel_offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Directly transfer the specified amount of tokens from account to receiver\n   * using a single multi signature transaction.\n   *\n   * @param sender AptosAccount where token from which tokens will be transfered\n   * @param receiver Hex-encoded 32 byte Aptos account address to which tokens will be transfered\n   * @param creator Hex-encoded 32 byte Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns The hash of the transaction submitted to the API\n   */\n  async directTransferToken(\n    sender: AptosAccount,\n    receiver: AptosAccount,\n    creator: MaybeHexString,\n    collectionName: string,\n    name: string,\n    amount: AnyNumber,\n    propertyVersion: AnyNumber = 0,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::direct_transfer_script\",\n      [],\n      [creator, collectionName, name, propertyVersion, amount],\n    );\n\n    const multiAgentTxn = new TxnBuilderTypes.MultiAgentRawTransaction(rawTxn, [\n      TxnBuilderTypes.AccountAddress.fromHex(receiver.address()),\n    ]);\n\n    const senderSignature = new TxnBuilderTypes.Ed25519Signature(\n      sender.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array(),\n    );\n\n    const senderAuthenticator = new TxnBuilderTypes.AccountAuthenticatorEd25519(\n      new TxnBuilderTypes.Ed25519PublicKey(sender.signingKey.publicKey),\n      senderSignature,\n    );\n\n    const receiverSignature = new TxnBuilderTypes.Ed25519Signature(\n      receiver.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array(),\n    );\n\n    const receiverAuthenticator = new TxnBuilderTypes.AccountAuthenticatorEd25519(\n      new TxnBuilderTypes.Ed25519PublicKey(receiver.signingKey.publicKey),\n      receiverSignature,\n    );\n\n    const multiAgentAuthenticator = new TxnBuilderTypes.TransactionAuthenticatorMultiAgent(\n      senderAuthenticator,\n      [TxnBuilderTypes.AccountAddress.fromHex(receiver.address())], // Secondary signer addresses\n      [receiverAuthenticator], // Secondary signer authenticators\n    );\n\n    const bcsTxn = bcsToBytes(new TxnBuilderTypes.SignedTransaction(rawTxn, multiAgentAuthenticator));\n\n    const transactionRes = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n\n    return transactionRes.hash;\n  }\n\n  /**\n   * User opt-in or out direct transfer through a boolean flag\n   *\n   * @param sender AptosAccount where the token will be transferred\n   * @param optIn boolean value indicates user want to opt-in or out of direct transfer\n   * @returns The hash of the transaction submitted to the API\n   */\n  async optInTokenTransfer(sender: AptosAccount, optIn: boolean, extraArgs?: OptionalTransactionArgs): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\"0x3::token::opt_in_direct_transfer\", [], [optIn]);\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Directly transfer token to a receiver. The receiver should have opted in to direct transfer\n   *\n   * @param sender AptosAccount where the token will be transferred\n   * @param creator  address of the token creator\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap\n   * @param amount Amount of tokens which will be transfered\n   * @returns The hash of the transaction submitted to the API\n   */\n  async transferWithOptIn(\n    sender: AptosAccount,\n    creator: MaybeHexString,\n    collectionName: string,\n    tokenName: string,\n    propertyVersion: AnyNumber,\n    receiver: MaybeHexString,\n    amount: AnyNumber,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::transfer_with_opt_in\",\n      [],\n      [creator, collectionName, tokenName, propertyVersion, receiver, amount],\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * BurnToken by Creator\n   *\n   * @param creator creator of the token\n   * @param ownerAddress address of the token owner\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnByCreator(\n    creator: AptosAccount,\n    ownerAddress: MaybeHexString,\n    collection: String,\n    name: String,\n    PropertyVersion: AnyNumber,\n    amount: AnyNumber,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: creator.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::burn_by_creator\",\n      [],\n      [ownerAddress, collection, name, PropertyVersion, amount],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(creator, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * BurnToken by Owner\n   *\n   * @param owner creator of the token\n   * @param creatorAddress address of the token creator\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnByOwner(\n    owner: AptosAccount,\n    creatorAddress: MaybeHexString,\n    collection: String,\n    name: String,\n    PropertyVersion: AnyNumber,\n    amount: AnyNumber,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: owner.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::burn\",\n      [],\n      [creatorAddress, collection, name, PropertyVersion, amount],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * creator mutates the properties of the tokens\n   *\n   * @param account AptosAccount who modifies the token properties\n   * @param tokenOwner the address of account owning the token\n   * @param creator the creator of the token\n   * @param collection_name the name of the token collection\n   * @param tokenName the name of created token\n   * @param propertyVersion the property_version of the token to be modified\n   * @param amount the number of tokens to be modified\n   *\n   * @returns The hash of the transaction submitted to the API\n   */\n  async mutateTokenProperties(\n    account: AptosAccount,\n    tokenOwner: HexString,\n    creator: HexString,\n    collection_name: string,\n    tokenName: string,\n    propertyVersion: AnyNumber,\n    amount: AnyNumber,\n    keys: Array<string>,\n    values: Array<Bytes>,\n    types: Array<string>,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::mutate_token_properties\",\n      [],\n      [tokenOwner, creator, collection_name, tokenName, propertyVersion, amount, keys, values, types],\n    );\n\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Queries collection data\n   * @param creator Hex-encoded 32 byte Aptos account address which created a collection\n   * @param collectionName Collection name\n   * @returns Collection data in below format\n   * ```\n   *  Collection {\n   *    // Describes the collection\n   *    description: string,\n   *    // Unique name within this creators account for this collection\n   *    name: string,\n   *    // URL for additional information/media\n   *    uri: string,\n   *    // Total number of distinct Tokens tracked by the collection\n   *    count: number,\n   *    // Optional maximum number of tokens allowed within this collections\n   *    maximum: number\n   *  }\n   * ```\n   */\n  async getCollectionData(creator: MaybeHexString, collectionName: string): Promise<any> {\n    const resources = await this.aptosClient.getAccountResources(creator);\n    const accountResource: { type: Gen.MoveStructTag; data: any } = resources.find(\n      (r) => r.type === \"0x3::token::Collections\",\n    )!;\n    const { handle }: { handle: string } = accountResource.data.collection_data;\n    const getCollectionTableItemRequest: Gen.TableItemRequest = {\n      key_type: \"0x1::string::String\",\n      value_type: \"0x3::token::CollectionData\",\n      key: collectionName,\n    };\n\n    const collectionTable = await this.aptosClient.getTableItem(handle, getCollectionTableItemRequest);\n    return collectionTable;\n  }\n\n  /**\n   * Queries token data from collection\n   *\n   * @param creator Hex-encoded 32 byte Aptos account address which created a token\n   * @param collectionName Name of collection, which holds a token\n   * @param tokenName Token name\n   * @returns Token data in below format\n   * ```\n   * TokenData {\n   *     // Unique name within this creators account for this Token's collection\n   *     collection: string;\n   *     // Describes this Token\n   *     description: string;\n   *     // The name of this Token\n   *     name: string;\n   *     // Optional maximum number of this type of Token.\n   *     maximum: number;\n   *     // Total number of this type of Token\n   *     supply: number;\n   *     /// URL for additional information / media\n   *     uri: string;\n   *   }\n   * ```\n   */\n  // :!:>getTokenData\n  async getTokenData(\n    creator: MaybeHexString,\n    collectionName: string,\n    tokenName: string,\n  ): Promise<TokenTypes.TokenData> {\n    const creatorHex = creator instanceof HexString ? creator.hex() : creator;\n    const collection: { type: Gen.MoveStructTag; data: any } = await this.aptosClient.getAccountResource(\n      creatorHex,\n      \"0x3::token::Collections\",\n    );\n    const { handle } = collection.data.token_data;\n    const tokenDataId = {\n      creator: creatorHex,\n      collection: collectionName,\n      name: tokenName,\n    };\n\n    const getTokenTableItemRequest: Gen.TableItemRequest = {\n      key_type: \"0x3::token::TokenDataId\",\n      value_type: \"0x3::token::TokenData\",\n      key: tokenDataId,\n    };\n\n    // We know the response will be a struct containing TokenData, hence the\n    // implicit cast.\n    const rawTokenData = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n    return new TokenData(\n      rawTokenData.collection,\n      rawTokenData.description,\n      rawTokenData.name,\n      rawTokenData.maximum,\n      rawTokenData.supply,\n      rawTokenData.uri,\n      rawTokenData.default_properties,\n      rawTokenData.mutability_config,\n    );\n  } // <:!:getTokenData\n\n  /**\n   * Queries token balance for the token creator\n   */\n  async getToken(\n    creator: MaybeHexString,\n    collectionName: string,\n    tokenName: string,\n    property_version: string = \"0\",\n  ): Promise<TokenTypes.Token> {\n    const tokenDataId: TokenTypes.TokenDataId = {\n      creator: creator instanceof HexString ? creator.hex() : creator,\n      collection: collectionName,\n      name: tokenName,\n    };\n    return this.getTokenForAccount(creator, {\n      token_data_id: tokenDataId,\n      property_version,\n    });\n  }\n\n  /**\n   * Queries token balance for a token account\n   * @param account Hex-encoded 32 byte Aptos account address which created a token\n   * @param tokenId token id\n   *\n   * TODO: Update this:\n   * @example\n   * ```\n   * {\n   *   creator: '0x1',\n   *   collection: 'Some collection',\n   *   name: 'Awesome token'\n   * }\n   * ```\n   * @returns Token object in below format\n   * ```\n   * Token {\n   *   id: TokenId;\n   *   value: number;\n   * }\n   * ```\n   */\n  async getTokenForAccount(account: MaybeHexString, tokenId: TokenTypes.TokenId): Promise<TokenTypes.Token> {\n    const tokenStore: { type: Gen.MoveStructTag; data: any } = await this.aptosClient.getAccountResource(\n      account instanceof HexString ? account.hex() : account,\n      \"0x3::token::TokenStore\",\n    );\n    const { handle } = tokenStore.data.tokens;\n\n    const getTokenTableItemRequest: Gen.TableItemRequest = {\n      key_type: \"0x3::token::TokenId\",\n      value_type: \"0x3::token::Token\",\n      key: tokenId,\n    };\n\n    try {\n      const rawToken = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n      return new Token(rawToken.id, rawToken.amount, rawToken.token_properties);\n    } catch (error: any) {\n      if (error?.status === 404) {\n        return {\n          id: tokenId,\n          amount: \"0\",\n          token_properties: new PropertyMap(),\n        };\n      }\n      return error;\n    }\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable max-len */\n\nimport { AptosAccount } from \"../account/aptos_account\";\nimport { AnyNumber } from \"../bcs\";\nimport { MAX_U64_BIG_INT } from \"../bcs/consts\";\nimport { Provider } from \"../providers\";\nimport { AptosClient, OptionalTransactionArgs } from \"../providers/aptos_client\";\nimport { TransactionBuilderRemoteABI } from \"../transaction_builder\";\nimport { HexString, MaybeHexString } from \"../utils\";\nimport { getPropertyValueRaw, getSinglePropertyValueRaw } from \"../utils/property_map_serde\";\n\nexport interface CreateCollectionOptions {\n  royaltyNumerator?: number;\n  royaltyDenominator?: number;\n  mutableDescription?: boolean;\n  mutableRoyalty?: boolean;\n  mutableURI?: boolean;\n  mutableTokenDescription?: boolean;\n  mutableTokenName?: boolean;\n  mutableTokenProperties?: boolean;\n  mutableTokenURI?: boolean;\n  tokensBurnableByCreator?: boolean;\n  tokensFreezableByCreator?: boolean;\n}\n\nconst PropertyTypeMap = {\n  BOOLEAN: \"bool\",\n  U8: \"u8\",\n  U16: \"u16\",\n  U32: \"u32\",\n  U64: \"u64\",\n  U128: \"u128\",\n  U256: \"u256\",\n  ADDRESS: \"address\",\n  VECTOR: \"vector<u8>\",\n  STRING: \"string\",\n};\n\nexport type PropertyType = keyof typeof PropertyTypeMap;\n\n/**\n * Class for managing aptos_token\n */\nexport class AptosToken {\n  readonly provider: Provider;\n\n  private readonly tokenType: string = \"0x4::token::Token\";\n\n  /**\n   * Creates new AptosToken instance\n   *\n   * @param provider Provider instance\n   */\n  constructor(provider: Provider) {\n    this.provider = provider;\n  }\n\n  private async submitTransaction(\n    account: AptosAccount,\n    funcName: string,\n    typeArgs: string[],\n    args: any[],\n    extraArgs?: OptionalTransactionArgs,\n  ) {\n    const builder = new TransactionBuilderRemoteABI(this.provider, {\n      sender: account.address(),\n      ...extraArgs,\n    });\n    const rawTxn = await builder.build(`0x4::aptos_token::${funcName}`, typeArgs, args);\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n\n  /**\n   * Creates a new collection within the specified account\n   *\n   * @param creator AptosAccount where collection will be created\n   * @param description Collection description\n   * @param name Collection name\n   * @param uri URL to additional info about collection\n   * @param options CreateCollectionOptions type. By default all values set to `true` or `0`\n   * @returns The hash of the transaction submitted to the API\n   */\n  async createCollection(\n    creator: AptosAccount,\n    description: string,\n    name: string,\n    uri: string,\n    maxSupply: AnyNumber = MAX_U64_BIG_INT,\n    options?: CreateCollectionOptions,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"create_collection\",\n      [],\n      [\n        description,\n        maxSupply,\n        name,\n        uri,\n        options?.mutableDescription ?? true,\n        options?.mutableRoyalty ?? true,\n        options?.mutableURI ?? true,\n        options?.mutableTokenDescription ?? true,\n        options?.mutableTokenName ?? true,\n        options?.mutableTokenProperties ?? true,\n        options?.mutableTokenURI ?? true,\n        options?.tokensBurnableByCreator ?? true,\n        options?.tokensFreezableByCreator ?? true,\n        options?.royaltyNumerator ?? 0,\n        options?.royaltyDenominator ?? 0,\n      ],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Mint a new token within the specified account\n   *\n   * @param account AptosAccount where token will be created\n   * @param collection Name of collection, that token belongs to\n   * @param description Token description\n   * @param name Token name\n   * @param uri URL to additional info about token\n   * @param propertyKeys the property keys for storing on-chain properties\n   * @param propertyTypes the type of property values\n   * @param propertyValues the property values to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async mint(\n    account: AptosAccount,\n    collection: string,\n    description: string,\n    name: string,\n    uri: string,\n    propertyKeys: Array<string> = [],\n    propertyTypes: Array<string> = [],\n    propertyValues: Array<string> = [],\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      account,\n      \"mint\",\n      [],\n      [\n        collection,\n        description,\n        name,\n        uri,\n        propertyKeys,\n        propertyTypes,\n        getPropertyValueRaw(propertyValues, propertyTypes),\n      ],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Mint a soul bound token into a recipient's account\n   *\n   * @param account AptosAccount that mints the token\n   * @param collection Name of collection, that token belongs to\n   * @param description Token description\n   * @param name Token name\n   * @param uri URL to additional info about token\n   * @param recipient AptosAccount where token will be created\n   * @param propertyKeys the property keys for storing on-chain properties\n   * @param propertyTypes the type of property values\n   * @param propertyValues the property values to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async mintSoulBound(\n    account: AptosAccount,\n    collection: string,\n    description: string,\n    name: string,\n    uri: string,\n    recipient: AptosAccount,\n    propertyKeys: Array<string> = [],\n    propertyTypes: Array<string> = [],\n    propertyValues: Array<string> = [],\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      account,\n      \"mint_soul_bound\",\n      [],\n      [\n        collection,\n        description,\n        name,\n        uri,\n        propertyKeys,\n        propertyTypes,\n        getPropertyValueRaw(propertyValues, propertyTypes),\n        recipient.address().hex(),\n      ],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Burn a token by its creator\n   * @param creator Creator account\n   * @param token Token address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async burnToken(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"burn\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Freeze token transfer ability\n   * @param creator Creator account\n   * @param token Token address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async freezeTokenTransafer(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"freeze_transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Unfreeze token transfer ability\n   * @param creator Creator account\n   * @param token Token address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async unfreezeTokenTransafer(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"unfreeze_transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Set token description\n   * @param creator Creator account\n   * @param token Token address\n   * @param description Token description\n   * @returns The hash of the transaction submitted to the API\n   */\n  async setTokenDescription(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    description: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"set_description\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), description],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Set token name\n   * @param creator Creator account\n   * @param token Token address\n   * @param name Token name\n   * @returns The hash of the transaction submitted to the API\n   */\n  async setTokenName(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    name: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"set_name\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), name],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Set token URI\n   * @param creator Creator account\n   * @param token Token address\n   * @param uri Token uri\n   * @returns The hash of the transaction submitted to the API\n   */\n  async setTokenURI(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    uri: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"set_uri\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), uri],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Add token property\n   * @param creator Creator account\n   * @param token Token address\n   * @param key the property key for storing on-chain property\n   * @param type the type of property value\n   * @param value the property value to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async addTokenProperty(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    propertyKey: string,\n    propertyType: PropertyType,\n    propertyValue: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"add_property\",\n      [tokenType || this.tokenType],\n      [\n        HexString.ensure(token).hex(),\n        propertyKey,\n        PropertyTypeMap[propertyType],\n        getSinglePropertyValueRaw(propertyValue, PropertyTypeMap[propertyType]),\n      ],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Remove token property\n   * @param creator Creator account\n   * @param token Token address\n   * @param key the property key stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async removeTokenProperty(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    propertyKey: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"remove_property\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), propertyKey],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Update token property\n   * @param creator Creator account\n   * @param token Token address\n   * @param key the property key stored on-chain\n   * @param type the property typed stored on-chain\n   * @param value the property value to be stored on-chain\n   * @returns The hash of the transaction submitted to the API\n   */\n  async updateTokenProperty(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    propertyKey: string,\n    propertyType: PropertyType,\n    propertyValue: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    return this.submitTransaction(\n      creator,\n      \"update_property\",\n      [tokenType || this.tokenType],\n      [\n        HexString.ensure(token).hex(),\n        propertyKey,\n        PropertyTypeMap[propertyType],\n        getSinglePropertyValueRaw(propertyValue, PropertyTypeMap[propertyType]),\n      ],\n      extraArgs,\n    );\n  }\n\n  async addTypedProperty(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    propertyKey: string,\n    propertyType: PropertyType,\n    propertyValue: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ) {\n    return this.submitTransaction(\n      creator,\n      \"add_typed_property\",\n      [tokenType || this.tokenType, PropertyTypeMap[propertyType]],\n      [HexString.ensure(token).hex(), propertyKey, propertyValue],\n      extraArgs,\n    );\n  }\n\n  async updateTypedProperty(\n    creator: AptosAccount,\n    token: MaybeHexString,\n    propertyKey: string,\n    propertyType: PropertyType,\n    propertyValue: string,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ) {\n    return this.submitTransaction(\n      creator,\n      \"update_typed_property\",\n      [tokenType || this.tokenType, PropertyTypeMap[propertyType]],\n      [HexString.ensure(token).hex(), propertyKey, propertyValue],\n      extraArgs,\n    );\n  }\n\n  /**\n   * Transfer a token ownership.\n   * We can transfer a token only when the token is not frozen (i.e. owner transfer is not disabled such as for soul bound tokens)\n   * @param owner The account of the current token owner\n   * @param token Token address\n   * @param recipient Recipient address\n   * @returns The hash of the transaction submitted to the API\n   */\n  async transferTokenOwnership(\n    owner: AptosAccount,\n    token: MaybeHexString,\n    recipient: MaybeHexString,\n    tokenType?: string,\n    extraArgs?: OptionalTransactionArgs,\n  ): Promise<string> {\n    const builder = new TransactionBuilderRemoteABI(this.provider.aptosClient, {\n      sender: owner.address(),\n      ...extraArgs,\n    });\n    const rawTxn = await builder.build(\n      \"0x1::object::transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), HexString.ensure(recipient).hex()],\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.provider.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AptosAccount, getAddressFromAccountOrAddress } from \"../account/aptos_account\";\nimport { AptosClient, OptionalTransactionArgs } from \"../providers/aptos_client\";\nimport { MaybeHexString, APTOS_COIN } from \"../utils\";\nimport { TransactionBuilderRemoteABI } from \"../transaction_builder\";\n\n/**\n * Class for working with the coin module, such as transferring coins and\n * checking balances.\n */\nexport class CoinClient {\n  aptosClient: AptosClient;\n\n  /**\n   * Creates new CoinClient instance\n   * @param aptosClient AptosClient instance\n   */\n  constructor(aptosClient: AptosClient) {\n    this.aptosClient = aptosClient;\n  }\n\n  /**\n   * Generate, sign, and submit a transaction to the Aptos blockchain API to\n   * transfer coins from one account to another. By default it transfers\n   * 0x1::aptos_coin::AptosCoin, but you can specify a different coin type\n   * with the `coinType` argument.\n   *\n   * You may set `createReceiverIfMissing` to true if you want to create the\n   * receiver account if it does not exist on chain yet. If you do not set\n   * this to true, the transaction will fail if the receiver account does not\n   * exist on-chain.\n   *\n   * @param from Account sending the coins\n   * @param to Account to receive the coins\n   * @param amount Number of coins to transfer\n   * @param extraArgs Extra args for building the transaction or configuring how\n   * the client should submit and wait for the transaction\n   * @returns The hash of the transaction submitted to the API\n   */\n  // :!:>transfer\n  async transfer(\n    from: AptosAccount,\n    to: AptosAccount | MaybeHexString,\n    amount: number | bigint,\n    extraArgs?: OptionalTransactionArgs & {\n      // The coin type to use, defaults to 0x1::aptos_coin::AptosCoin\n      coinType?: string;\n      // If set, create the `receiver` account if it doesn't exist on-chain.\n      // This is done by calling `0x1::aptos_account::transfer` instead, which\n      // will create the account on-chain first if it doesn't exist before\n      // transferring the coins to it.\n      // If this is the first time an account has received the specified coinType,\n      // and this is set to false, the transaction would fail.\n      createReceiverIfMissing?: boolean;\n    },\n  ): Promise<string> {\n    // If none is explicitly given, use 0x1::aptos_coin::AptosCoin as the coin type.\n    const coinTypeToTransfer = extraArgs?.coinType ?? APTOS_COIN;\n\n    // If we should create the receiver account if it doesn't exist on-chain,\n    // use the `0x1::aptos_account::transfer` function.\n    const func = extraArgs?.createReceiverIfMissing ? \"0x1::aptos_account::transfer_coins\" : \"0x1::coin::transfer\";\n\n    // Get the receiver address from the AptosAccount or MaybeHexString.\n    const toAddress = getAddressFromAccountOrAddress(to);\n\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: from.address(), ...extraArgs });\n    const rawTxn = await builder.build(func, [coinTypeToTransfer], [toAddress, amount]);\n\n    const bcsTxn = AptosClient.generateBCSTransaction(from, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  } // <:!:transfer\n\n  /**\n   * Get the balance of the account. By default it checks the balance of\n   * 0x1::aptos_coin::AptosCoin, but you can specify a different coin type.\n   *\n   * @param account Account that you want to get the balance of.\n   * @param extraArgs Extra args for checking the balance.\n   * @returns Promise that resolves to the balance as a bigint.\n   */\n  // :!:>checkBalance\n  async checkBalance(\n    account: AptosAccount | MaybeHexString,\n    extraArgs?: {\n      // The coin type to use, defaults to 0x1::aptos_coin::AptosCoin\n      coinType?: string;\n    },\n  ): Promise<bigint> {\n    const coinType = extraArgs?.coinType ?? APTOS_COIN;\n    const typeTag = `0x1::coin::CoinStore<${coinType}>`;\n    const address = getAddressFromAccountOrAddress(account);\n    const accountResource = await this.aptosClient.getAccountResource(address, typeTag);\n    return BigInt((accountResource.data as any).coin.value);\n  } // <:!:checkBalance\n}\n","// Copyright © Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/** Faucet creates and funds accounts. This is a thin wrapper around that. */\nimport { AptosClient } from \"../providers/aptos_client\";\nimport { OpenAPIConfig } from \"../generated\";\nimport { AxiosHttpRequest } from \"../generated/core/AxiosHttpRequest\";\nimport { HexString, MaybeHexString, DEFAULT_TXN_TIMEOUT_SEC } from \"../utils\";\n\n/**\n * Class for requsting tokens from faucet\n */\nexport class FaucetClient extends AptosClient {\n  faucetRequester: AxiosHttpRequest;\n\n  /**\n   * Establishes a connection to Aptos node\n   * @param nodeUrl A url of the Aptos Node API endpoint\n   * @param faucetUrl A faucet url\n   * @param config An optional config for inner axios instance\n   * Detailed config description: {@link https://github.com/axios/axios#request-config}\n   */\n  constructor(nodeUrl: string, faucetUrl: string, config?: Partial<OpenAPIConfig>) {\n    super(nodeUrl, config);\n\n    if (!faucetUrl) {\n      throw new Error(\"Faucet URL cannot be empty.\");\n    }\n    // Build a requester configured to talk to the faucet.\n    this.faucetRequester = new AxiosHttpRequest({\n      BASE: faucetUrl,\n      VERSION: config?.VERSION ?? \"0.1.0\",\n      WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n      CREDENTIALS: config?.CREDENTIALS ?? \"include\",\n      TOKEN: config?.TOKEN,\n      USERNAME: config?.USERNAME,\n      PASSWORD: config?.PASSWORD,\n      HEADERS: config?.HEADERS,\n      ENCODE_PATH: config?.ENCODE_PATH,\n    });\n  }\n\n  /**\n   * This creates an account if it does not exist and mints the specified amount of\n   * coins into that account\n   * @param address Hex-encoded 16 bytes Aptos account address wich mints tokens\n   * @param amount Amount of tokens to mint\n   * @param timeoutSecs\n   * @returns Hashes of submitted transactions\n   */\n  async fundAccount(address: MaybeHexString, amount: number, timeoutSecs = DEFAULT_TXN_TIMEOUT_SEC): Promise<string[]> {\n    const tnxHashes = await this.faucetRequester.request<Array<string>>({\n      method: \"POST\",\n      url: \"/mint\",\n      query: {\n        address: HexString.ensure(address).noPrefix(),\n        amount,\n      },\n    });\n\n    const promises: Promise<void>[] = [];\n    for (let i = 0; i < tnxHashes.length; i += 1) {\n      const tnxHash = tnxHashes[i];\n      promises.push(this.waitForTransaction(tnxHash, { timeoutSecs }));\n    }\n    await Promise.all(promises);\n    return tnxHashes;\n  }\n}\n"],"mappings":"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AAM,CACF,KAAM,YACN,WAAY,EAChB,EACA,kBAAmB,CACf,KAAM,YACN,WAAY,EAChB,EACA,gBAAiB,CACb,KAAM,YACN,WAAY,EAChB,EACA,sBAAuB,CACnB,KAAM,WACV,EACA,SAAU,CACN,KAAM,MACN,WAAY,EAChB,EACA,QAAS,CACL,KAAM,UACN,YAAa,yCACb,WAAY,EAChB,EACA,UAAW,CACP,KAAM,SACN,YAAa,6EACb,WAAY,EAChB,EACA,sBAAuB,CACnB,KAAM,YACN,WAAY,EAChB,EACA,QAAS,CACL,KAAM,QACN,SAAU,CACN,KAAM,gBACV,EACA,WAAY,EAChB,EACA,OAAQ,CACJ,KAAM,UACN,WAAY,EAChB,EACA,gBAAiB,CACb,KAAM,MACN,WAAY,EAChB,EACA,eAAgB,CACZ,KAAM,MACN,WAAY,EAChB,EACA,eAAgB,CACZ,KAAM,MACN,WAAY,EAChB,EACA,0BAA2B,CACvB,KAAM,MACN,WAAY,EAChB,EACA,QAAS,CACL,KAAM,qBACN,WAAY,EAChB,EACA,UAAW,CACP,KAAM,sBACV,EACA,OAAQ,CACJ,KAAM,QACN,SAAU,CACN,KAAM,OACV,EACA,WAAY,EAChB,EACA,UAAW,CACP,KAAM,MACN,WAAY,EAChB,CACJ,CACJ,ECtFO,IAAMC,GAAkB,CAC3B,YAAa,6CACb,WAAY,CACR,QAAS,CACL,KAAM,MACN,WAAY,EAChB,EACA,KAAM,CACF,KAAM,YACN,WAAY,EAChB,EACA,gBAAiB,CACb,KAAM,MACN,WAAY,EAChB,EACA,KAAM,CACF,KAAM,WACN,WAAY,EAChB,EACA,KAAM,CACF,YAAa,uCACb,WAAY,CACZ,EACA,WAAY,EAChB,CACJ,CACJ,EC1BO,IAAMC,GAAe,CACxB,YAAa,8CACb,WAAY,CACR,SAAU,CACN,KAAM,kBACN,WAAY,EAChB,EACA,eAAgB,CACZ,KAAM,QACN,SAAU,CACN,KAAM,UACV,EACA,WAAY,EAChB,EACA,UAAW,CACP,KAAM,QACN,SAAU,CACN,WAAY,CACZ,CACJ,EACA,WAAY,EAChB,CACJ,CACJ,ECvBO,IAAMC,GAAe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","names":["require_crypto","__commonJSMin","require_nacl_fast","__commonJSMin","exports","module","nacl","gf","init","i","r","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","x","h","l","vn","xi","y","yi","n","d","crypto_verify_16","crypto_verify_32","core_salsa20","o","p","k","c","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","u","core_hsalsa20","crypto_core_salsa20","out","inp","crypto_core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","m","mpos","b","z","crypto_stream_salsa20","crypto_stream","s","sn","crypto_stream_xor","poly1305","key","t0","t1","t2","t3","t4","t5","t6","t7","bytes","hibit","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","g","mask","f","want","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","a","car25519","v","sel25519","q","t","pack25519","j","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","e","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","crypto_box_afternm","crypto_box_open_afternm","crypto_box","crypto_box_open","K","crypto_hashblocks_hl","hh","hl","wh","wl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","reduce","crypto_sign","sm","smlen","unpackneg","chk","num","den","den2","den4","den6","crypto_sign_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","checkLengths","checkBoxLengths","checkArrayTypes","cleanup","arr","msg","nonce","box","publicKey","secretKey","signedMsg","tmp","mlen","sig","seed","fn","crypto","QUOTA","__require","require_assert","__commonJSMin","exports","number","n","bool","b","bytes","lengths","hash","exists","instance","checkFinished","output","out","min","assert","require_cryptoBrowser","__commonJSMin","exports","require_utils","__commonJSMin","exports","crypto_1","u8","arr","u32","createView","rotr","word","shift","hexes","v","i","bytesToHex","uint8a","hex","hexToBytes","array","j","hexByte","byte","nextTick","asyncLoop","iters","tick","cb","ts","diff","utf8ToBytes","str","toBytes","data","concatBytes","arrays","a","length","result","pad","Hash","isPlainObject","obj","checkOpts","defaults","opts","wrapConstructor","hashConstructor","hashC","message","tmp","wrapConstructorWithOpts","hashCons","msg","randomBytes","bytesLength","require_hmac","__commonJSMin","exports","_assert_js_1","utils_js_1","HMAC","hash","_key","key","blockLen","pad","i","buf","out","to","oHash","iHash","finished","destroyed","outputLen","hmac","message","require_pbkdf2","__commonJSMin","exports","_assert_js_1","hmac_js_1","utils_js_1","pbkdf2Init","hash","_password","_salt","_opts","opts","c","dkLen","asyncTick","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","pbkdf2","arr","view","ti","pos","Ti","ui","i","pbkdf2Async","require_sha2","__commonJSMin","exports","_assert_js_1","utils_js_1","setBigUint64","view","byteOffset","value","isLE","_32n","_u32_max","wh","wl","h","l","SHA2","blockLen","outputLen","padOffset","data","buffer","len","pos","take","dataView","out","i","oview","v","res","to","length","finished","destroyed","require_sha256","__commonJSMin","exports","_sha2_js_1","utils_js_1","Chi","a","b","c","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","view","offset","i","W15","W2","s0","s1","sigma1","T1","T2","require_u64","__commonJSMin","exports","U32_MASK64","_32n","fromBig","n","le","split","lst","Ah","Al","i","h","l","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","require_sha512","__commonJSMin","exports","_sha2_js_1","_u64_js_1","utils_js_1","SHA512_Kh","SHA512_Kl","n","SHA512_W_H","SHA512_W_L","SHA512","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","view","offset","i","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","require_lib","__commonJSMin","exports","assertNumber","n","chain","args","wrap","a","b","c","encode","acc","i","decode","alphabet","digits","input","letter","index","join","separator","from","to","padding","bits","chr","data","end","normalize","fn","convertRadix","pos","res","d","carry","done","digit","digitBase","gcd","radix2carry","convertRadix2","mask","radix","num","bytes","radix2","revPadding","unsafeWrapper","e","checksum","len","payload","newChecksum","oldChecksum","s","genBase58","abc","XMR_BLOCK_LEN","block","str","slice","blockLen","j","base58check","sha256","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","lowered","sepIndex","sum","decodeUnsafe","decodeToBytes","CODERS","coderTypeError","bytesToString","type","stringToBytes","require_bip39","__commonJSMin","exports","_assert_1","pbkdf2_1","sha256_1","sha512_1","utils_1","base_1","isJapanese","wordlist","nfkd","str","normalize","norm","words","assertEntropy","entropy","generateMnemonic","strength","entropyToMnemonic","calcChecksum","bitsLeft","getCoder","i","mnemonicToEntropy","mnemonic","validateMnemonic","e","salt","passphrase","mnemonicToSeed","mnemonicToSeedSync","require_bind","__commonJSMin","exports","module","fn","thisArg","args","i","require_utils","__commonJSMin","exports","module","bind","toString","kindOf","cache","thing","str","kindOfTest","type","isArray","val","isUndefined","isBuffer","isArrayBuffer","isArrayBufferView","result","isString","isNumber","isObject","isPlainObject","prototype","isDate","isFile","isBlob","isFileList","isFunction","isStream","isFormData","pattern","isURLSearchParams","trim","isStandardBrowserEnv","forEach","obj","fn","i","l","key","merge","assignValue","extend","a","b","thisArg","stripBOM","content","inherits","constructor","superConstructor","props","descriptors","toFlatObject","sourceObj","destObj","filter","prop","merged","endsWith","searchString","position","lastIndex","toArray","arr","isTypedArray","TypedArray","require_buildURL","__commonJSMin","exports","module","utils","encode","val","url","params","paramsSerializer","serializedParams","parts","key","v","hashmarkIndex","require_InterceptorManager","__commonJSMin","exports","module","utils","InterceptorManager","fulfilled","rejected","options","id","fn","h","require_normalizeHeaderName","__commonJSMin","exports","module","utils","headers","normalizedName","value","name","require_AxiosError","__commonJSMin","exports","module","utils","AxiosError","message","code","config","request","response","prototype","descriptors","error","customProps","axiosError","obj","require_transitional","__commonJSMin","exports","module","require_toFormData","__commonJSMin","exports","module","utils","toFormData","obj","formData","stack","convertValue","value","build","data","parentKey","key","fullKey","arr","el","require_settle","__commonJSMin","exports","module","AxiosError","resolve","reject","response","validateStatus","require_cookies","__commonJSMin","exports","module","utils","name","value","expires","path","domain","secure","cookie","match","require_isAbsoluteURL","__commonJSMin","exports","module","url","require_combineURLs","__commonJSMin","exports","module","baseURL","relativeURL","require_buildFullPath","__commonJSMin","exports","module","isAbsoluteURL","combineURLs","baseURL","requestedURL","require_parseHeaders","__commonJSMin","exports","module","utils","ignoreDuplicateOf","headers","parsed","key","val","i","line","require_isURLSameOrigin","__commonJSMin","exports","module","utils","msie","urlParsingNode","originURL","resolveURL","url","href","requestURL","parsed","require_CanceledError","__commonJSMin","exports","module","AxiosError","utils","CanceledError","message","require_parseProtocol","__commonJSMin","exports","module","url","match","require_xhr","__commonJSMin","exports","module","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","resolve","reject","requestData","requestHeaders","responseType","onCanceled","done","request","username","password","fullPath","onloadend","responseHeaders","responseData","response","value","err","timeoutErrorMessage","transitional","xsrfValue","val","key","cancel","protocol","require_null","__commonJSMin","exports","module","require_defaults","__commonJSMin","exports","module","utils","normalizeHeaderName","AxiosError","transitionalDefaults","toFormData","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","getDefaultAdapter","adapter","stringifySafely","rawValue","parser","encoder","e","defaults","data","isObjectPayload","contentType","isFileList","_FormData","transitional","silentJSONParsing","forcedJSONParsing","strictJSONParsing","status","method","require_transformData","__commonJSMin","exports","module","utils","defaults","data","headers","fns","context","fn","require_isCancel","__commonJSMin","exports","module","value","require_dispatchRequest","__commonJSMin","exports","module","utils","transformData","isCancel","defaults","CanceledError","throwIfCancellationRequested","config","method","adapter","response","reason","require_mergeConfig","__commonJSMin","exports","module","utils","config1","config2","config","getMergedValue","target","source","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","merge","configValue","require_data","__commonJSMin","exports","module","require_validator","__commonJSMin","exports","module","VERSION","AxiosError","validators","type","i","thing","deprecatedWarnings","validator","version","message","formatMessage","opt","desc","value","opts","assertOptions","options","schema","allowUnknown","keys","result","require_Axios","__commonJSMin","exports","module","utils","buildURL","InterceptorManager","dispatchRequest","mergeConfig","buildFullPath","validator","validators","Axios","instanceConfig","configOrUrl","config","transitional","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","error","fullPath","method","url","generateHTTPMethod","isForm","data","require_CancelToken","__commonJSMin","exports","module","CanceledError","CancelToken","executor","resolvePromise","resolve","token","cancel","i","l","onfulfilled","_resolve","promise","message","listener","index","c","require_spread","__commonJSMin","exports","module","callback","arr","require_isAxiosError","__commonJSMin","exports","module","utils","payload","require_axios","__commonJSMin","exports","module","utils","bind","Axios","mergeConfig","defaults","createInstance","defaultConfig","context","instance","instanceConfig","axios","promises","require_axios","__commonJSMin","exports","module","require_browser","__commonJSMin","exports","module","src_exports","__export","ApiError","AptosAccount","AptosClient","AptosToken","bcs_exports","CoinClient","FailedTransactionError","FaucetClient","HexString","IndexerClient","Network","Provider","TokenClient","token_types_exports","TransactionBuilder","TransactionBuilderABI","TransactionBuilderEd25519","TransactionBuilderMultiEd25519","TransactionBuilderRemoteABI","aptos_types_exports","TypeTagParser","generated_exports","WaitForTransactionError","derivePath","deserializePropertyMap","deserializeValueBasedOnTypeTag","getAddressFromAccountOrAddress","getPropertyValueRaw","import_tweetnacl","bip39","crypto","u32","arr","createView","isLE","hexes","v","i","bytesToHex","uint8a","hex","hexToBytes","array","j","hexByte","byte","utf8ToBytes","str","toBytes","data","Hash","wrapConstructor","hashConstructor","hashC","message","toBytes","tmp","wrapConstructorWithOpts","hashCons","msg","opts","number","n","bool","b","bytes","lengths","hash","exists","instance","checkFinished","output","out","min","assert","assert_default","U32_MASK64","_32n","fromBig","n","le","split","lst","Ah","Al","i","h","l","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64_default","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","t","j","SHA3_IOTA_H","SHA3_IOTA_L","u64_default","rotlH","h","l","s","rotlL","keccakP","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","Keccak","Hash","blockLen","suffix","outputLen","enableXOF","assert_default","u32","data","state","toBytes","len","pos","take","i","out","bufferOut","bytes","to","gen","wrapConstructor","sha3_224","sha3_256","sha3_384","sha3_512","keccak_224","keccak_256","keccak_384","keccak_512","genShake","wrapConstructorWithOpts","opts","shake128","shake256","import_tweetnacl","HMAC","Hash","hash","_key","assert_default","key","toBytes","blockLen","pad","i","buf","out","to","oHash","iHash","finished","destroyed","outputLen","hmac","message","setBigUint64","view","byteOffset","value","isLE","_32n","_u32_max","wh","wl","h","l","SHA2","Hash","blockLen","outputLen","padOffset","createView","data","assert_default","buffer","toBytes","len","pos","take","dataView","out","i","oview","v","res","to","length","finished","destroyed","SHA512_Kh","SHA512_Kl","u64_default","n","SHA512_W_H","SHA512_W_L","SHA512","SHA2","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","view","offset","i","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","wrapConstructor","sha512_256","sha384","pathRegex","replaceDerive","val","HMAC_KEY","HARDENED_OFFSET","getMasterKeyFromSeed","seed","I","hmac","sha512","hexToBytes","IL","IR","CKDPriv","key","chainCode","index","buffer","indexBytes","zero","data","isValidPath","path","pathRegex","replaceDerive","derivePath","seed","offset","HARDENED_OFFSET","key","chainCode","getMasterKeyFromSeed","el","parentKeys","segment","CKDPriv","sleep","timeMs","resolve","DEFAULT_VERSION_PATH_BASE","fixNodeUrl","nodeUrl","out","DEFAULT_MAX_GAS_AMOUNT","DEFAULT_TXN_EXP_SEC_FROM_NOW","DEFAULT_TXN_TIMEOUT_SEC","APTOS_COIN","Memoize","args","hashFunction","ttlMs","tags","target","propertyKey","descriptor","getNewFunction","MemoizeExpiring","clearCacheTagsMap","clear","cleared","tag","maps","mp","originalMethod","propMapName","returnedValue","that","myMap","hashKey","a","timestampKey","isExpired","timestamp","HexString","buffer","arr","bytesToHex","hexString","hexToBytes","paginateWithCursor","apiFunction","accountAddress","limitPerRequest","query","_a","out","cursor","response","HexString","NetworkToIndexerAPI","NetworkToNodeAPI","Network","aptos_types_exports","__export","AccountAddress","AccountAuthenticator","AccountAuthenticatorEd25519","AccountAuthenticatorMultiEd25519","ArgumentABI","AuthenticationKey","ChainId","ChangeSet","Ed25519PublicKey","Ed25519Signature","EntryFunction","EntryFunctionABI","Identifier","Module","ModuleId","MultiAgentRawTransaction","MultiEd25519PublicKey","MultiEd25519Signature","MultiSig","MultiSigTransactionPayload","RawTransaction","RawTransactionWithData","RotationProofChallenge","Script","ScriptABI","SignedTransaction","StructTag","Transaction","TransactionArgument","TransactionArgumentAddress","TransactionArgumentBool","TransactionArgumentU128","TransactionArgumentU16","TransactionArgumentU256","TransactionArgumentU32","TransactionArgumentU64","TransactionArgumentU8","TransactionArgumentU8Vector","TransactionAuthenticator","TransactionAuthenticatorEd25519","TransactionAuthenticatorMultiAgent","TransactionAuthenticatorMultiEd25519","TransactionPayload","TransactionPayloadEntryFunction","TransactionPayloadMultisig","TransactionPayloadScript","TransactionScriptABI","TypeArgumentABI","TypeTag","TypeTagAddress","TypeTagBool","TypeTagParser","TypeTagParserError","TypeTagSigner","TypeTagStruct","TypeTagU128","TypeTagU16","TypeTagU256","TypeTagU32","TypeTagU64","TypeTagU8","TypeTagVector","UserTransaction","WriteSet","stringStructTag","bcs_exports","__export","Deserializer","Serializer","bcsSerializeBool","bcsSerializeBytes","bcsSerializeFixedBytes","bcsSerializeStr","bcsSerializeU128","bcsSerializeU16","bcsSerializeU32","bcsSerializeU8","bcsSerializeUint64","bcsToBytes","deserializeVector","serializeVector","serializeVectorWithFunc","MAX_U8_NUMBER","MAX_U16_NUMBER","MAX_U32_NUMBER","MAX_U64_BIG_INT","MAX_U128_BIG_INT","MAX_U256_BIG_INT","Serializer","bytes","newBuffer","values","fn","bytesLength","value","dv","textEncoder","byteValue","low","MAX_U32_NUMBER","high","MAX_U64_BIG_INT","MAX_U128_BIG_INT","val","valueArray","__decorateClass","checkNumberRange","MAX_U8_NUMBER","MAX_U16_NUMBER","MAX_U256_BIG_INT","minValue","maxValue","message","target","propertyKey","descriptor","childFunction","valueBigInt","Deserializer","data","length","bytes","value","len","bool","low","high","shift","MAX_U32_NUMBER","byte","serializeVector","value","serializer","item","serializeVectorWithFunc","func","Serializer","f","deserializeVector","deserializer","cls","length","list","i","bcsToBytes","bcsSerializeUint64","bcsSerializeU8","bcsSerializeU16","bcsSerializeU32","bcsSerializeU128","bcsSerializeBool","bcsSerializeStr","bcsSerializeBytes","bcsSerializeFixedBytes","_AccountAddress","address","addr","HexString","addressBytes","res","serializer","deserializer","AccountAddress","_Ed25519PublicKey","value","serializer","deserializer","Ed25519PublicKey","_Ed25519Signature","Ed25519Signature","MAX_SIGNATURES_SUPPORTED","MultiEd25519PublicKey","public_keys","threshold","bytes","Ed25519PublicKey","k","i","serializer","deserializer","keys","begin","_MultiEd25519Signature","signatures","bitmap","Ed25519Signature","bits","dupCheckSet","bit","byteOffset","byte","sigs","MultiEd25519Signature","TransactionAuthenticator","deserializer","index","TransactionAuthenticatorEd25519","TransactionAuthenticatorMultiEd25519","TransactionAuthenticatorMultiAgent","public_key","signature","serializer","Ed25519PublicKey","Ed25519Signature","MultiEd25519PublicKey","MultiEd25519Signature","sender","secondary_signer_addresses","secondary_signers","serializeVector","AccountAuthenticator","deserializeVector","AccountAddress","AccountAuthenticatorEd25519","AccountAuthenticatorMultiEd25519","Identifier","value","serializer","deserializer","TypeTag","deserializer","index","TypeTagBool","TypeTagU8","TypeTagU64","TypeTagU128","TypeTagAddress","TypeTagSigner","TypeTagVector","TypeTagStruct","TypeTagU16","TypeTagU32","TypeTagU256","serializer","_deserializer","value","StructTag","AccountAddress","address","module_name","name","type_args","structTag","typeTagStruct","TypeTagParser","serializeVector","moduleName","Identifier","typeArgs","deserializeVector","stringStructTag","bail","message","TypeTagParserError","isWhiteSpace","c","isValidAlphabetic","isGeneric","nextToken","tagStr","pos","res","i","char","tokenize","tokens","token","size","typeTags","targetToken","endToken","allowTraillingComma","tokenTy","tokenVal","moduleTokenTy","module","nameTokenTy","tyTags","idx","RawTransaction","sender","sequence_number","payload","max_gas_amount","gas_unit_price","expiration_timestamp_secs","chain_id","serializer","deserializer","AccountAddress","TransactionPayload","ChainId","Script","code","ty_args","args","serializeVector","deserializeVector","TypeTag","TransactionArgument","EntryFunction","module_name","function_name","module","func","ModuleId","Identifier","item","length","list","i","MultiSigTransactionPayload","transaction_payload","MultiSig","multisig_address","payloadPresent","Module","address","name","moduleId","parts","HexString","ChangeSet","WriteSet","SignedTransaction","raw_txn","authenticator","TransactionAuthenticator","RawTransactionWithData","index","MultiAgentRawTransaction","secondary_signer_addresses","rawTxn","secondarySignerAddresses","TransactionPayloadScript","TransactionPayloadEntryFunction","TransactionPayloadMultisig","value","TransactionArgumentU8","TransactionArgumentU64","TransactionArgumentU128","TransactionArgumentAddress","TransactionArgumentU8Vector","TransactionArgumentBool","TransactionArgumentU16","TransactionArgumentU32","TransactionArgumentU256","Transaction","hash","sha3_256","UserTransaction","bcsToBytes","TypeArgumentABI","name","serializer","deserializer","ArgumentABI","type_tag","typeTag","TypeTag","ScriptABI","index","TransactionScriptABI","EntryFunctionABI","doc","code","ty_args","args","serializeVector","tyArgs","deserializeVector","module_name","moduleName","ModuleId","_AuthenticationKey","bytes","publicKey","pubKeyBytes","hash","sha3_256","HexString","AuthenticationKey","RotationProofChallenge","accountAddress","moduleName","structName","sequenceNumber","originator","currentAuthKey","newPublicKey","serializer","_AptosAccount","obj","HexString","path","mnemonics","normalizeMnemonics","part","key","derivePath","bytesToHex","privateKeyBytes","address","nacl","pubKey","Ed25519PublicKey","AuthenticationKey","sourceAddress","seed","source","bcsToBytes","AccountAddress","bytes","hash","sha3_256","buffer","signature","hexString","toSign","message","rawMessage","rawSignature","AptosAccount","__decorateClass","Memoize","getAddressFromAccountOrAddress","accountOrAddress","import_axios","TokenDataFieldsFragmentDoc","CollectionDataFieldsFragmentDoc","GetAccountCoinsData","GetAccountCurrentTokens","GetAccountTokensCount","GetAccountTransactionsCount","GetAccountTransactionsData","GetCurrentDelegatorBalancesCount","GetDelegatedStakingActivities","GetIndexerLedgerInfo","GetTokenActivities","GetTokenActivitiesCount","GetTokenData","GetTokenOwnersData","GetTopUserTransactions","GetUserTransactions","IndexerClient","endpoint","address","graphqlQuery","data","axios","GetIndexerLedgerInfo","ownerAddress","options","HexString","GetAccountCurrentTokens","idHash","GetTokenActivities","GetAccountCoinsData","GetAccountTokensCount","accountAddress","GetAccountTransactionsCount","GetAccountTransactionsData","delegatorAddress","poolAddress","delegator","pool","GetDelegatedStakingActivities","tokenId","GetTokenActivitiesCount","GetTokenData","propertyVersion","GetTokenOwnersData","limit","GetTopUserTransactions","startVersion","GetUserTransactions","GetCurrentDelegatorBalancesCount","generated_exports","__export","$AccountData","$AccountSignature","$AccountSignature_Ed25519Signature","$AccountSignature_MultiEd25519Signature","$Address","$AptosError","$AptosErrorCode","$Block","$BlockMetadataTransaction","$DecodedTableData","$DeleteModule","$DeleteResource","$DeleteTableItem","$DeletedTableData","$DirectWriteSet","$Ed25519Signature","$EncodeSubmissionRequest","$EntryFunctionId","$EntryFunctionPayload","$Event","$EventGuid","$GasEstimation","$GenesisPayload","$GenesisPayload_WriteSetPayload","$GenesisTransaction","$HashValue","$HealthCheckSuccess","$HexEncodedBytes","$IdentifierWrapper","$IndexResponse","$ModuleBundlePayload","$MoveAbility","$MoveFunction","$MoveFunctionGenericTypeParam","$MoveFunctionVisibility","$MoveModule","$MoveModuleBytecode","$MoveModuleId","$MoveResource","$MoveScriptBytecode","$MoveStruct","$MoveStructField","$MoveStructGenericTypeParam","$MoveStructTag","$MoveStructValue","$MoveType","$MoveValue","$MultiAgentSignature","$MultiEd25519Signature","$MultisigPayload","$MultisigTransactionPayload","$PendingTransaction","$RawTableItemRequest","$RoleType","$ScriptPayload","$ScriptWriteSet","$StateCheckpointTransaction","$StateKeyWrapper","$SubmitTransactionRequest","$TableItemRequest","$Transaction","$TransactionPayload","$TransactionPayload_EntryFunctionPayload","$TransactionPayload_ModuleBundlePayload","$TransactionPayload_MultisigPayload","$TransactionPayload_ScriptPayload","$TransactionSignature","$TransactionSignature_Ed25519Signature","$TransactionSignature_MultiAgentSignature","$TransactionSignature_MultiEd25519Signature","$Transaction_BlockMetadataTransaction","$Transaction_GenesisTransaction","$Transaction_PendingTransaction","$Transaction_StateCheckpointTransaction","$Transaction_UserTransaction","$TransactionsBatchSingleSubmissionFailure","$TransactionsBatchSubmissionResult","$U128","$U256","$U64","$UserTransaction","$VersionedEvent","$ViewRequest","$WriteModule","$WriteResource","$WriteSet","$WriteSetChange","$WriteSetChange_DeleteModule","$WriteSetChange_DeleteResource","$WriteSetChange_DeleteTableItem","$WriteSetChange_WriteModule","$WriteSetChange_WriteResource","$WriteSetChange_WriteTableItem","$WriteSetPayload","$WriteSet_DirectWriteSet","$WriteSet_ScriptWriteSet","$WriteTableItem","AccountsService","ApiError","AptosErrorCode","AptosGeneratedClient","BaseHttpRequest","BlocksService","CancelError","CancelablePromise","EventsService","GeneralService","MoveFunctionVisibility","OpenAPI","RoleType","TablesService","TransactionsService","ViewService","BaseHttpRequest","config","import_axios","import_form_data","ApiError","request","response","message","CancelError","message","CancelablePromise","executor","resolve","reject","onResolve","value","_a","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","CookieJar","jar","url","cookieStr","_a","key","cookie","c","str","parts","part","name","value","nameLow","val","axios","response","config","cookies","isDefined","isString","isStringWithValue","isBlob","isFormData","FormData","isSuccess","status","base64","getQueryString","params","qs","append","process","v","k","getUrl","options","encoder","path","substring","group","getFormData","formData","_","resolve","resolver","getHeaders","token","username","password","additionalHeaders","formHeaders","headers","credentials","getRequestBody","sendRequest","body","onCancel","source","requestConfig","error","axiosError","getResponseHeader","responseHeader","content","getResponseBody","catchErrorCodes","result","ApiError","request","CancelablePromise","reject","responseBody","out","AxiosHttpRequest","BaseHttpRequest","config","options","request","AccountsService","httpRequest","address","ledgerVersion","start","limit","resourceType","moduleName","BlocksService","httpRequest","blockHeight","withTransactions","version","EventsService","httpRequest","address","creationNumber","start","limit","eventHandle","fieldName","GeneralService","httpRequest","durationSecs","TablesService","httpRequest","tableHandle","requestBody","ledgerVersion","TransactionsService","httpRequest","start","limit","requestBody","txnHash","txnVersion","address","estimateMaxGasAmount","estimateGasUnitPrice","estimatePrioritizedGasUnitPrice","ViewService","httpRequest","requestBody","ledgerVersion","AptosGeneratedClient","config","HttpRequest","AxiosHttpRequest","_a","_b","_c","_d","AccountsService","BlocksService","EventsService","GeneralService","TablesService","TransactionsService","ViewService","OpenAPI","AptosErrorCode","MoveFunctionVisibility","RoleType","$AccountData","$AccountSignature","$AccountSignature_Ed25519Signature","$AccountSignature_MultiEd25519Signature","$Address","$AptosError","$AptosErrorCode","$Block","$BlockMetadataTransaction","$DecodedTableData","$DeletedTableData","$DeleteModule","$DeleteResource","$DeleteTableItem","$DirectWriteSet","$Ed25519Signature","$EncodeSubmissionRequest","$EntryFunctionId","$EntryFunctionPayload","$Event","$EventGuid","$GasEstimation","$GenesisPayload","$GenesisPayload_WriteSetPayload","$GenesisTransaction","$HashValue","$HealthCheckSuccess","$HexEncodedBytes","$IdentifierWrapper","$IndexResponse","$ModuleBundlePayload","$MoveAbility","$MoveFunction","$MoveFunctionGenericTypeParam","$MoveFunctionVisibility","$MoveModule","$MoveModuleBytecode","$MoveModuleId","$MoveResource","$MoveScriptBytecode","$MoveStruct","$MoveStructField","$MoveStructGenericTypeParam","$MoveStructTag","$MoveStructValue","$MoveType","$MoveValue","$MultiAgentSignature","$MultiEd25519Signature","$MultisigPayload","$MultisigTransactionPayload","$PendingTransaction","$RawTableItemRequest","$RoleType","$ScriptPayload","$ScriptWriteSet","$StateCheckpointTransaction","$StateKeyWrapper","$SubmitTransactionRequest","$TableItemRequest","$Transaction","$Transaction_BlockMetadataTransaction","$Transaction_GenesisTransaction","$Transaction_PendingTransaction","$Transaction_StateCheckpointTransaction","$Transaction_UserTransaction","$TransactionPayload","$TransactionPayload_EntryFunctionPayload","$TransactionPayload_ModuleBundlePayload","$TransactionPayload_MultisigPayload","$TransactionPayload_ScriptPayload","$TransactionsBatchSingleSubmissionFailure","$TransactionsBatchSubmissionResult","$TransactionSignature","$TransactionSignature_Ed25519Signature","$TransactionSignature_MultiAgentSignature","$TransactionSignature_MultiEd25519Signature","$U128","$U256","$U64","$UserTransaction","$VersionedEvent","$ViewRequest","$WriteModule","$WriteResource","$WriteSet","$WriteSet_DirectWriteSet","$WriteSet_ScriptWriteSet","$WriteSetChange","$WriteSetChange_DeleteModule","$WriteSetChange_DeleteResource","$WriteSetChange_DeleteTableItem","$WriteSetChange_WriteModule","$WriteSetChange_WriteResource","$WriteSetChange_WriteTableItem","$WriteSetPayload","$WriteTableItem","assertType","val","types","message","ensureBoolean","ensureNumber","res","ensureBigInt","serializeArg","argVal","argType","serializer","TypeTagBool","TypeTagU8","TypeTagU16","TypeTagU32","TypeTagU64","TypeTagU128","TypeTagU256","TypeTagAddress","addr","HexString","AccountAddress","TypeTagVector","arg","TypeTagStruct","address","moduleName","name","argToTransactionArgument","TransactionArgumentBool","TransactionArgumentU8","TransactionArgumentU16","TransactionArgumentU32","TransactionArgumentU64","TransactionArgumentU128","TransactionArgumentU256","TransactionArgumentAddress","TransactionArgumentU8Vector","RAW_TRANSACTION_SALT","RAW_TRANSACTION_WITH_DATA_SALT","TransactionBuilder","signingFunction","rawTxnBuilder","func","ty_tags","args","rawTxn","hash","sha3_256","RawTransaction","MultiAgentRawTransaction","prefix","body","bcsToBytes","mergedArray","TransactionBuilderEd25519","publicKey","signingMessage","signature","authenticator","TransactionAuthenticatorEd25519","Ed25519PublicKey","SignedTransaction","TransactionBuilderMultiEd25519","TransactionAuthenticatorMultiEd25519","TransactionBuilderABI","abis","builderConfig","abi","deserializer","Deserializer","scriptABI","ScriptABI","k","EntryFunctionABI","funcABI","addr","moduleName","HexString","DEFAULT_MAX_GAS_AMOUNT","DEFAULT_TXN_EXP_SEC_FROM_NOW","abiArgs","arg","i","serializer","Serializer","serializeArg","argToTransactionArgument","seqNumber","typeTags","ty_arg","TypeTagParser","payload","bcsArgs","TransactionPayloadEntryFunction","EntryFunction","Identifier","TransactionScriptABI","scriptArgs","TransactionPayloadScript","Script","sender","sequenceNumber","gasUnitPrice","maxGasAmount","expSecFromNow","chainId","senderAccount","AccountAddress","expTimestampSec","ChainId","TransactionBuilderRemoteABI","aptosClient","module","ef","abiMap","s","funcAbi","typeArgABIs","param","abiArg","ArgumentABI","entryFunctionABI","ModuleId","_","TypeArgumentABI","rest","senderAddress","__decorateClass","MemoizeExpiring","_AptosClient","nodeUrl","config","doNotFixNodeUrl","conf","fixNodeUrl","AptosGeneratedClient","accountAddress","HexString","query","_a","f","paginateWithCursor","moduleName","resourceType","accountFrom","rawTxn","TransactionBuilderEd25519","signingMessage","sigHexStr","aptos_types_exports","_signingMessage","invalidSigBytes","sender","payload","options","timestamp","TransactionBuilderRemoteABI","rawTransaction","address","creationNumber","eventHandleStruct","fieldName","signedTxn","accountOrPubkey","AptosAccount","MultiEd25519PublicKey","TransactionBuilderMultiEd25519","threshold","bits","signatures","i","bitmap","bcsBody","_b","_c","queryParams","txnHash","txnVersion","e","extraArgs","timeoutSecs","DEFAULT_TXN_TIMEOUT_SEC","checkSuccess","isPending","count","lastTxn","isApiError","ApiError","isRequestError","sleep","WaitForTransactionError","FailedTransactionError","handle","data","sequenceNumber","chainId","gasEstimate","maxGasAmount","gasUnitPrice","expireTimestamp","DEFAULT_MAX_GAS_AMOUNT","DEFAULT_TXN_EXP_SEC_FROM_NOW","bcsTxn","packageMetadata","modules","codeSerializer","Serializer","serializeVector","bcsSerializeBytes","forAccount","typeTag","APTOS_COIN","resources","accountResource","r","toPrivateKeyBytes","authKey","helperAccount","challenge","challengeHex","bcsToBytes","proofSignedByCurrentPrivateKey","proofSignedByNewPrivateKey","bcsSerializeU8","addressOrAuthKey","resource","origAddress","blockHeight","withTransactions","version","ledger_version","tags","clear","AptosClient","__decorateClass","parseApiError","Memoize","status","message","errorCode","vmErrorCode","lastSubmittedTransaction","transaction","target","propertyKey","descriptor","childFunction","args","Provider","network","config","doNotFixNodeUrl","fullNodeUrl","indexerUrl","isCustomEndpoints","NetworkToNodeAPI","NetworkToIndexerAPI","AptosClient","IndexerClient","applyMixin","targetClass","baseClass","baseClassProp","propertyName","propertyDescriptor","args","PropertyValue","type","value","PropertyMap","key","getPropertyType","typ","typeTag","TypeTagStruct","stringStructTag","TypeTagParser","getPropertyValueRaw","values","types","results","index","serializer","Serializer","serializeArg","error","getSinglePropertyValueRaw","deserializePropertyMap","rawPropertyMap","entries","pm","prop","val","newValue","deserializeValueBasedOnTypeTag","pv","tag","de","Deserializer","HexString","res","TypeTagU8","TypeTagU64","TypeTagU128","TypeTagBool","TypeTagAddress","token_types_exports","__export","PropertyMap","PropertyValue","Token","TokenData","TokenData","collection","description","name","maximum","supply","uri","default_properties","mutability_config","deserializePropertyMap","Token","id","amount","token_properties","TokenClient","aptosClient","account","name","description","uri","maxAmount","MAX_U64_BIG_INT","extraArgs","rawTxn","TransactionBuilderRemoteABI","bcsTxn","AptosClient","collectionName","supply","max","royalty_payee_address","royalty_points_denominator","royalty_points_numerator","property_keys","property_values","property_types","getPropertyValueRaw","mutability_config","receiver","creator","amount","property_version","sender","propertyVersion","multiAgentTxn","aptos_types_exports","senderSignature","TransactionBuilder","senderAuthenticator","receiverSignature","receiverAuthenticator","multiAgentAuthenticator","bcsToBytes","optIn","tokenName","ownerAddress","collection","PropertyVersion","owner","creatorAddress","tokenOwner","collection_name","keys","values","types","accountResource","r","handle","getCollectionTableItemRequest","creatorHex","HexString","getTokenTableItemRequest","rawTokenData","TokenData","tokenDataId","tokenId","tokenStore","rawToken","Token","error","PropertyMap","PropertyTypeMap","AptosToken","provider","account","funcName","typeArgs","args","extraArgs","rawTxn","TransactionBuilderRemoteABI","bcsTxn","AptosClient","creator","description","name","uri","maxSupply","MAX_U64_BIG_INT","options","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","collection","propertyKeys","propertyTypes","propertyValues","getPropertyValueRaw","recipient","token","tokenType","HexString","propertyKey","propertyType","propertyValue","getSinglePropertyValueRaw","owner","CoinClient","aptosClient","from","to","amount","extraArgs","_a","coinTypeToTransfer","APTOS_COIN","func","toAddress","getAddressFromAccountOrAddress","rawTxn","TransactionBuilderRemoteABI","bcsTxn","AptosClient","account","typeTag","address","accountResource","FaucetClient","AptosClient","nodeUrl","faucetUrl","config","_a","_b","_c","AxiosHttpRequest","address","amount","timeoutSecs","DEFAULT_TXN_TIMEOUT_SEC","tnxHashes","HexString","promises","i","tnxHash"]}