{"version":3,"file":"IrysStorageDriver.cjs","sources":["../../../../src/plugins/irysStorage/IrysStorageDriver.ts"],"sourcesContent":["import type { default as NodeIrys, WebIrys } from '@irys/sdk';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  Connection,\n  Keypair,\n  PublicKey,\n  SendOptions,\n  Signer as Web3Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport {\n  getBytesFromMetaplexFiles,\n  MetaplexFile,\n  MetaplexFileTag,\n  StorageDriver,\n} from '../storageModule';\nimport { KeypairIdentityDriver } from '../keypairIdentity';\nimport { Metaplex } from '@/Metaplex';\nimport {\n  Amount,\n  IdentitySigner,\n  isIdentitySigner,\n  isKeypairSigner,\n  KeypairSigner,\n  lamports,\n  Signer,\n  toBigNumber,\n} from '@/types';\nimport {\n  AssetUploadFailedError,\n  FailedToConnectToIrysAddressError,\n  FailedToInitializeIrysError,\n  IrysWithdrawError,\n} from '@/errors';\nimport { _removeDoubleDefault } from '@/utils';\n\nexport type IrysOptions = {\n  address?: string;\n  timeout?: number;\n  providerUrl?: string;\n  priceMultiplier?: number;\n  identity?: Signer;\n};\n\nexport type IrysWalletAdapter = {\n  publicKey: PublicKey | null;\n  signMessage?: (message: Uint8Array) => Promise<Uint8Array>;\n  signTransaction?: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions?: (transactions: Transaction[]) => Promise<Transaction[]>;\n  sendTransaction: (\n    transaction: Transaction,\n    connection: Connection,\n    options?: SendOptions & { signers?: Web3Signer[] }\n  ) => Promise<TransactionSignature>;\n};\n\n/// Size of irys transaction header\nconst HEADER_SIZE = 2_000;\n\n/// Minimum file size for cost calculation\nconst MINIMUM_SIZE = 80_000;\n\nexport class IrysStorageDriver implements StorageDriver {\n  protected _metaplex: Metaplex;\n  protected _irys: WebIrys | NodeIrys | null = null;\n  protected _options: IrysOptions;\n\n  constructor(metaplex: Metaplex, options: IrysOptions = {}) {\n    this._metaplex = metaplex;\n    this._options = {\n      providerUrl: metaplex.connection.rpcEndpoint,\n      ...options,\n    };\n  }\n\n  async getUploadPrice(bytes: number): Promise<Amount> {\n    const irys = await this.irys();\n    const price = await irys.getPrice(bytes);\n\n    return bigNumberToAmount(\n      price.multipliedBy(this._options.priceMultiplier ?? 1.1)\n    );\n  }\n\n  async getUploadPriceForFiles(files: MetaplexFile[]): Promise<Amount> {\n    const bytes: number = files.reduce((sum, file) => {\n      return sum + HEADER_SIZE + Math.max(MINIMUM_SIZE, file.buffer.byteLength);\n    }, 0);\n\n    return this.getUploadPrice(bytes);\n  }\n\n  async upload(file: MetaplexFile): Promise<string> {\n    const [uri] = await this.uploadAll([file]);\n\n    return uri;\n  }\n\n  async uploadAll(files: MetaplexFile[]): Promise<string[]> {\n    const irys = await this.irys();\n    const amount = await this.getUploadPrice(\n      getBytesFromMetaplexFiles(...files)\n    );\n    await this.fund(amount);\n\n    const promises = files.map(async (file) => {\n      const irysTx = irys.createTransaction(file.buffer, {\n        tags: getMetaplexFileTagsWithContentType(file),\n      });\n      await irysTx.sign();\n\n      const { status, data } = await irys.uploader.uploadTransaction(irysTx);\n\n      if (status >= 300) {\n        throw new AssetUploadFailedError(status);\n      }\n\n      return `https://arweave.net/${data.id}`;\n    });\n\n    return await Promise.all(promises);\n  }\n\n  async getBalance(): Promise<Amount> {\n    const irys = await this.irys();\n    const balance = await irys.getLoadedBalance();\n\n    return bigNumberToAmount(balance);\n  }\n\n  async fund(amount: Amount, skipBalanceCheck = false): Promise<void> {\n    const irys = await this.irys();\n    let toFund = amountToBigNumber(amount);\n\n    if (!skipBalanceCheck) {\n      const balance = await irys.getLoadedBalance();\n\n      toFund = toFund.isGreaterThan(balance)\n        ? toFund.minus(balance)\n        : new BigNumber(0);\n    }\n\n    if (toFund.isLessThanOrEqualTo(0)) {\n      return;\n    }\n\n    // TODO: Catch errors and wrap in irysErrors.\n    await irys.fund(toFund);\n  }\n\n  async withdrawAll(): Promise<void> {\n    // TODO(loris): Replace with \"withdrawAll\" when available on irys.\n    const irys = await this.irys();\n    const balance = await irys.getLoadedBalance();\n    const minimumBalance = new BigNumber(5000);\n\n    if (balance.isLessThan(minimumBalance)) {\n      return;\n    }\n\n    const balanceToWithdraw = balance.minus(minimumBalance);\n    await this.withdraw(bigNumberToAmount(balanceToWithdraw));\n  }\n\n  async withdraw(amount: Amount): Promise<void> {\n    const irys = await this.irys();\n    try {\n      await irys.withdrawBalance(amountToBigNumber(amount));\n    } catch (e: any) {\n      throw new IrysWithdrawError(\n        e instanceof Error ? e.message : e.toString()\n      );\n    }\n  }\n\n  async irys(): Promise<WebIrys | NodeIrys> {\n    if (this._irys) {\n      return this._irys;\n    }\n\n    return (this._irys = await this.initIrys());\n  }\n\n  async initIrys(): Promise<WebIrys | NodeIrys> {\n    const currency = 'solana';\n    const address = this._options?.address ?? 'https://node1.irys.xyz';\n    const options = {\n      timeout: this._options.timeout,\n      providerUrl: this._options.providerUrl,\n    };\n\n    const identity: Signer =\n      this._options.identity ?? this._metaplex.identity();\n\n    // if in node use node irys, else use web irys\n    // see: https://github.com/metaplex-foundation/js/issues/202\n    const isNode =\n      typeof window === 'undefined' || window.process?.hasOwnProperty('type');\n    let irys;\n    if (isNode && isKeypairSigner(identity))\n      irys = await this.initNodeirys(address, currency, identity, options);\n    else {\n      let identitySigner: IdentitySigner;\n      if (isIdentitySigner(identity)) identitySigner = identity;\n      else\n        identitySigner = new KeypairIdentityDriver(\n          Keypair.fromSecretKey((identity as KeypairSigner).secretKey)\n        );\n\n      irys = await this.initWebirys(address, currency, identitySigner, options);\n    }\n\n    try {\n      // Check for valid irys node.\n      await irys.utils.getBundlerAddress(currency);\n    } catch (error) {\n      throw new FailedToConnectToIrysAddressError(address, error as Error);\n    }\n\n    return irys;\n  }\n\n  async initNodeirys(\n    address: string,\n    currency: string,\n    keypair: KeypairSigner,\n    options: any\n  ): Promise<NodeIrys> {\n    const bPackage = _removeDoubleDefault(await import('@irys/sdk'));\n    return new bPackage.default({\n      url: address,\n      token: currency,\n      key: keypair.secretKey,\n      config: options,\n    });\n  }\n\n  async initWebirys(\n    address: string,\n    currency: string,\n    identity: IdentitySigner,\n    options: any\n  ): Promise<WebIrys> {\n    const wallet: IrysWalletAdapter = {\n      publicKey: identity.publicKey,\n      signMessage: (message: Uint8Array) => identity.signMessage(message),\n      signTransaction: (transaction: Transaction) =>\n        identity.signTransaction(transaction),\n      signAllTransactions: (transactions: Transaction[]) =>\n        identity.signAllTransactions(transactions),\n      sendTransaction: (\n        transaction: Transaction,\n        connection: Connection,\n        options: SendOptions & { signers?: Web3Signer[] } = {}\n      ): Promise<TransactionSignature> => {\n        const { signers = [], ...sendOptions } = options;\n\n        return this._metaplex\n          .rpc()\n          .sendTransaction(transaction, sendOptions, [identity, ...signers]);\n      },\n    };\n\n    const bPackage = _removeDoubleDefault(await import('@irys/sdk'));\n    const irys = new bPackage.WebIrys({\n      url: address,\n      token: currency,\n      wallet: { provider: wallet },\n      config: options,\n    });\n\n    try {\n      // Try to initiate irys.\n      await irys.ready();\n    } catch (error) {\n      throw new FailedToInitializeIrysError(error as Error);\n    }\n\n    return irys;\n  }\n}\n\nexport const isirysStorageDriver = (\n  storageDriver: StorageDriver\n): storageDriver is IrysStorageDriver => {\n  return (\n    'irys' in storageDriver &&\n    'getBalance' in storageDriver &&\n    'fund' in storageDriver &&\n    'withdrawAll' in storageDriver\n  );\n};\n\nconst bigNumberToAmount = (bigNumber: BigNumber): Amount => {\n  return lamports(toBigNumber(bigNumber.decimalPlaces(0).toString()));\n};\n\nconst amountToBigNumber = (amount: Amount): BigNumber => {\n  return new BigNumber(amount.basisPoints.toString());\n};\n\nconst getMetaplexFileTagsWithContentType = (\n  file: MetaplexFile\n): MetaplexFileTag[] => {\n  if (!file.contentType) {\n    return file.tags;\n  }\n\n  return [{ name: 'Content-Type', value: file.contentType }, ...file.tags];\n};\n"],"names":["HEADER_SIZE","MINIMUM_SIZE","IrysStorageDriver","constructor","metaplex","options","_defineProperty","_metaplex","_options","providerUrl","connection","rpcEndpoint","getUploadPrice","bytes","irys","price","getPrice","bigNumberToAmount","multipliedBy","priceMultiplier","getUploadPriceForFiles","files","reduce","sum","file","Math","max","buffer","byteLength","upload","uri","uploadAll","amount","getBytesFromMetaplexFiles","fund","promises","map","irysTx","createTransaction","tags","getMetaplexFileTagsWithContentType","sign","status","data","uploader","uploadTransaction","AssetUploadFailedError","id","Promise","all","getBalance","balance","getLoadedBalance","skipBalanceCheck","toFund","amountToBigNumber","isGreaterThan","minus","BigNumber","isLessThanOrEqualTo","withdrawAll","minimumBalance","isLessThan","balanceToWithdraw","withdraw","withdrawBalance","e","IrysWithdrawError","Error","message","toString","_irys","initIrys","currency","address","timeout","identity","isNode","window","process","hasOwnProperty","isKeypairSigner","initNodeirys","identitySigner","isIdentitySigner","KeypairIdentityDriver","Keypair","fromSecretKey","secretKey","initWebirys","utils","getBundlerAddress","error","FailedToConnectToIrysAddressError","keypair","bPackage","_removeDoubleDefault","default","url","token","key","config","wallet","publicKey","signMessage","signTransaction","transaction","signAllTransactions","transactions","sendTransaction","signers","sendOptions","rpc","WebIrys","provider","ready","FailedToInitializeIrysError","isirysStorageDriver","storageDriver","bigNumber","lamports","toBigNumber","decimalPlaces","basisPoints","contentType","name","value"],"mappings":"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"}