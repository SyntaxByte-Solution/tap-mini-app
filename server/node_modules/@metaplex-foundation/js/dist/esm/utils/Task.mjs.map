{"version":3,"file":"Task.mjs","sources":["../../../src/utils/Task.ts"],"sourcesContent":["import EventEmitterPackage from 'eventemitter3';\nimport type EventEmitter from 'eventemitter3';\nimport { Disposable, DisposableScope } from './Disposable';\nimport { TaskIsAlreadyRunningError } from '@/errors';\n\nexport type TaskStatus =\n  | 'pending'\n  | 'running'\n  | 'successful'\n  | 'failed'\n  | 'canceled';\n\nexport type TaskCallback<T, I extends any[]> = (\n  scope: DisposableScope,\n  ...inputs: I\n) => T | Promise<T>;\n\nexport type TaskOptions = {\n  signal?: AbortSignal;\n  force?: boolean;\n};\n\nexport class Task<T, I extends any[] = []> {\n  protected callback: TaskCallback<T, I>;\n  protected children: Task<any, any[]>[];\n  protected context: object;\n  protected status: TaskStatus = 'pending';\n  protected result: T | undefined = undefined;\n  protected error: unknown = undefined;\n  protected eventEmitter: EventEmitter;\n\n  constructor(\n    callback: TaskCallback<T, I>,\n    children: Task<any, any[]>[] = [],\n    context: object = {}\n  ) {\n    this.callback = callback;\n    this.children = children;\n    this.context = context;\n    this.eventEmitter = new EventEmitterPackage.EventEmitter();\n  }\n\n  async run(options: TaskOptions = {}, ...inputs: I): Promise<T> {\n    if (this.isRunning()) {\n      throw new TaskIsAlreadyRunningError();\n    }\n\n    if (this.isPending() || (options.force ?? false)) {\n      return this.forceRun(options, ...inputs);\n    }\n\n    if (this.isSuccessful()) {\n      return this.getResult() as T;\n    }\n\n    throw this.getError();\n  }\n\n  protected async forceRun(\n    options: TaskOptions = {},\n    ...inputs: I\n  ): Promise<T> {\n    const disposable = new Disposable(\n      options.signal ?? new AbortController().signal\n    );\n\n    disposable.onCancel((cancelError) => {\n      this.setStatus('canceled');\n      this.error = cancelError;\n    });\n\n    return disposable.run(async (scope: DisposableScope) => {\n      const { isCanceled, throwIfCanceled } = scope;\n\n      try {\n        // Start loading.\n        this.setStatus('running');\n        this.result = undefined;\n        this.error = undefined;\n        this.result = await Promise.resolve(this.callback(scope, ...inputs));\n        throwIfCanceled();\n        this.setStatus('successful');\n\n        // Return the loaded result.\n        return this.result;\n      } catch (newError) {\n        // Capture the error and reset the result.\n        this.error = newError;\n        this.result = undefined;\n        this.setStatus(isCanceled() ? 'canceled' : 'failed');\n\n        // Re-throw the error.\n        throw this.error;\n      }\n    });\n  }\n\n  loadWith(preloadedResult: T) {\n    this.setStatus('successful');\n    this.result = preloadedResult;\n    this.error = undefined;\n\n    return this;\n  }\n\n  reset() {\n    this.setStatus('pending');\n    this.result = undefined;\n    this.error = undefined;\n\n    return this;\n  }\n\n  setChildren(children: Task<any, any[]>[]) {\n    this.children = children;\n\n    return this;\n  }\n\n  getChildren(): Task<any, any[]>[] {\n    return this.children;\n  }\n\n  getDescendants(): Task<any, any[]>[] {\n    return this.children.flatMap((child) => [child, ...child.getDescendants()]);\n  }\n\n  setContext(context: object) {\n    this.context = context;\n\n    return this;\n  }\n\n  getContext<C extends object = object>(): C {\n    return this.context as C;\n  }\n\n  getStatus(): TaskStatus {\n    return this.status;\n  }\n\n  getResult(): T | undefined {\n    return this.result;\n  }\n\n  getError(): unknown {\n    return this.error;\n  }\n\n  isPending(): boolean {\n    return this.status === 'pending';\n  }\n\n  isRunning(): boolean {\n    return this.status === 'running';\n  }\n\n  isCompleted(): boolean {\n    return this.status !== 'pending' && this.status !== 'running';\n  }\n\n  isSuccessful(): boolean {\n    return this.status === 'successful';\n  }\n\n  isFailed(): boolean {\n    return this.status === 'failed';\n  }\n\n  isCanceled(): boolean {\n    return this.status === 'canceled';\n  }\n\n  onStatusChange(callback: (status: TaskStatus) => unknown) {\n    this.eventEmitter.on('statusChange', callback);\n\n    return this;\n  }\n\n  onStatusChangeTo(status: TaskStatus, callback: () => unknown) {\n    return this.onStatusChange((newStatus) =>\n      status === newStatus ? callback() : undefined\n    );\n  }\n\n  onSuccess(callback: () => unknown) {\n    return this.onStatusChangeTo('successful', callback);\n  }\n\n  onFailure(callback: () => unknown) {\n    return this.onStatusChangeTo('failed', callback);\n  }\n\n  onCancel(callback: () => unknown) {\n    return this.onStatusChangeTo('canceled', callback);\n  }\n\n  protected setStatus(newStatus: TaskStatus) {\n    if (this.status === newStatus) return;\n    this.status = newStatus;\n    this.eventEmitter.emit('statusChange', newStatus);\n  }\n}\n"],"names":["Task","constructor","callback","children","context","undefined","eventEmitter","EventEmitterPackage","EventEmitter","run","options","inputs","isRunning","TaskIsAlreadyRunningError","isPending","force","forceRun","isSuccessful","getResult","getError","disposable","Disposable","signal","AbortController","onCancel","cancelError","setStatus","error","scope","isCanceled","throwIfCanceled","result","Promise","resolve","newError","loadWith","preloadedResult","reset","setChildren","getChildren","getDescendants","flatMap","child","setContext","getContext","getStatus","status","isCompleted","isFailed","onStatusChange","on","onStatusChangeTo","newStatus","onSuccess","onFailure","emit"],"mappings":"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"}