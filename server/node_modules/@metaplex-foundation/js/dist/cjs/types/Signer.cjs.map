{"version":3,"file":"Signer.cjs","sources":["../../../src/types/Signer.ts"],"sourcesContent":["import { PublicKey, Transaction } from '@solana/web3.js';\n\nexport type Signer = KeypairSigner | IdentitySigner;\n\nexport type KeypairSigner = {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n};\n\nexport type IdentitySigner = {\n  publicKey: PublicKey;\n  signMessage(message: Uint8Array): Promise<Uint8Array>;\n  signTransaction(transaction: Transaction): Promise<Transaction>;\n  signAllTransactions(transactions: Transaction[]): Promise<Transaction[]>;\n};\n\nexport const isSigner = (input: any): input is Signer => {\n  return (\n    typeof input === 'object' &&\n    'publicKey' in input &&\n    ('secretKey' in input || 'signTransaction' in input)\n  );\n};\n\nexport const isKeypairSigner = (input: any): input is KeypairSigner => {\n  return isSigner(input) && 'secretKey' in input && input.secretKey != null;\n};\n\nexport const isIdentitySigner = (input: any): input is IdentitySigner => {\n  return isSigner(input) && !isKeypairSigner(input);\n};\n\nexport type SignerHistogram = {\n  all: Signer[];\n  keypairs: KeypairSigner[];\n  identities: IdentitySigner[];\n};\n\nexport const getSignerHistogram = (signers: Signer[]) =>\n  signers.reduce(\n    (signers: SignerHistogram, signer: Signer) => {\n      const duplicateIndex = signers.all.findIndex(({ publicKey }) =>\n        publicKey.equals(signer.publicKey)\n      );\n      const duplicate = signers.all[duplicateIndex] ?? null;\n      const duplicateIsIdentity = duplicate\n        ? isIdentitySigner(duplicate)\n        : false;\n      const signerIsIdentity = isIdentitySigner(signer);\n\n      if (!duplicate) {\n        signers.all.push(signer);\n        if (signerIsIdentity) {\n          signers.identities.push(signer);\n        } else {\n          signers.keypairs.push(signer);\n        }\n      } else if (duplicateIsIdentity && !signerIsIdentity) {\n        // Prefer keypair than identity signer as it requires less user interactions.\n        const duplicateIdentitiesIndex = signers.identities.findIndex(\n          ({ publicKey }) => publicKey.equals(signer.publicKey)\n        );\n        signers.all.splice(duplicateIndex, 1);\n        signers.identities.splice(duplicateIdentitiesIndex, 1);\n        signers.all.push(signer);\n        signers.keypairs.push(signer);\n      }\n\n      return signers;\n    },\n    { all: [], keypairs: [], identities: [] }\n  );\n"],"names":["isSigner","input","isKeypairSigner","secretKey","isIdentitySigner","getSignerHistogram","signers","reduce","signer","duplicateIndex","all","findIndex","publicKey","equals","duplicate","duplicateIsIdentity","signerIsIdentity","push","identities","keypairs","duplicateIdentitiesIndex","splice"],"mappings":";;;;AAgBaA,MAAAA,QAAQ,GAAIC,KAAU,IAAsB;AACvD,EAAA,OACE,OAAOA,KAAK,KAAK,QAAQ,IACzB,WAAW,IAAIA,KAAK,KACnB,WAAW,IAAIA,KAAK,IAAI,iBAAiB,IAAIA,KAAK,CAAC,CAAA;AAExD,EAAC;AAEYC,MAAAA,eAAe,GAAID,KAAU,IAA6B;AACrE,EAAA,OAAOD,QAAQ,CAACC,KAAK,CAAC,IAAI,WAAW,IAAIA,KAAK,IAAIA,KAAK,CAACE,SAAS,IAAI,IAAI,CAAA;AAC3E,EAAC;AAEYC,MAAAA,gBAAgB,GAAIH,KAAU,IAA8B;EACvE,OAAOD,QAAQ,CAACC,KAAK,CAAC,IAAI,CAACC,eAAe,CAACD,KAAK,CAAC,CAAA;AACnD,EAAC;AAQYI,MAAAA,kBAAkB,GAAIC,OAAiB,IAClDA,OAAO,CAACC,MAAM,CACZ,CAACD,OAAwB,EAAEE,MAAc,KAAK;EAC5C,MAAMC,cAAc,GAAGH,OAAO,CAACI,GAAG,CAACC,SAAS,CAAC,CAAC;AAAEC,IAAAA,SAAAA;GAAW,KACzDA,SAAS,CAACC,MAAM,CAACL,MAAM,CAACI,SAAS,CAAC,CACnC,CAAA;EACD,MAAME,SAAS,GAAGR,OAAO,CAACI,GAAG,CAACD,cAAc,CAAC,IAAI,IAAI,CAAA;EACrD,MAAMM,mBAAmB,GAAGD,SAAS,GACjCV,gBAAgB,CAACU,SAAS,CAAC,GAC3B,KAAK,CAAA;AACT,EAAA,MAAME,gBAAgB,GAAGZ,gBAAgB,CAACI,MAAM,CAAC,CAAA;EAEjD,IAAI,CAACM,SAAS,EAAE;AACdR,IAAAA,OAAO,CAACI,GAAG,CAACO,IAAI,CAACT,MAAM,CAAC,CAAA;AACxB,IAAA,IAAIQ,gBAAgB,EAAE;AACpBV,MAAAA,OAAO,CAACY,UAAU,CAACD,IAAI,CAACT,MAAM,CAAC,CAAA;AACjC,KAAC,MAAM;AACLF,MAAAA,OAAO,CAACa,QAAQ,CAACF,IAAI,CAACT,MAAM,CAAC,CAAA;AAC/B,KAAA;AACF,GAAC,MAAM,IAAIO,mBAAmB,IAAI,CAACC,gBAAgB,EAAE;AACnD;IACA,MAAMI,wBAAwB,GAAGd,OAAO,CAACY,UAAU,CAACP,SAAS,CAC3D,CAAC;AAAEC,MAAAA,SAAAA;KAAW,KAAKA,SAAS,CAACC,MAAM,CAACL,MAAM,CAACI,SAAS,CAAC,CACtD,CAAA;IACDN,OAAO,CAACI,GAAG,CAACW,MAAM,CAACZ,cAAc,EAAE,CAAC,CAAC,CAAA;IACrCH,OAAO,CAACY,UAAU,CAACG,MAAM,CAACD,wBAAwB,EAAE,CAAC,CAAC,CAAA;AACtDd,IAAAA,OAAO,CAACI,GAAG,CAACO,IAAI,CAACT,MAAM,CAAC,CAAA;AACxBF,IAAAA,OAAO,CAACa,QAAQ,CAACF,IAAI,CAACT,MAAM,CAAC,CAAA;AAC/B,GAAA;AAEA,EAAA,OAAOF,OAAO,CAAA;AAChB,CAAC,EACD;AAAEI,EAAAA,GAAG,EAAE,EAAE;AAAES,EAAAA,QAAQ,EAAE,EAAE;AAAED,EAAAA,UAAU,EAAE,EAAA;AAAG,CAAC;;;;;;;"}