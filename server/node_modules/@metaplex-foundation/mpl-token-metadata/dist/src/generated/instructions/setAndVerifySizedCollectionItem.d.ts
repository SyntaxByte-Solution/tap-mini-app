/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type SetAndVerifySizedCollectionItemInstructionAccounts = {
    /** Metadata account */
    metadata: PublicKey | Pda;
    /** Collection Update authority */
    collectionAuthority: Signer;
    /** payer */
    payer?: Signer;
    /** Update Authority of Collection NFT and NFT */
    updateAuthority?: PublicKey | Pda;
    /** Mint of the Collection */
    collectionMint: PublicKey | Pda;
    /** Metadata Account of the Collection */
    collection: PublicKey | Pda;
    /** MasterEdition2 Account of the Collection Token */
    collectionMasterEditionAccount: PublicKey | Pda;
    /** Collection Authority Record PDA */
    collectionAuthorityRecord?: PublicKey | Pda;
};
export type SetAndVerifySizedCollectionItemInstructionData = {
    discriminator: number;
};
export type SetAndVerifySizedCollectionItemInstructionDataArgs = {};
export declare function getSetAndVerifySizedCollectionItemInstructionDataSerializer(): Serializer<SetAndVerifySizedCollectionItemInstructionDataArgs, SetAndVerifySizedCollectionItemInstructionData>;
export declare function setAndVerifySizedCollectionItem(context: Pick<Context, 'identity' | 'payer' | 'programs'>, input: SetAndVerifySizedCollectionItemInstructionAccounts): TransactionBuilder;
