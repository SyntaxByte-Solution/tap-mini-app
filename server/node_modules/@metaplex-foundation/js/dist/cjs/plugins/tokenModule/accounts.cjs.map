{"version":3,"file":"accounts.cjs","sources":["../../../../src/plugins/tokenModule/accounts.ts"],"sourcesContent":["import {\n  AccountLayout as SplTokenAccountLayout,\n  MintLayout as SplMintAccountLayout,\n  RawAccount as SplTokenAccount,\n  RawMint as SplMintAccount,\n} from '@solana/spl-token';\nimport { NotYetImplementedError } from '@/errors';\nimport {\n  Account,\n  SolitaType,\n  getAccountParsingAndAssertingFunction,\n  getAccountParsingFunction,\n} from '@/types';\n\nconst mintAccountParser: SolitaType<SplMintAccount> = {\n  name: 'MintAccount',\n  deserialize: (data: Buffer, offset?: number) => {\n    const span = SplMintAccountLayout.getSpan(data, offset);\n    const decoded = SplMintAccountLayout.decode(data, offset);\n    return [decoded, span];\n  },\n  fromArgs() {\n    throw new NotYetImplementedError();\n  },\n};\n\n/** @group Accounts */\nexport type MintAccount = Account<SplMintAccount>;\n\n/** @group Account Helpers */\nexport const parseMintAccount = getAccountParsingFunction(mintAccountParser);\n\n/** @group Account Helpers */\nexport const toMintAccount =\n  getAccountParsingAndAssertingFunction(mintAccountParser);\n\nconst tokenAccountParser: SolitaType<SplTokenAccount> = {\n  name: 'TokenAccount',\n  deserialize: (data: Buffer, offset?: number) => {\n    const span = SplTokenAccountLayout.getSpan(data, offset);\n    const decoded = SplTokenAccountLayout.decode(data, offset);\n    return [decoded, span];\n  },\n  fromArgs() {\n    throw new NotYetImplementedError();\n  },\n};\n\n/** @group Accounts */\nexport type TokenAccount = Account<SplTokenAccount>;\n\n/** @group Account Helpers */\nexport const parseTokenAccount = getAccountParsingFunction(tokenAccountParser);\n\n/** @group Account Helpers */\nexport const toTokenAccount =\n  getAccountParsingAndAssertingFunction(tokenAccountParser);\n"],"names":["mintAccountParser","name","deserialize","data","offset","span","SplMintAccountLayout","getSpan","decoded","decode","fromArgs","NotYetImplementedError","parseMintAccount","getAccountParsingFunction","toMintAccount","getAccountParsingAndAssertingFunction","tokenAccountParser","SplTokenAccountLayout","parseTokenAccount","toTokenAccount"],"mappings":";;;;;;;;AAcA,MAAMA,iBAA6C,GAAG;AACpDC,EAAAA,IAAI,EAAE,aAAa;AACnBC,EAAAA,WAAW,EAAE,CAACC,IAAY,EAAEC,MAAe,KAAK;IAC9C,MAAMC,IAAI,GAAGC,mBAAoB,CAACC,OAAO,CAACJ,IAAI,EAAEC,MAAM,CAAC,CAAA;IACvD,MAAMI,OAAO,GAAGF,mBAAoB,CAACG,MAAM,CAACN,IAAI,EAAEC,MAAM,CAAC,CAAA;AACzD,IAAA,OAAO,CAACI,OAAO,EAAEH,IAAI,CAAC,CAAA;GACvB;AACDK,EAAAA,QAAQ,GAAG;IACT,MAAM,IAAIC,+BAAsB,EAAE,CAAA;AACpC,GAAA;AACF,CAAC,CAAA;;AAED;;AAGA;MACaC,gBAAgB,GAAGC,iCAAyB,CAACb,iBAAiB,EAAC;;AAE5E;MACac,aAAa,GACxBC,6CAAqC,CAACf,iBAAiB,EAAC;AAE1D,MAAMgB,kBAA+C,GAAG;AACtDf,EAAAA,IAAI,EAAE,cAAc;AACpBC,EAAAA,WAAW,EAAE,CAACC,IAAY,EAAEC,MAAe,KAAK;IAC9C,MAAMC,IAAI,GAAGY,sBAAqB,CAACV,OAAO,CAACJ,IAAI,EAAEC,MAAM,CAAC,CAAA;IACxD,MAAMI,OAAO,GAAGS,sBAAqB,CAACR,MAAM,CAACN,IAAI,EAAEC,MAAM,CAAC,CAAA;AAC1D,IAAA,OAAO,CAACI,OAAO,EAAEH,IAAI,CAAC,CAAA;GACvB;AACDK,EAAAA,QAAQ,GAAG;IACT,MAAM,IAAIC,+BAAsB,EAAE,CAAA;AACpC,GAAA;AACF,CAAC,CAAA;;AAED;;AAGA;MACaO,iBAAiB,GAAGL,iCAAyB,CAACG,kBAAkB,EAAC;;AAE9E;MACaG,cAAc,GACzBJ,6CAAqC,CAACC,kBAAkB;;;;;;;"}