/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type MigrateInstructionAccounts = {
    /** Metadata account */
    metadata?: PublicKey | Pda;
    /** Edition account */
    edition?: PublicKey | Pda;
    /** Token account */
    token: PublicKey | Pda;
    /** Token account owner */
    tokenOwner: PublicKey | Pda;
    /** Mint account */
    mint: PublicKey | Pda;
    /** Payer */
    payer?: Signer;
    /** Update authority */
    authority?: Signer;
    /** Collection metadata account */
    collectionMetadata: PublicKey | Pda;
    /** Delegate record account */
    delegateRecord: PublicKey | Pda;
    /** Token record account */
    tokenRecord?: PublicKey | Pda;
    /** System program */
    systemProgram?: PublicKey | Pda;
    /** Instruction sysvar account */
    sysvarInstructions?: PublicKey | Pda;
    /** SPL Token Program */
    splTokenProgram?: PublicKey | Pda;
    /** Token Authorization Rules Program */
    authorizationRulesProgram?: PublicKey | Pda;
    /** Token Authorization Rules account */
    authorizationRules?: PublicKey | Pda;
};
export type MigrateInstructionData = {
    discriminator: number;
};
export type MigrateInstructionDataArgs = {};
export declare function getMigrateInstructionDataSerializer(): Serializer<MigrateInstructionDataArgs, MigrateInstructionData>;
export declare function migrate(context: Pick<Context, 'eddsa' | 'identity' | 'payer' | 'programs'>, input: MigrateInstructionAccounts): TransactionBuilder;
