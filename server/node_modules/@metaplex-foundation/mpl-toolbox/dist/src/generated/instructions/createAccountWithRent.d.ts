/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type CreateAccountWithRentInstructionAccounts = {
    /** The account paying for the storage */
    payer?: Signer;
    /** The account being created */
    newAccount: Signer;
    /** System program */
    systemProgram?: PublicKey | Pda;
};
export type CreateAccountWithRentInstructionData = {
    discriminator: number;
    space: bigint;
    programId: PublicKey;
};
export type CreateAccountWithRentInstructionDataArgs = {
    space: number | bigint;
    programId: PublicKey;
};
export declare function getCreateAccountWithRentInstructionDataSerializer(): Serializer<CreateAccountWithRentInstructionDataArgs, CreateAccountWithRentInstructionData>;
export type CreateAccountWithRentInstructionArgs = CreateAccountWithRentInstructionDataArgs;
export declare function createAccountWithRent(context: Pick<Context, 'payer' | 'programs'>, input: CreateAccountWithRentInstructionAccounts & CreateAccountWithRentInstructionArgs): TransactionBuilder;
