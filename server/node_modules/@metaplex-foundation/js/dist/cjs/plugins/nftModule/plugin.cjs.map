{"version":3,"file":"plugin.cjs","sources":["../../../../src/plugins/nftModule/plugin.ts"],"sourcesContent":["import { cusper, PROGRAM_ID } from '@metaplex-foundation/mpl-token-metadata';\nimport { ProgramClient } from '../programModule';\nimport { NftClient } from './NftClient';\nimport {\n  approveNftCollectionAuthorityOperation,\n  approveNftCollectionAuthorityOperationHandler,\n  approveNftDelegateOperation,\n  approveNftDelegateOperationHandler,\n  approveNftUseAuthorityOperation,\n  approveNftUseAuthorityOperationHandler,\n  createNftOperation,\n  createNftOperationHandler,\n  createSftOperation,\n  createSftOperationHandler,\n  deleteNftOperation,\n  deleteNftOperationHandler,\n  findNftByAssetIdOperation,\n  findNftByAssetIdOperationHandler,\n  findNftByMetadataOperation,\n  transferCompressedNftOperation,\n  transferCompressedNftOperationHandler,\n  createCompressedNftOperation,\n  createCompressedNftOperationHandler,\n  findNftByMetadataOperationHandler,\n  findNftByMintOperation,\n  findNftByMintOperationHandler,\n  findNftByTokenOperation,\n  findNftByTokenOperationHandler,\n  findNftsByCreatorOperation,\n  findNftsByCreatorOperationHandler,\n  findNftsByMintListOperation,\n  findNftsByMintListOperationHandler,\n  findNftsByOwnerOperation,\n  findNftsByOwnerOperationHandler,\n  findNftsByUpdateAuthorityOperation,\n  findNftsByUpdateAuthorityOperationHandler,\n  freezeDelegatedNftOperation,\n  freezeDelegatedNftOperationHandler,\n  loadMetadataOperation,\n  loadMetadataOperationHandler,\n  lockNftOperation,\n  lockNftOperationHandler,\n  migrateToSizedCollectionNftOperation,\n  migrateToSizedCollectionNftOperationHandler,\n  mintNftOperation,\n  mintNftOperationHandler,\n  printNewEditionOperation,\n  printNewEditionOperationHandler,\n  revokeNftCollectionAuthorityOperation,\n  revokeNftCollectionAuthorityOperationHandler,\n  revokeNftDelegateOperation,\n  revokeNftDelegateOperationHandler,\n  revokeNftUseAuthorityOperation,\n  revokeNftUseAuthorityOperationHandler,\n  thawDelegatedNftOperation,\n  thawDelegatedNftOperationHandler,\n  transferNftOperation,\n  transferNftOperationHandler,\n  unlockNftOperation,\n  unlockNftOperationHandler,\n  unverifyNftCollectionOperation,\n  unverifyNftCollectionOperationHandler,\n  unverifyNftCreatorOperation,\n  unverifyNftCreatorOperationHandler,\n  updateNftOperation,\n  updateNftOperationHandler,\n  uploadMetadataOperation,\n  uploadMetadataOperationHandler,\n  useNftOperation,\n  useNftOperationHandler,\n  verifyNftCollectionOperation,\n  verifyNftCollectionOperationHandler,\n  verifyNftCreatorOperation,\n  verifyNftCreatorOperationHandler,\n} from './operations';\nimport { ErrorWithLogs, MetaplexPlugin, Program } from '@/types';\nimport type { Metaplex } from '@/Metaplex';\n\n/** @group Plugins */\nexport const nftModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    // Token Metadata Program.\n    const tokenMetadataProgram = {\n      name: 'TokenMetadataProgram',\n      address: PROGRAM_ID,\n      errorResolver: (error: ErrorWithLogs) =>\n        cusper.errorFromProgramLogs(error.logs, false),\n    };\n    metaplex.programs().register(tokenMetadataProgram);\n    metaplex.programs().getTokenMetadata = function (\n      this: ProgramClient,\n      programs?: Program[]\n    ) {\n      return this.get(tokenMetadataProgram.name, programs);\n    };\n\n    // Operations.\n    const op = metaplex.operations();\n    op.register(\n      approveNftCollectionAuthorityOperation,\n      approveNftCollectionAuthorityOperationHandler\n    );\n    op.register(\n      approveNftDelegateOperation,\n      approveNftDelegateOperationHandler\n    );\n    op.register(\n      approveNftUseAuthorityOperation,\n      approveNftUseAuthorityOperationHandler\n    );\n    op.register(createNftOperation, createNftOperationHandler);\n    op.register(createSftOperation, createSftOperationHandler);\n    op.register(deleteNftOperation, deleteNftOperationHandler);\n    op.register(findNftByAssetIdOperation, findNftByAssetIdOperationHandler);\n    op.register(\n      createCompressedNftOperation,\n      createCompressedNftOperationHandler\n    );\n    op.register(\n      transferCompressedNftOperation,\n      transferCompressedNftOperationHandler\n    );\n    op.register(findNftByMetadataOperation, findNftByMetadataOperationHandler);\n    op.register(findNftByMintOperation, findNftByMintOperationHandler);\n    op.register(findNftByTokenOperation, findNftByTokenOperationHandler);\n    op.register(findNftsByCreatorOperation, findNftsByCreatorOperationHandler);\n    op.register(\n      findNftsByMintListOperation,\n      findNftsByMintListOperationHandler\n    );\n    op.register(findNftsByOwnerOperation, findNftsByOwnerOperationHandler);\n    op.register(\n      findNftsByUpdateAuthorityOperation,\n      findNftsByUpdateAuthorityOperationHandler\n    );\n    op.register(\n      freezeDelegatedNftOperation,\n      freezeDelegatedNftOperationHandler\n    );\n    op.register(loadMetadataOperation, loadMetadataOperationHandler);\n    op.register(lockNftOperation, lockNftOperationHandler);\n    op.register(\n      migrateToSizedCollectionNftOperation,\n      migrateToSizedCollectionNftOperationHandler\n    );\n    op.register(mintNftOperation, mintNftOperationHandler);\n    op.register(printNewEditionOperation, printNewEditionOperationHandler);\n    op.register(\n      revokeNftCollectionAuthorityOperation,\n      revokeNftCollectionAuthorityOperationHandler\n    );\n    op.register(revokeNftDelegateOperation, revokeNftDelegateOperationHandler);\n    op.register(\n      revokeNftUseAuthorityOperation,\n      revokeNftUseAuthorityOperationHandler\n    );\n    op.register(thawDelegatedNftOperation, thawDelegatedNftOperationHandler);\n    op.register(transferNftOperation, transferNftOperationHandler);\n    op.register(unlockNftOperation, unlockNftOperationHandler);\n    op.register(\n      unverifyNftCollectionOperation,\n      unverifyNftCollectionOperationHandler\n    );\n    op.register(\n      unverifyNftCreatorOperation,\n      unverifyNftCreatorOperationHandler\n    );\n    op.register(updateNftOperation, updateNftOperationHandler);\n    op.register(uploadMetadataOperation, uploadMetadataOperationHandler);\n    op.register(useNftOperation, useNftOperationHandler);\n    op.register(\n      verifyNftCollectionOperation,\n      verifyNftCollectionOperationHandler\n    );\n    op.register(verifyNftCreatorOperation, verifyNftCreatorOperationHandler);\n\n    metaplex.nfts = function () {\n      return new NftClient(this);\n    };\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    nfts(): NftClient;\n  }\n}\n\ndeclare module '../programModule/ProgramClient' {\n  interface ProgramClient {\n    getTokenMetadata(programs?: Program[]): Program;\n  }\n}\n"],"names":["nftModule","install","metaplex","tokenMetadataProgram","name","address","PROGRAM_ID","errorResolver","error","cusper","errorFromProgramLogs","logs","programs","register","getTokenMetadata","get","op","operations","approveNftCollectionAuthorityOperation","approveNftCollectionAuthorityOperationHandler","approveNftDelegateOperation","approveNftDelegateOperationHandler","approveNftUseAuthorityOperation","approveNftUseAuthorityOperationHandler","createNftOperation","createNftOperationHandler","createSftOperation","createSftOperationHandler","deleteNftOperation","deleteNftOperationHandler","findNftByAssetIdOperation","findNftByAssetIdOperationHandler","createCompressedNftOperation","createCompressedNftOperationHandler","transferCompressedNftOperation","transferCompressedNftOperationHandler","findNftByMetadataOperation","findNftByMetadataOperationHandler","findNftByMintOperation","findNftByMintOperationHandler","findNftByTokenOperation","findNftByTokenOperationHandler","findNftsByCreatorOperation","findNftsByCreatorOperationHandler","findNftsByMintListOperation","findNftsByMintListOperationHandler","findNftsByOwnerOperation","findNftsByOwnerOperationHandler","findNftsByUpdateAuthorityOperation","findNftsByUpdateAuthorityOperationHandler","freezeDelegatedNftOperation","freezeDelegatedNftOperationHandler","loadMetadataOperation","loadMetadataOperationHandler","lockNftOperation","lockNftOperationHandler","migrateToSizedCollectionNftOperation","migrateToSizedCollectionNftOperationHandler","mintNftOperation","mintNftOperationHandler","printNewEditionOperation","printNewEditionOperationHandler","revokeNftCollectionAuthorityOperation","revokeNftCollectionAuthorityOperationHandler","revokeNftDelegateOperation","revokeNftDelegateOperationHandler","revokeNftUseAuthorityOperation","revokeNftUseAuthorityOperationHandler","thawDelegatedNftOperation","thawDelegatedNftOperationHandler","transferNftOperation","transferNftOperationHandler","unlockNftOperation","unlockNftOperationHandler","unverifyNftCollectionOperation","unverifyNftCollectionOperationHandler","unverifyNftCreatorOperation","unverifyNftCreatorOperationHandler","updateNftOperation","updateNftOperationHandler","uploadMetadataOperation","uploadMetadataOperationHandler","useNftOperation","useNftOperationHandler","verifyNftCollectionOperation","verifyNftCollectionOperationHandler","verifyNftCreatorOperation","verifyNftCreatorOperationHandler","nfts","NftClient"],"mappings":"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"}