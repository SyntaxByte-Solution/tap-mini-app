import { botTaxBeet } from '@metaplex-foundation/mpl-candy-guard';
import { mapSerializer, createSerializerFromBeet } from '../../../types/Serializer.mjs';
import { lamports } from '../../../types/Amount.mjs';

/**
 * The botTax guard charges a penalty for invalid transactions
 * in order to discourage bots from attempting to mint NFTs.
 *
 * This bot tax works in combinaison with other guards and
 * will trigger whenever a minting wallet attempts to mint
 * an NFT such that other guards would have rejected the mint.
 *
 * For example, if you have a startDate guard and a botTax guard,
 * anyone trying to mint before the defined start date will be
 * charged the bot tax instead of receiving a specific startDate error.
 *
 * This object defines the settings that should be
 * provided when creating and/or updating a Candy
 * Machine if you wish to enable this guard.
 */

/** @internal */
const botTaxGuardManifest = {
  name: 'botTax',
  settingsBytes: 9,
  settingsSerializer: mapSerializer(createSerializerFromBeet(botTaxBeet), settings => ({
    ...settings,
    lamports: lamports(settings.lamports)
  }), settings => ({
    ...settings,
    lamports: settings.lamports.basisPoints
  }))
};

export { botTaxGuardManifest };
//# sourceMappingURL=botTax.mjs.map
