/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { Key, KeyArgs } from '../types';
export type EditionMarkerV2 = Account<EditionMarkerV2AccountData>;
export type EditionMarkerV2AccountData = {
    key: Key;
    ledger: Uint8Array;
};
export type EditionMarkerV2AccountDataArgs = {
    key: KeyArgs;
    ledger: Uint8Array;
};
export declare function getEditionMarkerV2AccountDataSerializer(): Serializer<EditionMarkerV2AccountDataArgs, EditionMarkerV2AccountData>;
export declare function deserializeEditionMarkerV2(rawAccount: RpcAccount): EditionMarkerV2;
export declare function fetchEditionMarkerV2(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<EditionMarkerV2>;
export declare function safeFetchEditionMarkerV2(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<EditionMarkerV2 | null>;
export declare function fetchAllEditionMarkerV2(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<EditionMarkerV2[]>;
export declare function safeFetchAllEditionMarkerV2(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<EditionMarkerV2[]>;
export declare function getEditionMarkerV2GpaBuilder(context: Pick<Context, 'rpc' | 'programs'>): import("@metaplex-foundation/umi").GpaBuilder<EditionMarkerV2, {
    key: KeyArgs;
    ledger: Uint8Array;
}>;
export declare function findEditionMarkerV2Pda(context: Pick<Context, 'eddsa' | 'programs'>, seeds: {
    /** The address of the mint account */
    mint: PublicKey;
}): Pda;
export declare function fetchEditionMarkerV2FromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findEditionMarkerV2Pda>[1], options?: RpcGetAccountOptions): Promise<EditionMarkerV2>;
export declare function safeFetchEditionMarkerV2FromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findEditionMarkerV2Pda>[1], options?: RpcGetAccountOptions): Promise<EditionMarkerV2 | null>;
