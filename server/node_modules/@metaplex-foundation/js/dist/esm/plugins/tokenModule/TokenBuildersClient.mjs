import { createMintBuilder } from './operations/createMint.mjs';
import { createTokenBuilder, createTokenIfMissingBuilder } from './operations/createToken.mjs';
import { createTokenWithMintBuilder } from './operations/createTokenWithMint.mjs';
import { mintTokensBuilder } from './operations/mintTokens.mjs';
import { sendTokensBuilder } from './operations/sendTokens.mjs';
import { freezeTokensBuilder } from './operations/freezeTokens.mjs';
import { thawTokensBuilder } from './operations/thawTokens.mjs';
import { approveTokenDelegateAuthorityBuilder } from './operations/approveTokenDelegateAuthority.mjs';
import { revokeTokenDelegateAuthorityBuilder } from './operations/revokeTokenDelegateAuthority.mjs';

/**
 * This client allows you to access the underlying Transaction Builders
 * for the write operations of the Token module.
 *
 * @see {@link TokenClient}
 * @group Module Builders
 * */
class TokenBuildersClient {
  constructor(metaplex) {
    this.metaplex = metaplex;
  }

  // -----------------
  // Create
  // -----------------

  /** {@inheritDoc createMintBuilder} */
  createMint(input, options) {
    return createMintBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc createTokenBuilder} */
  createToken(input, options) {
    return createTokenBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc createTokenIfMissingBuilder} @internal */
  createTokenIfMissing(input, options) {
    return createTokenIfMissingBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc createTokenWithMintBuilder} */
  createTokenWithMint(input, options) {
    return createTokenWithMintBuilder(this.metaplex, input, options);
  }

  // -----------------
  // Update
  // -----------------

  /** {@inheritDoc mintTokensBuilder} */
  mint(input, options) {
    return mintTokensBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc sendTokensBuilder} */
  send(input, options) {
    return sendTokensBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc freezeTokensBuilder} */
  freeze(input, options) {
    return freezeTokensBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc thawTokensBuilder} */
  thaw(input, options) {
    return thawTokensBuilder(this.metaplex, input, options);
  }

  // -----------------
  // Delegate
  // -----------------

  /** {@inheritDoc approveTokenDelegateAuthorityBuilder} */
  approveDelegateAuthority(input, options) {
    return approveTokenDelegateAuthorityBuilder(this.metaplex, input, options);
  }

  /** {@inheritDoc revokeTokenDelegateAuthorityBuilder} */
  revokeDelegateAuthority(input, options) {
    return revokeTokenDelegateAuthorityBuilder(this.metaplex, input, options);
  }
}

export { TokenBuildersClient };
//# sourceMappingURL=TokenBuildersClient.mjs.map
