{"version":3,"file":"errors.mjs","sources":["../../../../src/plugins/candyMachineModule/errors.ts"],"sourcesContent":["import { MetaplexError } from '@/errors';\n\n/** @group Errors */\nexport class CandyMachineV3Error extends MetaplexError {\n  readonly name: string = 'CandyMachineV3Error';\n  constructor(message: string, cause?: Error) {\n    super(message, 'plugin', 'Candy Machine V3', cause);\n  }\n}\n\n/** @group Errors */\nexport class UnregisteredCandyGuardError extends CandyMachineV3Error {\n  readonly name: string = 'UnregisteredCandyGuardError';\n  constructor(name: string) {\n    const message =\n      `The SDK is trying to access a custom Candy Guard named [${name}] ` +\n      `but that guard was not registered in the SDK ` +\n      'Register your custom guard by calling the `metaplex.candyMachines().guards().register()` method.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineIsFullError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineIsFullError';\n  constructor(index: number, itemsAvailable: number) {\n    const message =\n      `You are trying to add an item at index ${index} to a Candy Machine that ` +\n      `can only hold a maximum of ${itemsAvailable} items. ` +\n      'Limit number of items you are adding or create a Candy Machine that can hold more of them.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineCannotAddAmountError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineCannotAddAmountError';\n  constructor(index: number, amount: number, itemsAvailable: number) {\n    const message =\n      `You are trying to add ${amount} items to candy machine starting at index ${index} ` +\n      ` but it can only hold a maximum of ${itemsAvailable} items. ` +\n      'Limit number of assets you are adding or create a Candy Machine that can hold more of them.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineItemTextTooLongError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineItemTextTooLongError';\n  constructor(\n    index: number,\n    type: 'name' | 'uri',\n    text: string,\n    limit: number\n  ) {\n    const message =\n      `You are trying to add an item to a Candy Machine but its ${type} is too long. ` +\n      `The item settings define the ${type} limit as ${limit} characters but the following ` +\n      `content was provided [${text}] for the item at index ${index} ` +\n      `Reduce the size of the ${type} for the item at index ${index}.`;\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineBotTaxError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineBotTaxError';\n  constructor(explorerLink: string, cause: Error) {\n    const message =\n      `The NFT couldn't be fetched after being minted. ` +\n      `This is most likely due to a bot tax that occured during minting. ` +\n      `When someone tries to mint an NFT from a Candy Machine which cannot be minted from, ` +\n      `the program will succeed and charge a small tax to fight against bots. ` +\n      `Ensure you can mint from the Candy Machine. ` +\n      `You may want to check the transaction logs for more details: [${explorerLink}].`;\n    super(message, cause);\n  }\n}\n\n/** @group Errors */\nexport class GuardGroupRequiredError extends CandyMachineV3Error {\n  readonly name: string = 'GuardGroupRequiredError';\n  constructor(availableGroups: string[]) {\n    const message =\n      'The provided Candy Machine defines groups of guards but no' +\n      'group label was provided to identity which group we should select. ' +\n      'Please provide the label of the group you wish to select from via the `group` parameter. ' +\n      `The available groups are [${availableGroups.join(', ')}]`;\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class SelectedGuardGroupDoesNotExistError extends CandyMachineV3Error {\n  readonly name: string = 'SelectedGuardGroupDoesNotExistError';\n  constructor(selectedGroup: string, availableGroups: string[]) {\n    const message =\n      `You're trying to select the guard group [${selectedGroup}] from a ` +\n      'Candy Machine but this group does not exists on this Candy Machine. ' +\n      (availableGroups.length > 0\n        ? 'Please provide the label of a group that exists on the Candy Machine. ' +\n          `The available groups are [${availableGroups.join(', ')}]`\n        : 'There are no guard groups defined on the Candy Machine. ' +\n          'Please set the `group` parameter to `null` or remove it altogether.');\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardMintSettingsMissingError extends CandyMachineV3Error {\n  readonly name: string = 'GuardMintSettingsMissingError';\n  constructor(guardName: string) {\n    const message =\n      `The Candy Machine you are trying to mint from has the [${guardName}] guard enabled. ` +\n      'This guard requires you to provide some additional settings when minting which you did not provide. ' +\n      `Please provide some minting settings for the [${guardName}] guard ` +\n      `via the \\`guards\\` parameter like so: \\`guards.${guardName} = {...}\\`.`;\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardRouteNotSupportedError extends CandyMachineV3Error {\n  readonly name: string = 'GuardRouteNotSupportedError';\n  constructor(guardName: string) {\n    const message =\n      `You are trying to call the route instruction of the [${guardName}] guard ` +\n      'but this guard does not support this feature or did not register it on the SDK. ' +\n      'Please select a guard that support the route instruction feature. ' +\n      'If you are using a custom guard, make sure you registered the route instruction ' +\n      'feature by implementing the `routeSettingsParser` method on the guard manifest.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyGuardRequiredOnCandyMachineError extends CandyMachineV3Error {\n  readonly name: string = 'CandyGuardRequiredOnCandyMachineError';\n  constructor() {\n    const message =\n      `The provided Candy Machine does not have a Candy Guard associated with ` +\n      `it yet, it is required for the operation you are trying to execute. ` +\n      'Please provide a Candy Machine with an associated Candy Guard account.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardNotEnabledError extends CandyMachineV3Error {\n  readonly name: string = 'GuardNotEnabledError';\n  constructor(guard: string, group: string | null) {\n    const message =\n      (group\n        ? `The guard [${guard}] is not enabled on the group [${group}] of the Candy Machine.`\n        : `The guard [${guard}] is not enabled on the Candy Machine. `) +\n      'Please provide a different guard or select a different group ' +\n      'such that the provided guard is enabled on the selected group.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardGroupLabelTooLongError extends CandyMachineV3Error {\n  readonly name: string = 'GuardGroupLabelTooLongError';\n  constructor(label: string, maxLength: number) {\n    const message =\n      `The provided group label [${label}] is too long. ` +\n      `Group labels cannot be longer than ${maxLength} characters. ` +\n      'Please provide a shorter group label.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class UnrecognizePathForRouteInstructionError extends CandyMachineV3Error {\n  readonly name: string = 'UnrecognizePathForRouteInstructionError';\n  constructor(guard: string, path: string) {\n    const message =\n      `The provided path [${path}] does not exist on the route instruction of the [${guard}] guard. ` +\n      'Please provide a recognized path.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class MintOwnerMustBeMintPayerError extends CandyMachineV3Error {\n  readonly name: string = 'MintOwnerMustBeMintPayerError';\n  constructor(guard: string) {\n    const message =\n      `The payer must be the owner when using the [${guard}] guard. ` +\n      'Please remove the `owner` attribute from the mint input so they can be the same.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class MaximumOfFiveAdditionalProgramsError extends CandyMachineV3Error {\n  readonly name: string = 'MaximumOfFiveAdditionalProgramsError';\n  constructor() {\n    const message =\n      `There is a maximum of five additional programs when using the [programGate] guard. ` +\n      'Please reduce the number of additional programs to <= 5.';\n    super(message);\n  }\n}\n"],"names":["CandyMachineV3Error","MetaplexError","constructor","message","cause","UnregisteredCandyGuardError","name","CandyMachineIsFullError","index","itemsAvailable","CandyMachineCannotAddAmountError","amount","CandyMachineItemTextTooLongError","type","text","limit","CandyMachineBotTaxError","explorerLink","GuardGroupRequiredError","availableGroups","join","SelectedGuardGroupDoesNotExistError","selectedGroup","length","GuardMintSettingsMissingError","guardName","GuardRouteNotSupportedError","CandyGuardRequiredOnCandyMachineError","GuardNotEnabledError","guard","group","GuardGroupLabelTooLongError","label","maxLength","UnrecognizePathForRouteInstructionError","path","MintOwnerMustBeMintPayerError","MaximumOfFiveAdditionalProgramsError"],"mappings":"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"}