/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type UpdatePrimarySaleHappenedViaTokenInstructionAccounts = {
    /** Metadata key (pda of ['metadata', program id, mint id]) */
    metadata: PublicKey | Pda;
    /** Owner on the token account */
    owner: Signer;
    /** Account containing tokens from the metadata's mint */
    token: PublicKey | Pda;
};
export type UpdatePrimarySaleHappenedViaTokenInstructionData = {
    discriminator: number;
};
export type UpdatePrimarySaleHappenedViaTokenInstructionDataArgs = {};
export declare function getUpdatePrimarySaleHappenedViaTokenInstructionDataSerializer(): Serializer<UpdatePrimarySaleHappenedViaTokenInstructionDataArgs, UpdatePrimarySaleHappenedViaTokenInstructionData>;
export declare function updatePrimarySaleHappenedViaToken(context: Pick<Context, 'programs'>, input: UpdatePrimarySaleHappenedViaTokenInstructionAccounts): TransactionBuilder;
