'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var ed25519 = require('@noble/ed25519');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var ed25519__namespace = /*#__PURE__*/_interopNamespace(ed25519);

class KeypairIdentityDriver {
  constructor(keypair) {
    this.keypair = keypair;
    this.publicKey = keypair.publicKey;
    this.secretKey = keypair.secretKey;
  }
  async signMessage(message) {
    return ed25519__namespace.sync.sign(message, this.secretKey.slice(0, 32));
  }
  async signTransaction(transaction) {
    transaction.partialSign(this.keypair);
    return transaction;
  }
  async signAllTransactions(transactions) {
    return Promise.all(transactions.map(transaction => this.signTransaction(transaction)));
  }
}

exports.KeypairIdentityDriver = KeypairIdentityDriver;
//# sourceMappingURL=KeypairIdentityDriver.cjs.map
