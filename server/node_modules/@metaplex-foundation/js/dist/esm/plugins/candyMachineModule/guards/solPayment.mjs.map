{"version":3,"file":"solPayment.mjs","sources":["../../../../../src/plugins/candyMachineModule/guards/solPayment.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport {\n  SolPayment,\n  solPaymentBeet,\n} from '@metaplex-foundation/mpl-candy-guard';\nimport { CandyGuardManifest } from './core';\nimport {\n  createSerializerFromBeet,\n  lamports,\n  mapSerializer,\n  PublicKey,\n  SolAmount,\n} from '@/types';\n\n/**\n * The solPayment guard is used to charge an\n * amount in SOL for the minted NFT.\n *\n * This object defines the settings that should be\n * provided when creating and/or updating a Candy\n * Machine if you wish to enable this guard.\n */\nexport type SolPaymentGuardSettings = {\n  /** The amount in SOL to charge for. */\n  amount: SolAmount;\n\n  /** The configured destination address to send the funds to. */\n  destination: PublicKey;\n};\n\n/** @internal */\nexport const solPaymentGuardManifest: CandyGuardManifest<SolPaymentGuardSettings> =\n  {\n    name: 'solPayment',\n    settingsBytes: 40,\n    settingsSerializer: mapSerializer<SolPayment, SolPaymentGuardSettings>(\n      createSerializerFromBeet(solPaymentBeet),\n      (settings) => ({ ...settings, amount: lamports(settings.lamports) }),\n      (settings) => ({ ...settings, lamports: settings.amount.basisPoints })\n    ),\n    mintSettingsParser: ({ settings }) => {\n      return {\n        arguments: Buffer.from([]),\n        remainingAccounts: [\n          {\n            isSigner: false,\n            address: settings.destination,\n            isWritable: true,\n          },\n        ],\n      };\n    },\n  };\n"],"names":["solPaymentGuardManifest","name","settingsBytes","settingsSerializer","mapSerializer","createSerializerFromBeet","solPaymentBeet","settings","amount","lamports","basisPoints","mintSettingsParser","arguments","Buffer","from","remainingAccounts","isSigner","address","destination","isWritable"],"mappings":";;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACO,MAAMA,uBAAoE,GAC/E;AACEC,EAAAA,IAAI,EAAE,YAAY;AAClBC,EAAAA,aAAa,EAAE,EAAE;EACjBC,kBAAkB,EAAEC,aAAa,CAC/BC,wBAAwB,CAACC,cAAc,CAAC,EACvCC,QAAQ,KAAM;AAAE,IAAA,GAAGA,QAAQ;AAAEC,IAAAA,MAAM,EAAEC,QAAQ,CAACF,QAAQ,CAACE,QAAQ,CAAA;GAAG,CAAC,EACnEF,QAAQ,KAAM;AAAE,IAAA,GAAGA,QAAQ;AAAEE,IAAAA,QAAQ,EAAEF,QAAQ,CAACC,MAAM,CAACE,WAAAA;AAAY,GAAC,CAAC,CACvE;AACDC,EAAAA,kBAAkB,EAAE,CAAC;AAAEJ,IAAAA,QAAAA;AAAS,GAAC,KAAK;IACpC,OAAO;AACLK,MAAAA,SAAS,EAAEC,MAAM,CAACC,IAAI,CAAC,EAAE,CAAC;AAC1BC,MAAAA,iBAAiB,EAAE,CACjB;AACEC,QAAAA,QAAQ,EAAE,KAAK;QACfC,OAAO,EAAEV,QAAQ,CAACW,WAAW;AAC7BC,QAAAA,UAAU,EAAE,IAAA;OACb,CAAA;KAEJ,CAAA;AACH,GAAA;AACF;;;;"}