/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type RevokeCollectionAuthorityInstructionAccounts = {
    /** Collection Authority Record PDA */
    collectionAuthorityRecord: PublicKey | Pda;
    /** Delegated Collection Authority */
    delegateAuthority: PublicKey | Pda;
    /** Update Authority, or Delegated Authority, of Collection NFT */
    revokeAuthority: Signer;
    /** Metadata account */
    metadata?: PublicKey | Pda;
    /** Mint of Metadata */
    mint: PublicKey | Pda;
};
export type RevokeCollectionAuthorityInstructionData = {
    discriminator: number;
};
export type RevokeCollectionAuthorityInstructionDataArgs = {};
export declare function getRevokeCollectionAuthorityInstructionDataSerializer(): Serializer<RevokeCollectionAuthorityInstructionDataArgs, RevokeCollectionAuthorityInstructionData>;
export declare function revokeCollectionAuthority(context: Pick<Context, 'eddsa' | 'programs'>, input: RevokeCollectionAuthorityInstructionAccounts): TransactionBuilder;
