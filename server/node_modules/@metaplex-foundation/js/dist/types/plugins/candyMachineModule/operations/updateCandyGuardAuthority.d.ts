import type { PublicKey } from '@solana/web3.js';
import { SendAndConfirmTransactionResponse } from '../../rpcModule';
import { Metaplex } from '../../../Metaplex';
import { Operation, OperationHandler, Signer } from '../../../types';
import { TransactionBuilder, TransactionBuilderOptions } from '../../../utils';
declare const Key: "UpdateCandyGuardAuthorityOperation";
/**
 * Updates the authority of a Candy Guard account.
 *
 * ```ts
 * await metaplex
 *   .candyMachines()
 *   .updateCandyGuardAuthority({
 *     candyGuard: candyGuard.address,
 *     authority: candyGuardAuthority,
 *     newAuthority,
 *   };
 * ```
 *
 * @group Operations
 * @category Constructors
 */
export declare const updateCandyGuardAuthorityOperation: import("../../../types").OperationConstructor<UpdateCandyGuardAuthorityOperation, "UpdateCandyGuardAuthorityOperation", UpdateCandyGuardAuthorityInput, UpdateCandyGuardAuthorityOutput>;
/**
 * @group Operations
 * @category Types
 */
export type UpdateCandyGuardAuthorityOperation = Operation<typeof Key, UpdateCandyGuardAuthorityInput, UpdateCandyGuardAuthorityOutput>;
/**
 * @group Operations
 * @category Inputs
 */
export type UpdateCandyGuardAuthorityInput = {
    /** The address of the Candy Guard to update. */
    candyGuard: PublicKey;
    /**
     * The Signer authorized to update the candy Guard.
     *
     * @defaultValue `metaplex.identity()`
     */
    authority?: Signer;
    /** The address of the new authority. */
    newAuthority: PublicKey;
};
/**
 * @group Operations
 * @category Outputs
 */
export type UpdateCandyGuardAuthorityOutput = {
    /** The blockchain response from sending and confirming the transaction. */
    response: SendAndConfirmTransactionResponse;
};
/**
 * @group Operations
 * @category Handlers
 */
export declare const updateCandyGuardAuthorityOperationHandler: OperationHandler<UpdateCandyGuardAuthorityOperation>;
/**
 * @group Transaction Builders
 * @category Inputs
 */
export type UpdateCandyGuardAuthorityBuilderParams = Omit<UpdateCandyGuardAuthorityInput, 'confirmOptions'> & {
    /** A key to distinguish the instruction that updates the candy guard. */
    instructionKey?: string;
};
/**
 * Updates the authority of a Candy Guard account.
 *
 * ```ts
 * await metaplex
 *   .candyMachines()
 *   .builders()
 *   .updateCandyGuardAuthority({
 *     candyGuard: candyGuard.address,
 *     authority: candyGuardAuthority,
 *     newAuthority,
 *   };
 * ```
 *
 * @group Transaction Builders
 * @category Constructors
 */
export declare const updateCandyGuardAuthorityBuilder: (metaplex: Metaplex, params: UpdateCandyGuardAuthorityBuilderParams, options?: TransactionBuilderOptions) => TransactionBuilder;
export {};
