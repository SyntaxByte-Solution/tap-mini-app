{"version":3,"file":"helpers.cjs","sources":["../../../../src/plugins/candyMachineV2Module/helpers.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport {\n  CandyMachineData,\n  configLineBeet,\n} from '@metaplex-foundation/mpl-candy-machine';\nimport { CONFIG_ARRAY_START, CONFIG_LINE_SIZE } from './constants';\nimport { CandyMachineV2Item } from './models';\nimport { removeEmptyChars } from '@/utils';\nimport { BigNumber, toBigNumber } from '@/types';\n\nexport function countCandyMachineV2Items(rawData: Buffer): BigNumber {\n  const number = rawData.slice(CONFIG_ARRAY_START, CONFIG_ARRAY_START + 4);\n  return toBigNumber(number, 'le');\n}\n\nexport function parseCandyMachineV2Items(\n  rawData: Buffer\n): CandyMachineV2Item[] {\n  const configLinesStart = CONFIG_ARRAY_START + 4;\n  const lines = [];\n  const count = countCandyMachineV2Items(rawData).toNumber();\n  for (let i = 0; i < count; i++) {\n    const [line] = configLineBeet.deserialize(\n      rawData,\n      configLinesStart + i * CONFIG_LINE_SIZE\n    );\n    lines.push({\n      name: removeEmptyChars(line.name),\n      uri: removeEmptyChars(line.uri),\n    });\n  }\n  return lines;\n}\n\nexport function getCandyMachineV2AccountSizeFromData(data: CandyMachineData) {\n  if (data.hiddenSettings != null) {\n    return CONFIG_ARRAY_START;\n  }\n  const itemsAvailable = toBigNumber(data.itemsAvailable).toNumber();\n  return Math.ceil(\n    CONFIG_ARRAY_START +\n      4 +\n      itemsAvailable * CONFIG_LINE_SIZE +\n      8 +\n      2 * (itemsAvailable / 8 + 1)\n  );\n}\n\nexport const getCandyMachineV2UuidFromAddress = (\n  candyMachineAddress: PublicKey\n): string => {\n  return candyMachineAddress.toBase58().slice(0, 6);\n};\n"],"names":["countCandyMachineV2Items","rawData","number","slice","CONFIG_ARRAY_START","toBigNumber","parseCandyMachineV2Items","configLinesStart","lines","count","toNumber","i","line","configLineBeet","deserialize","CONFIG_LINE_SIZE","push","name","removeEmptyChars","uri","getCandyMachineV2AccountSizeFromData","data","hiddenSettings","itemsAvailable","Math","ceil","getCandyMachineV2UuidFromAddress","candyMachineAddress","toBase58"],"mappings":";;;;;;;;;AAUO,SAASA,wBAAwB,CAACC,OAAe,EAAa;EACnE,MAAMC,MAAM,GAAGD,OAAO,CAACE,KAAK,CAACC,4BAAkB,EAAEA,4BAAkB,GAAG,CAAC,CAAC,CAAA;AACxE,EAAA,OAAOC,qBAAW,CAACH,MAAM,EAAE,IAAI,CAAC,CAAA;AAClC,CAAA;AAEO,SAASI,wBAAwB,CACtCL,OAAe,EACO;AACtB,EAAA,MAAMM,gBAAgB,GAAGH,4BAAkB,GAAG,CAAC,CAAA;EAC/C,MAAMI,KAAK,GAAG,EAAE,CAAA;EAChB,MAAMC,KAAK,GAAGT,wBAAwB,CAACC,OAAO,CAAC,CAACS,QAAQ,EAAE,CAAA;EAC1D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,EAAEE,CAAC,EAAE,EAAE;AAC9B,IAAA,MAAM,CAACC,IAAI,CAAC,GAAGC,8BAAc,CAACC,WAAW,CACvCb,OAAO,EACPM,gBAAgB,GAAGI,CAAC,GAAGI,0BAAgB,CACxC,CAAA;IACDP,KAAK,CAACQ,IAAI,CAAC;AACTC,MAAAA,IAAI,EAAEC,uBAAgB,CAACN,IAAI,CAACK,IAAI,CAAC;AACjCE,MAAAA,GAAG,EAAED,uBAAgB,CAACN,IAAI,CAACO,GAAG,CAAA;AAChC,KAAC,CAAC,CAAA;AACJ,GAAA;AACA,EAAA,OAAOX,KAAK,CAAA;AACd,CAAA;AAEO,SAASY,oCAAoC,CAACC,IAAsB,EAAE;AAC3E,EAAA,IAAIA,IAAI,CAACC,cAAc,IAAI,IAAI,EAAE;AAC/B,IAAA,OAAOlB,4BAAkB,CAAA;AAC3B,GAAA;EACA,MAAMmB,cAAc,GAAGlB,qBAAW,CAACgB,IAAI,CAACE,cAAc,CAAC,CAACb,QAAQ,EAAE,CAAA;EAClE,OAAOc,IAAI,CAACC,IAAI,CACdrB,4BAAkB,GAChB,CAAC,GACDmB,cAAc,GAAGR,0BAAgB,GACjC,CAAC,GACD,CAAC,IAAIQ,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,CAC/B,CAAA;AACH,CAAA;AAEaG,MAAAA,gCAAgC,GAC3CC,mBAA8B,IACnB;EACX,OAAOA,mBAAmB,CAACC,QAAQ,EAAE,CAACzB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACnD;;;;;;;"}