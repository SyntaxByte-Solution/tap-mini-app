{"version":3,"file":"plugin.cjs","sources":["../../../../src/plugins/candyMachineModule/plugin.ts"],"sourcesContent":["import { ProgramClient } from '../programModule';\nimport { CandyMachineClient } from './CandyMachineClient';\nimport {\n  addressGateGuardManifest,\n  allowListGuardManifest,\n  botTaxGuardManifest,\n  endDateGuardManifest,\n  gatekeeperGuardManifest,\n  mintLimitGuardManifest,\n  nftBurnGuardManifest,\n  nftGateGuardManifest,\n  nftPaymentGuardManifest,\n  programGateGuardManifest,\n  redeemedAmountGuardManifest,\n  solPaymentGuardManifest,\n  startDateGuardManifest,\n  thirdPartySignerGuardManifest,\n  tokenBurnGuardManifest,\n  tokenGateGuardManifest,\n  tokenPaymentGuardManifest,\n} from './guards';\nimport {\n  CallCandyGuardRouteOperation,\n  callCandyGuardRouteOperation,\n  callCandyGuardRouteOperationHandler,\n  createCandyGuardOperation,\n  createCandyGuardOperationHandler,\n  createCandyMachineOperation,\n  createCandyMachineOperationHandler,\n  deleteCandyGuardOperation,\n  deleteCandyGuardOperationHandler,\n  deleteCandyMachineOperation,\n  deleteCandyMachineOperationHandler,\n  findCandyGuardByAddressOperation,\n  findCandyGuardByAddressOperationHandler,\n  findCandyGuardsByAuthorityOperation,\n  findCandyGuardsByAuthorityOperationHandler,\n  findCandyMachineByAddressOperation,\n  findCandyMachineByAddressOperationHandler,\n  insertCandyMachineItemsOperation,\n  insertCandyMachineItemsOperationHandler,\n  mintFromCandyMachineOperation,\n  mintFromCandyMachineOperationHandler,\n  unwrapCandyGuardOperation,\n  unwrapCandyGuardOperationHandler,\n  updateCandyGuardOperation,\n  updateCandyGuardOperationHandler,\n  updateCandyMachineOperation,\n  updateCandyMachineOperationHandler,\n  wrapCandyGuardOperation,\n  wrapCandyGuardOperationHandler,\n} from './operations';\nimport {\n  CandyGuardProgram,\n  candyMachineProgram,\n  defaultCandyGuardProgram,\n  gatewayProgram,\n} from './programs';\nimport {\n  updateCandyGuardAuthorityOperation,\n  updateCandyGuardAuthorityOperationHandler,\n} from './operations/updateCandyGuardAuthority';\nimport { freezeSolPaymentGuardManifest } from './guards/freezeSolPayment';\nimport { freezeTokenPaymentGuardManifest } from './guards/freezeTokenPayment';\nimport { MetaplexPlugin, OperationConstructor, Program } from '@/types';\nimport type { Metaplex } from '@/Metaplex';\n\n/** @group Plugins */\nexport const candyMachineModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    // Client.\n    const client = new CandyMachineClient(metaplex);\n    metaplex.candyMachines = () => client;\n\n    // Candy Machine Program.\n    metaplex.programs().register(candyMachineProgram);\n    metaplex.programs().getCandyMachine = function (\n      this: ProgramClient,\n      programs?: Program[]\n    ) {\n      return this.get(candyMachineProgram.name, programs);\n    };\n\n    // Candy Guard Program.\n    metaplex.programs().register(defaultCandyGuardProgram);\n    metaplex.programs().getCandyGuard = function <T extends CandyGuardProgram>(\n      this: ProgramClient,\n      programs?: Program[]\n    ): T {\n      return this.get(defaultCandyGuardProgram.name, programs);\n    };\n\n    // Gateway Program.\n    metaplex.programs().register(gatewayProgram);\n    metaplex.programs().getGateway = function (\n      this: ProgramClient,\n      programs?: Program[]\n    ) {\n      return this.get(gatewayProgram.name, programs);\n    };\n\n    // Default Guards.\n    client.guards().register(botTaxGuardManifest);\n    client.guards().register(solPaymentGuardManifest);\n    client.guards().register(tokenPaymentGuardManifest);\n    client.guards().register(startDateGuardManifest);\n    client.guards().register(thirdPartySignerGuardManifest);\n    client.guards().register(tokenGateGuardManifest);\n    client.guards().register(gatekeeperGuardManifest);\n    client.guards().register(endDateGuardManifest);\n    client.guards().register(allowListGuardManifest);\n    client.guards().register(mintLimitGuardManifest);\n    client.guards().register(nftPaymentGuardManifest);\n    client.guards().register(redeemedAmountGuardManifest);\n    client.guards().register(addressGateGuardManifest);\n    client.guards().register(nftGateGuardManifest);\n    client.guards().register(nftBurnGuardManifest);\n    client.guards().register(tokenBurnGuardManifest);\n    client.guards().register(freezeSolPaymentGuardManifest);\n    client.guards().register(freezeTokenPaymentGuardManifest);\n    client.guards().register(programGateGuardManifest);\n\n    // Operations.\n    const op = metaplex.operations();\n    op.register(\n      callCandyGuardRouteOperation as OperationConstructor<\n        CallCandyGuardRouteOperation<any>\n      >,\n      callCandyGuardRouteOperationHandler\n    );\n    op.register(createCandyGuardOperation, createCandyGuardOperationHandler);\n    op.register(\n      createCandyMachineOperation,\n      createCandyMachineOperationHandler\n    );\n    op.register(deleteCandyGuardOperation, deleteCandyGuardOperationHandler);\n    op.register(\n      deleteCandyMachineOperation,\n      deleteCandyMachineOperationHandler\n    );\n    op.register(\n      findCandyGuardByAddressOperation,\n      findCandyGuardByAddressOperationHandler\n    );\n    op.register(\n      findCandyGuardsByAuthorityOperation,\n      findCandyGuardsByAuthorityOperationHandler\n    );\n    op.register(\n      findCandyMachineByAddressOperation,\n      findCandyMachineByAddressOperationHandler\n    );\n    op.register(\n      insertCandyMachineItemsOperation,\n      insertCandyMachineItemsOperationHandler\n    );\n    op.register(\n      mintFromCandyMachineOperation,\n      mintFromCandyMachineOperationHandler\n    );\n    op.register(unwrapCandyGuardOperation, unwrapCandyGuardOperationHandler);\n    op.register(\n      updateCandyGuardAuthorityOperation,\n      updateCandyGuardAuthorityOperationHandler\n    );\n    op.register(updateCandyGuardOperation, updateCandyGuardOperationHandler);\n    op.register(\n      updateCandyMachineOperation,\n      updateCandyMachineOperationHandler\n    );\n    op.register(wrapCandyGuardOperation, wrapCandyGuardOperationHandler);\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    candyMachines(): CandyMachineClient;\n  }\n}\n\ndeclare module '../programModule/ProgramClient' {\n  interface ProgramClient {\n    getCandyMachine(programs?: Program[]): Program;\n    getCandyGuard<T extends CandyGuardProgram>(programs?: Program[]): T;\n    getGateway(programs?: Program[]): Program;\n  }\n}\n"],"names":["candyMachineModule","install","metaplex","client","CandyMachineClient","candyMachines","programs","register","candyMachineProgram","getCandyMachine","get","name","defaultCandyGuardProgram","getCandyGuard","gatewayProgram","getGateway","guards","botTaxGuardManifest","solPaymentGuardManifest","tokenPaymentGuardManifest","startDateGuardManifest","thirdPartySignerGuardManifest","tokenGateGuardManifest","gatekeeperGuardManifest","endDateGuardManifest","allowListGuardManifest","mintLimitGuardManifest","nftPaymentGuardManifest","redeemedAmountGuardManifest","addressGateGuardManifest","nftGateGuardManifest","nftBurnGuardManifest","tokenBurnGuardManifest","freezeSolPaymentGuardManifest","freezeTokenPaymentGuardManifest","programGateGuardManifest","op","operations","callCandyGuardRouteOperation","callCandyGuardRouteOperationHandler","createCandyGuardOperation","createCandyGuardOperationHandler","createCandyMachineOperation","createCandyMachineOperationHandler","deleteCandyGuardOperation","deleteCandyGuardOperationHandler","deleteCandyMachineOperation","deleteCandyMachineOperationHandler","findCandyGuardByAddressOperation","findCandyGuardByAddressOperationHandler","findCandyGuardsByAuthorityOperation","findCandyGuardsByAuthorityOperationHandler","findCandyMachineByAddressOperation","findCandyMachineByAddressOperationHandler","insertCandyMachineItemsOperation","insertCandyMachineItemsOperationHandler","mintFromCandyMachineOperation","mintFromCandyMachineOperationHandler","unwrapCandyGuardOperation","unwrapCandyGuardOperationHandler","updateCandyGuardAuthorityOperation","updateCandyGuardAuthorityOperationHandler","updateCandyGuardOperation","updateCandyGuardOperationHandler","updateCandyMachineOperation","updateCandyMachineOperationHandler","wrapCandyGuardOperation","wrapCandyGuardOperationHandler"],"mappings":"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"}