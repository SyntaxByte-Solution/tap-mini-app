{"version":3,"file":"DelegateType.mjs","sources":["../../../../src/plugins/nftModule/DelegateType.ts"],"sourcesContent":["import {\n  DelegateArgs,\n  TokenDelegateRole,\n  MetadataDelegateRole,\n} from '@metaplex-foundation/mpl-token-metadata';\nimport { DelegateRoleRequiredDataError } from './errors';\nimport { UnreachableCaseError } from '@/errors';\n\nexport type TokenDelegateType =\n  | 'StandardV1'\n  | 'TransferV1'\n  | 'LockedTransferV1'\n  | 'SaleV1'\n  | 'UtilityV1'\n  | 'StakingV1';\nexport type MetadataDelegateType =\n  // | 'AuthorityItemV1'\n  | 'CollectionV1'\n  // | 'UseV1'\n  | 'DataV1'\n  | 'ProgrammableConfigV1';\n\nconst tokenDelegateRoleMap: Record<TokenDelegateType, TokenDelegateRole> = {\n  StandardV1: TokenDelegateRole.Standard,\n  TransferV1: TokenDelegateRole.Transfer,\n  LockedTransferV1: TokenDelegateRole.LockedTransfer,\n  SaleV1: TokenDelegateRole.Sale,\n  UtilityV1: TokenDelegateRole.Utility,\n  StakingV1: TokenDelegateRole.Staking,\n};\n\nconst metadataDelegateRoleMap: Record<\n  MetadataDelegateType,\n  MetadataDelegateRole\n> = {\n  // AuthorityItemV1: MetadataDelegateRole.AuthorityItem,\n  CollectionV1: MetadataDelegateRole.Collection,\n  // UseV1: MetadataDelegateRole.Use,\n  DataV1: MetadataDelegateRole.Data,\n  ProgrammableConfigV1: MetadataDelegateRole.ProgrammableConfig,\n};\n\nconst metadataDelegateSeedMap: Record<MetadataDelegateRole, string> = {\n  [MetadataDelegateRole.AuthorityItem]: 'authority_item_delegate',\n  [MetadataDelegateRole.Collection]: 'collection_delegate',\n  [MetadataDelegateRole.Use]: 'use_delegate',\n  [MetadataDelegateRole.Data]: 'data_delegate',\n  [MetadataDelegateRole.ProgrammableConfig]: 'programmable_config_delegate',\n  [MetadataDelegateRole.DataItem]: 'data_item_delegate',\n  [MetadataDelegateRole.CollectionItem]: 'collection_item_delegate',\n  [MetadataDelegateRole.ProgrammableConfigItem]: 'prog_config_item_delegate',\n};\n\nconst delegateCustomDataMap: Record<\n  TokenDelegateType | MetadataDelegateType,\n  boolean\n> = {\n  // Metadata.\n  // AuthorityItemV1: false,\n  CollectionV1: false,\n  // UseV1: false,\n  DataV1: false,\n  ProgrammableConfigV1: false,\n  // Token\n  StandardV1: true,\n  TransferV1: true,\n  SaleV1: true,\n  UtilityV1: true,\n  StakingV1: true,\n  LockedTransferV1: true,\n};\n\nexport const getTokenDelegateRole = (\n  type: TokenDelegateType\n): TokenDelegateRole => {\n  const role = tokenDelegateRoleMap[type];\n  if (!role) throw new UnreachableCaseError(type as never);\n  return role;\n};\n\nexport const getMetadataDelegateRole = (\n  type: MetadataDelegateType\n): MetadataDelegateRole => {\n  const role = metadataDelegateRoleMap[type];\n  if (!role) throw new UnreachableCaseError(type as never);\n  return role;\n};\n\nexport const getMetadataDelegateRoleSeed = (\n  type: MetadataDelegateType\n): string => {\n  return metadataDelegateSeedMap[getMetadataDelegateRole(type)];\n};\n\nexport const getDefaultDelegateArgs = (\n  type: TokenDelegateType | MetadataDelegateType\n): Omit<DelegateArgs, 'authorizationData'> => {\n  const hasCustomData = delegateCustomDataMap[type];\n  if (hasCustomData === undefined)\n    throw new UnreachableCaseError(type as never);\n  if (hasCustomData) throw new DelegateRoleRequiredDataError(type);\n  return { __kind: type } as DelegateArgs;\n};\n"],"names":["tokenDelegateRoleMap","StandardV1","TokenDelegateRole","Standard","TransferV1","Transfer","LockedTransferV1","LockedTransfer","SaleV1","Sale","UtilityV1","Utility","StakingV1","Staking","metadataDelegateRoleMap","CollectionV1","MetadataDelegateRole","Collection","DataV1","Data","ProgrammableConfigV1","ProgrammableConfig","metadataDelegateSeedMap","AuthorityItem","Use","DataItem","CollectionItem","ProgrammableConfigItem","delegateCustomDataMap","getTokenDelegateRole","type","role","UnreachableCaseError","getMetadataDelegateRole","getMetadataDelegateRoleSeed","getDefaultDelegateArgs","hasCustomData","undefined","DelegateRoleRequiredDataError","__kind"],"mappings":";;;;AAsBA,MAAMA,oBAAkE,GAAG;EACzEC,UAAU,EAAEC,iBAAiB,CAACC,QAAQ;EACtCC,UAAU,EAAEF,iBAAiB,CAACG,QAAQ;EACtCC,gBAAgB,EAAEJ,iBAAiB,CAACK,cAAc;EAClDC,MAAM,EAAEN,iBAAiB,CAACO,IAAI;EAC9BC,SAAS,EAAER,iBAAiB,CAACS,OAAO;EACpCC,SAAS,EAAEV,iBAAiB,CAACW,OAAAA;AAC/B,CAAC,CAAA;AAED,MAAMC,uBAGL,GAAG;AACF;EACAC,YAAY,EAAEC,oBAAoB,CAACC,UAAU;AAC7C;EACAC,MAAM,EAAEF,oBAAoB,CAACG,IAAI;EACjCC,oBAAoB,EAAEJ,oBAAoB,CAACK,kBAAAA;AAC7C,CAAC,CAAA;AAED,MAAMC,uBAA6D,GAAG;AACpE,EAAA,CAACN,oBAAoB,CAACO,aAAa,GAAG,yBAAyB;AAC/D,EAAA,CAACP,oBAAoB,CAACC,UAAU,GAAG,qBAAqB;AACxD,EAAA,CAACD,oBAAoB,CAACQ,GAAG,GAAG,cAAc;AAC1C,EAAA,CAACR,oBAAoB,CAACG,IAAI,GAAG,eAAe;AAC5C,EAAA,CAACH,oBAAoB,CAACK,kBAAkB,GAAG,8BAA8B;AACzE,EAAA,CAACL,oBAAoB,CAACS,QAAQ,GAAG,oBAAoB;AACrD,EAAA,CAACT,oBAAoB,CAACU,cAAc,GAAG,0BAA0B;EACjE,CAACV,oBAAoB,CAACW,sBAAsB,GAAG,2BAAA;AACjD,CAAC,CAAA;AAED,MAAMC,qBAGL,GAAG;AACF;AACA;AACAb,EAAAA,YAAY,EAAE,KAAK;AACnB;AACAG,EAAAA,MAAM,EAAE,KAAK;AACbE,EAAAA,oBAAoB,EAAE,KAAK;AAC3B;AACAnB,EAAAA,UAAU,EAAE,IAAI;AAChBG,EAAAA,UAAU,EAAE,IAAI;AAChBI,EAAAA,MAAM,EAAE,IAAI;AACZE,EAAAA,SAAS,EAAE,IAAI;AACfE,EAAAA,SAAS,EAAE,IAAI;AACfN,EAAAA,gBAAgB,EAAE,IAAA;AACpB,CAAC,CAAA;AAEYuB,MAAAA,oBAAoB,GAC/BC,IAAuB,IACD;AACtB,EAAA,MAAMC,IAAI,GAAG/B,oBAAoB,CAAC8B,IAAI,CAAC,CAAA;EACvC,IAAI,CAACC,IAAI,EAAE,MAAM,IAAIC,oBAAoB,CAACF,IAAI,CAAU,CAAA;AACxD,EAAA,OAAOC,IAAI,CAAA;AACb,EAAC;AAEYE,MAAAA,uBAAuB,GAClCH,IAA0B,IACD;AACzB,EAAA,MAAMC,IAAI,GAAGjB,uBAAuB,CAACgB,IAAI,CAAC,CAAA;EAC1C,IAAI,CAACC,IAAI,EAAE,MAAM,IAAIC,oBAAoB,CAACF,IAAI,CAAU,CAAA;AACxD,EAAA,OAAOC,IAAI,CAAA;AACb,EAAC;AAEYG,MAAAA,2BAA2B,GACtCJ,IAA0B,IACf;AACX,EAAA,OAAOR,uBAAuB,CAACW,uBAAuB,CAACH,IAAI,CAAC,CAAC,CAAA;AAC/D,EAAC;AAEYK,MAAAA,sBAAsB,GACjCL,IAA8C,IACF;AAC5C,EAAA,MAAMM,aAAa,GAAGR,qBAAqB,CAACE,IAAI,CAAC,CAAA;EACjD,IAAIM,aAAa,KAAKC,SAAS,EAC7B,MAAM,IAAIL,oBAAoB,CAACF,IAAI,CAAU,CAAA;AAC/C,EAAA,IAAIM,aAAa,EAAE,MAAM,IAAIE,6BAA6B,CAACR,IAAI,CAAC,CAAA;EAChE,OAAO;AAAES,IAAAA,MAAM,EAAET,IAAAA;GAAM,CAAA;AACzB;;;;"}