{"version":3,"file":"findListingByTradeState.cjs","sources":["../../../../../src/plugins/auctionHouseModule/operations/findListingByTradeState.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport { AuctionHouse, Listing } from '../models';\nimport type { Metaplex } from '@/Metaplex';\nimport {\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindListingByTradeStateOperation' as const;\n\n/**\n * Finds a Listing by its trade state address.\n *\n * ```ts\n * const nft = await metaplex\n *   .auctionHouse()\n *   .findListingByTradeState({ tradeStateAddress, auctionHouse };\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const findListingByTradeStateOperation =\n  useOperation<FindListingByTradeStateOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindListingByTradeStateOperation = Operation<\n  typeof Key,\n  FindListingByTradeStateInput,\n  Listing\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindListingByTradeStateInput = {\n  /** Seller trade state PDA account encoding the listing order. */\n  tradeStateAddress: PublicKey;\n\n  /** A model of the Auction House related to this listing. */\n  auctionHouse: AuctionHouse;\n\n  /**\n   * Whether or not we should fetch the JSON Metadata for the NFT or SFT.\n   *\n   * @defaultValue `true`\n   */\n  loadJsonMetadata?: boolean;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findListingByTradeStateOperationHandler: OperationHandler<FindListingByTradeStateOperation> =\n  {\n    handle: async (\n      operation: FindListingByTradeStateOperation,\n      metaplex: Metaplex,\n      scope: OperationScope\n    ) => {\n      const { tradeStateAddress } = operation.input;\n\n      const receiptAddress = metaplex.auctionHouse().pdas().listingReceipt({\n        tradeState: tradeStateAddress,\n        programs: scope.programs,\n      });\n\n      return metaplex\n        .auctionHouse()\n        .findListingByReceipt({ receiptAddress, ...operation.input }, scope);\n    },\n  };\n"],"names":["Key","findListingByTradeStateOperation","useOperation","findListingByTradeStateOperationHandler","handle","operation","metaplex","scope","tradeStateAddress","input","receiptAddress","auctionHouse","pdas","listingReceipt","tradeState","programs","findListingByReceipt"],"mappings":";;;;;;AAUA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAG,kCAA2C,CAAA;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaC,gCAAgC,GAC3CC,sBAAY,CAAmCF,GAAG,EAAC;;AAErD;AACA;AACA;AACA;;AA0BA;AACA;AACA;AACA;AACO,MAAMG,uCAA2F,GACtG;AACEC,EAAAA,MAAM,EAAE,OACNC,SAA2C,EAC3CC,QAAkB,EAClBC,KAAqB,KAClB;IACH,MAAM;AAAEC,MAAAA,iBAAAA;KAAmB,GAAGH,SAAS,CAACI,KAAK,CAAA;IAE7C,MAAMC,cAAc,GAAGJ,QAAQ,CAACK,YAAY,EAAE,CAACC,IAAI,EAAE,CAACC,cAAc,CAAC;AACnEC,MAAAA,UAAU,EAAEN,iBAAiB;MAC7BO,QAAQ,EAAER,KAAK,CAACQ,QAAAA;AAClB,KAAC,CAAC,CAAA;AAEF,IAAA,OAAOT,QAAQ,CACZK,YAAY,EAAE,CACdK,oBAAoB,CAAC;MAAEN,cAAc;AAAE,MAAA,GAAGL,SAAS,CAACI,KAAAA;KAAO,EAAEF,KAAK,CAAC,CAAA;AACxE,GAAA;AACF;;;;;"}