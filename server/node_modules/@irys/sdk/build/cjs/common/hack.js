"use strict";
var _a, _b, _c, _d, _e, _f, _g;
var _h, _j, _k, _l, _m, _o;
Object.defineProperty(exports, "__esModule", { value: true });
// crypto hack - this is to stop arweave-js's import time(!!!) check for `subtleCrypto` - which occurs if you try to use the root import of this SDK.
const hack = () => {
    throw new Error(`Unimplemented`);
};
// @ts-expect-error hack
(_a = globalThis.crypto) !== null && _a !== void 0 ? _a : (globalThis.crypto = {});
// @ts-expect-error hack
(_b = (_h = globalThis.crypto).subtle) !== null && _b !== void 0 ? _b : (_h.subtle = {});
// @ts-expect-error hack
(_c = (_j = globalThis.crypto.subtle).generateKey) !== null && _c !== void 0 ? _c : (_j.generateKey = hack);
// @ts-expect-error hack
(_d = (_k = globalThis.crypto.subtle).importKey) !== null && _d !== void 0 ? _d : (_k.importKey = hack);
// @ts-expect-error hack
(_e = (_l = globalThis.crypto.subtle).exportKey) !== null && _e !== void 0 ? _e : (_l.exportKey = hack);
// @ts-expect-error hack
(_f = (_m = globalThis.crypto.subtle).digest) !== null && _f !== void 0 ? _f : (_m.digest = hack);
// @ts-expect-error hack
(_g = (_o = globalThis.crypto.subtle).sign) !== null && _g !== void 0 ? _g : (_o.sign = hack);
exports.default = hack;
//# sourceMappingURL=hack.js.map