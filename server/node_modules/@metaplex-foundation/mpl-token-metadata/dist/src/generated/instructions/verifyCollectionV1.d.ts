/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type VerifyCollectionV1InstructionAccounts = {
    /** Creator to verify, collection update authority or delegate */
    authority?: Signer;
    /** Delegate record PDA */
    delegateRecord?: PublicKey | Pda;
    /** Metadata account */
    metadata: PublicKey | Pda;
    /** Mint of the Collection */
    collectionMint: PublicKey | Pda;
    /** Metadata Account of the Collection */
    collectionMetadata?: PublicKey | Pda;
    /** Master Edition Account of the Collection Token */
    collectionMasterEdition?: PublicKey | Pda;
    /** System program */
    systemProgram?: PublicKey | Pda;
    /** Instructions sysvar account */
    sysvarInstructions?: PublicKey | Pda;
};
export type VerifyCollectionV1InstructionData = {
    discriminator: number;
    verifyCollectionV1Discriminator: number;
};
export type VerifyCollectionV1InstructionDataArgs = {};
export declare function getVerifyCollectionV1InstructionDataSerializer(): Serializer<VerifyCollectionV1InstructionDataArgs, VerifyCollectionV1InstructionData>;
export declare function verifyCollectionV1(context: Pick<Context, 'eddsa' | 'identity' | 'programs'>, input: VerifyCollectionV1InstructionAccounts): TransactionBuilder;
