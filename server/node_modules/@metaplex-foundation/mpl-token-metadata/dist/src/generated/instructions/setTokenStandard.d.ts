/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type SetTokenStandardInstructionAccounts = {
    /** Metadata account */
    metadata?: PublicKey | Pda;
    /** Metadata update authority */
    updateAuthority?: Signer;
    /** Mint account */
    mint: PublicKey | Pda;
    /** Edition account */
    edition?: PublicKey | Pda;
};
export type SetTokenStandardInstructionData = {
    discriminator: number;
};
export type SetTokenStandardInstructionDataArgs = {};
export declare function getSetTokenStandardInstructionDataSerializer(): Serializer<SetTokenStandardInstructionDataArgs, SetTokenStandardInstructionData>;
export declare function setTokenStandard(context: Pick<Context, 'eddsa' | 'identity' | 'programs'>, input: SetTokenStandardInstructionAccounts): TransactionBuilder;
