{"version":3,"file":"pdas.mjs","sources":["../../../../src/plugins/nftModule/pdas.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport { PublicKey } from '@solana/web3.js';\nimport { PROGRAM_ID } from '@metaplex-foundation/mpl-token-metadata';\nimport { BigNumber, Pda, toBigNumber } from '@/types';\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().metadata(...)` instead.\n */\nexport const findMetadataPda = (\n  mint: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().masterEdition(...)` instead.\n */\nexport const findMasterEditionV2Pda = (\n  mint: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('edition', 'utf8'),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().edition(...)` instead.\n */\nexport const findEditionPda = (\n  mint: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('edition', 'utf8'),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().editionMarker(...)` instead.\n */\nexport const findEditionMarkerPda = (\n  mint: PublicKey,\n  edition: BigNumber,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('edition', 'utf8'),\n    Buffer.from(edition.div(toBigNumber(248)).toString()),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().collectionAuthorityRecord(...)` instead.\n */\nexport const findCollectionAuthorityRecordPda = (\n  mint: PublicKey,\n  collectionAuthority: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('collection_authority', 'utf8'),\n    collectionAuthority.toBuffer(),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().useAuthorityRecord(...)` instead.\n */\nexport const findUseAuthorityRecordPda = (\n  mint: PublicKey,\n  useAuthority: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('user', 'utf8'),\n    useAuthority.toBuffer(),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().burner(...)` instead.\n */\nexport const findProgramAsBurnerPda = (\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    Buffer.from('burn', 'utf8'),\n  ]);\n};\n"],"names":["findMetadataPda","mint","programId","PROGRAM_ID","Pda","find","Buffer","from","toBuffer","findMasterEditionV2Pda","findEditionPda","findEditionMarkerPda","edition","div","toBigNumber","toString","findCollectionAuthorityRecordPda","collectionAuthority","findUseAuthorityRecordPda","useAuthority","findProgramAsBurnerPda"],"mappings":"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"}