import { Buffer } from 'buffer';
export type FeatureFlags = boolean[];
/**
 * Serializes an array of boolean into a Buffer. The `byteSize` parameter
 * can be used to create a fixed-size Buffer, otherwise the Buffer will
 * have the minimum amount of bytes required to store the boolean array.
 *
 * Returns a Buffer whose bits are ordered from left to right, unless
 * `backward` is set to true, in which case the bits are ordered from
 * right to left.
 */
export declare const serializeFeatureFlags: (features: FeatureFlags, byteSize?: number, backward?: boolean) => Buffer;
/**
 * Parses a Buffer into an array of booleans using the
 * bits of the buffer. The number of flags can be provided
 * to determine how many booleans to return.
 *
 * Expects the bits in the Buffer to be ordered from left to right,
 * unless `backward` is set to true, we expect the bits to be
 * ordered from right to left.
 */
export declare const deserializeFeatureFlags: (buffer: Buffer, numberOfFlags?: number, backward?: boolean) => FeatureFlags;
