/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type ExtendLutInstructionAccounts = {
    address: PublicKey | Pda;
    authority?: Signer;
    payer?: Signer;
    systemProgram?: PublicKey | Pda;
};
export type ExtendLutInstructionData = {
    discriminator: number;
    addresses: Array<PublicKey>;
};
export type ExtendLutInstructionDataArgs = {
    addresses: Array<PublicKey>;
};
export declare function getExtendLutInstructionDataSerializer(): Serializer<ExtendLutInstructionDataArgs, ExtendLutInstructionData>;
export type ExtendLutInstructionArgs = ExtendLutInstructionDataArgs;
export declare function extendLut(context: Pick<Context, 'eddsa' | 'identity' | 'payer' | 'programs'>, input: ExtendLutInstructionAccounts & ExtendLutInstructionArgs): TransactionBuilder;
